<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>joe di castro</title><link href="http://joedicastro.com" rel="alternate"></link><link href="http://joedicastro.com/feeds/tags/ncurses.atom.xml" rel="self"></link><id>http://joedicastro.com</id><updated>2012-10-19T22:40:00+02:00</updated><entry><title>Productividad &amp; Linux: Ncdu</title><link href="http://joedicastro.com/productividad-linux-ncdu.html" rel="alternate"></link><updated>2012-10-19T22:40:00+02:00</updated><author><name>joe di castro</name></author><id>http://joedicastro.com/productividad-linux-ncdu.html</id><summary type="html">&lt;p&gt;Esta es una pequeña aplicación que sigue la máxima de &lt;a href="http://es.wikipedia.org/wiki/Douglas_McIlroy"&gt;Doug Mcllroy&lt;/a&gt; que
acabaría resumiendo la filosofía Unix &lt;em&gt;"Escribe programas que hagan una sola
cosa y que la hagan bien"&lt;/em&gt;. Y siguiendo la línea de los programas que engloban
esta serie de productividad sobre Linux, es un programa de consola que se maneja
íntegramente con el teclado, y donde además los atajos están inspirados en los
de &lt;a href="http://www.vim.org/"&gt;Vim&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="ncdu"&gt;Ncdu&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://dev.yorhel.nl/ncdu"&gt;Ncdu&lt;/a&gt; es un acrónimo para "NCurses Disk Usage", es decir, "Uso de disco
con interfaz ncurses". Lo que pretendía &lt;a href="https://github.com/yorhel"&gt;Yoran Heling&lt;/a&gt;, su autor, cuando
creo &lt;strong&gt;ncdu&lt;/strong&gt;, era obtener un analizador de uso de disco en consola que fuera lo
suficientemente ligero para poder emplearlo en un servidor remoto a través de
&lt;a href="https://es.wikipedia.org/wiki/Ssh"&gt;ssh&lt;/a&gt;. El gran acierto fue emplear la interfaz &lt;a href="https://es.wikipedia.org/wiki/Ncurses"&gt;ncurses&lt;/a&gt; para
poder navegar por los directorios con extrema facilidad al mismo tiempo que se
presentaba la información en un formato legible y amigable. El segundo y no
menos importante acierto, es emplear los conocidos atajos de teclado de Vim para
navegar entre los directorios.&lt;/p&gt;
&lt;p&gt;El resultado es un analizador de ocupación de disco que es realmente útil, 
agradable de utilizar y que es tan rápido y ligero que se puede emplear sin
interfaz gráfica y en maquinas remotas. Es una gran ayuda para los
administradores de sistemas, que hasta ahora nos teníamos que pelear con otras
herramientas bastante menos agradables. Es la típica herramienta que cuando la
utilizas por primera vez piensas ¿Por qué demonios no la habría encontrado
antes?&lt;/p&gt;
&lt;p style="text-align:center;"&gt;&lt;img src="pictures/ncdu.png" width="700"
height="559" alt="ncdu" /&gt;&lt;/p&gt;

&lt;p&gt;Como se puede ver la interfaz es muy limpia y carece de elementos superfluos que
nos distraigan de lo importante, un pecado que cometen algunas de las
aplicaciones gráficas más famosas, que cuentan con unos gráficos muy bonitos,
pero realmente no demasiado útiles. Es sencillisima de emplear una vez que
conoces los atajos y cuenta con ayuda integrada a la que se accede pulsando
&lt;strong&gt;&lt;code&gt;?&lt;/code&gt;&lt;/strong&gt;. Incluso para aquellos que no están acostumbrados a navegar empleando
las típicas teclas de vim (&lt;strong&gt;h&lt;/strong&gt;, &lt;strong&gt;j&lt;/strong&gt;, &lt;strong&gt;k&lt;/strong&gt;, &lt;strong&gt;l&lt;/strong&gt;), se pueden utilizar las
teclas de dirección.&lt;/p&gt;
&lt;h3 id="caracter+sticas"&gt;Características&lt;/h3&gt;
&lt;p&gt;Un programa de este tipo no necesita una funcionalidad muy elevada, pero
destacare aquí algunas de las posibilidades que nos ofrece:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Podemos ordenar los directorios/ficheros en función de su nombre o de su
  tamaño y en orden ascendente o descendente &lt;/li&gt;
&lt;li&gt;Se pueden eliminar directamente ficheros o directorios desde la aplicación,
  aunque también podemos iniciarla en modo solo lectura para prevenir borrados
  accidentales&lt;/li&gt;
&lt;li&gt;Se muestra o no, el porcentaje de espacio ocupado de forma gráfica y/o numérica&lt;/li&gt;
&lt;li&gt;El espacio empleado en disco puede hacer referencia al real o al aparente&lt;/li&gt;
&lt;li&gt;Los directorios y ficheros ocultos pueden ser o no mostrados&lt;/li&gt;
&lt;li&gt;Nos permite recalcular el espacio ocupado de un directorio concreto sin
  necesidad de volver a recalcular todo &lt;/li&gt;
&lt;li&gt;Tenemos la posibilidad de volcar la información a un archivo, que puede
  también ser leído por el mismo programa&lt;/li&gt;
&lt;li&gt;Es posible mostrar la información de un elemento individual en un cuadro
  emergente&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;La verdad es que lo único que hecho en falta en el programa es quizás un poco de
color para distinguir entre ficheros y directorios de forma más visual. Por lo
demás, es muy rápido calculando el espacio, no he hecho una comparación directa,
pero me parece ligeramente más rápido que Baobab.&lt;/p&gt;
&lt;h3 id="alternativas"&gt;Alternativas&lt;/h3&gt;
&lt;p&gt;Existen varias alternativas decentes como aplicaciones gráficas, como los
conocidos &lt;a href="http://www.marzocca.net/linux/baobab/"&gt;Baobab&lt;/a&gt; (que viene con las herramientas de Gnome) o
&lt;a href="http://www.jgoodies.com/freeware/jdiskreport/"&gt;JDiskReport&lt;/a&gt;. Después existen múltiples alternativas tanto en modo
gráfico como en modo consola que, sinceramente, no puedo recomendar a nadie,
bien porque son más vistosos que prácticos o bien porque son directamente
insufribles. Existe una alternativa en modo texto que algunos prefieren a ncdu
que es &lt;a href="http://gt5.sourceforge.net/"&gt;gt5&lt;/a&gt;.&lt;/p&gt;</summary><category term="productividad"></category><category term="linux"></category><category term="ncurses"></category><category term="tamaño"></category></entry><entry><title>Productividad &amp; Linux: Ranger</title><link href="http://joedicastro.com/productividad-linux-ranger.html" rel="alternate"></link><updated>2012-10-18T21:50:00+02:00</updated><author><name>joe di castro</name></author><id>http://joedicastro.com/productividad-linux-ranger.html</id><summary type="html">&lt;p&gt;Algunos pensarán, de acuerdo, podemos entender que prefieras un &lt;a href="http://joedicastro.com/productividad-en-el-escritorio-linux-tiling.html"&gt;gestor de
ventanas de mosaico&lt;/a&gt;, o que emplees aplicaciones como &lt;a href="http://joedicastro.com/productividad-linux-pentadactyl.html"&gt;Pentadactyl&lt;/a&gt;,
&lt;a href="http://joedicastro.com/productividad-linux-newsbeuter.html"&gt;Newsbeuter&lt;/a&gt;, &lt;a href="http://joedicastro.com/productividad-linux-zathura.html"&gt;Zathura&lt;/a&gt; o &lt;a href="http://joedicastro.com/productividad-linux-turses.html"&gt;Turses&lt;/a&gt;, pero &lt;strong&gt;Ranger&lt;/strong&gt;... ya es
demasiado. ¿A quien en su sano juicio se le ocurriría utilizar semejante
engendro? A mí, y no solo lo utilizo a diario, si no que además opino que es
quizás la mejor aplicación que he descubierto en el último año y medio. Y esto
último es mucho decir para alguien, que como yo, está continuamente buscando
formas de mejorar su modo de trabajo.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://ranger.nongnu.org/"&gt;Ranger&lt;/a&gt; es un administrador de archivos en modo texto. Pero no es un
administrador de archivos en modo texto clásico a dos columnas, como el norton
commander y similares. No, Ranger es una pequeña joya con un planteamiento
distinto y tan potente, que puede conseguir que olvides que no podías vivir sin
un gestor de archivos gráfico como &lt;a href="https://es.wikipedia.org/wiki/Nautilus_(software)"&gt;Nautilus&lt;/a&gt;, &lt;a href="https://es.wikipedia.org/wiki/Konqueror"&gt;Konqueror&lt;/a&gt;,
&lt;a href="https://es.wikipedia.org/wiki/Dolphin_(administrador_de_archivos)"&gt;Dolphin&lt;/a&gt; o &lt;a href="https://es.wikipedia.org/wiki/Thunar"&gt;Thunar&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="ranger"&gt;Ranger&lt;/h2&gt;
&lt;p&gt;Tengo que estar enormemente agradecido a su autor, &lt;a href="https://github.com/hut"&gt;Roman Zimbelmann&lt;/a&gt; no
solo por su trabajo, si no por mostrarme que incluso en modo texto, se puede
revolucionar el mundo de la usabilidad. Evidentemente, en una aplicación que
basa su control en el teclado (tiene un soporte muy básico del ratón), es
requisito imprescindible invertir algún tiempo en aprender a utilizarlo, ya que
no es tan intuitivo como una aplicación gráfica. A menos que seas un usuario
típico de &lt;a href="https://es.wikipedia.org/wiki/Vim"&gt;Vim&lt;/a&gt;, entonces te encontrarás como en casa. Una vez que dominas
esta aplicación, el moverse entre los directorios y el realizar operaciones se
hace a velocidad de vértigo y con control absoluto (siempre que no seas un
manazas con el teclado).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Ranger&lt;/strong&gt; está desarrollado en &lt;strong&gt;Python&lt;/strong&gt; y emplea una interfaz ncurses igual que
&lt;a href="http://joedicastro.com/productividad-linux-turses.html"&gt;Turses&lt;/a&gt;. Al contrario de lo que algunos puedan pensar, el estar
desarrollado en Python no lo convierte ni en pesado ni en lento, si no que se
mueve a velocidad endiablada y consume una cantidad de memoria ridícula
comparada con cualquier gestor de archivos gráfico.&lt;/p&gt;
&lt;p style="text-align:center;"&gt;&lt;img src="pictures/ranger.png" width="700"
height="437" alt="Ranger" /&gt;&lt;/p&gt;

&lt;p&gt;Aquí puede verse una imagen típica de ranger, visualizando el contenido de un
directorio y previsualizando el contenido de un fichero, en este caso un fichero
de código python.&lt;/p&gt;
&lt;h3 id="caracter+sticas"&gt;Características&lt;/h3&gt;
&lt;p&gt;¿Qué se puede hacer con ranger?, bueno, quizás es mejor preguntarse que no se
puede hacer con Ranger. Prácticamente todas las funciones a las que estés
acostumbrado en un administrador de archivos gráfico se pueden realizar con
Ranger. Vamos primero a ver un resumen de sus características:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Soporte de UTF-8 por defecto&lt;/li&gt;
&lt;li&gt;Visualización en múltiples columnas&lt;/li&gt;
&lt;li&gt;Previsualización del directorio o fichero seleccionado&lt;/li&gt;
&lt;li&gt;Operaciones comunes sobre los ficheros. Crear, copiar, borrar, cambiar
  atributos (&lt;code&gt;chmod&lt;/code&gt;), etc...&lt;/li&gt;
&lt;li&gt;Combinaciones de teclado y consola inspiradas en Vim&lt;/li&gt;
&lt;li&gt;Autodetección de tipos de fichero y apertura de los mismos con el programa
  adecuado&lt;/li&gt;
&lt;li&gt;Permite establecer etiquetas y marcadores sobre archivos y directorios&lt;/li&gt;
&lt;li&gt;Empleo de pestañas. Nos permite navegar por varios directorios simultáneamente
  sin necesidad de abrir otra instancia del programa. Además se pueden realizar
  operaciones entre ellas&lt;/li&gt;
&lt;li&gt;Muestra una barra de progreso para las operaciones que lo necesitan&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Conviene dejar claro que no es un programa para &lt;em&gt;impacientes&lt;/em&gt;, hacerse con él y
sus innumerables opciones requiere tiempo. Hay que leerse la ayuda del programa
y practicar con él. A su vez, si queremos personalizar las opciones o ampliarlo,
debemos comprender como funcionan sus archivos de configuración, mejor aún si
tenemos conocimientos de Python. La documentación de su web, así como la de sus
páginas &lt;em&gt;man&lt;/em&gt; está un poco desactualizada, por lo que sacarle todo su jugo
requiere algo de paciencia.&lt;/p&gt;
&lt;h3 id="ejemplos"&gt;Ejemplos&lt;/h3&gt;
&lt;p&gt;Voy a intentar dar algo de visibilidad a algunas de las capacidades que nos
ofrece ranger empleando una par de ejemplos que lo ilustren.&lt;/p&gt;
&lt;p&gt;En el siguiente ejemplo vemos la previsualización que hace ranger en función del
tipo de fichero que se trate.&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;iframe src="http://player.vimeo.com/video/62061254?title=0&amp;amp;byline=0&amp;amp;portrait=0" 
width="700" height="438"&gt;
&lt;/iframe&gt;
&lt;p&gt;Previsualización de archivos en ranger con varios tipos de archivo.
Recomiendo ver en alta resolución y a pantalla completa.&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;La previsualización de imágenes en ASCII puede parecer una tontería, pero
resulta muy útil a la hora de diferenciar entre distintas imágenes con nombre
muy parecido. El fichero en HTML está renderizado en vez de mostrarnos el texto
plano, algo más amigable. También se agradece mucho el que los ficheros de
código se vean con resaltado de sintaxis.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Conviene aclarar que para realizar esta previsualización es necesario tener
instalado una serie de pequeñas aplicaciones que se detallan en el sitio de
ranger como dependencias.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Aquí vemos como se abren automáticamente los programas adecuados en función del
tipo de archivo (se puede configurar que aplicaciones emplear y cuales usar en
cada momento)&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;iframe src="http://player.vimeo.com/video/62634892?title=0&amp;amp;byline=0&amp;amp;portrait=0" 
width="700" height="438"&gt;
&lt;/iframe&gt;
&lt;p&gt;Ejecución automática de aplicaciones en función del tipo de archivo.
Recomiendo ver en alta resolución y a pantalla completa.&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;En el caso del fichero Torrent, al que no tengo asociada ninguna aplicación en
ranger, me abre un comando en el que puedo especificar directamente la
aplicación que deseo emplear para gestionarlo. En este caso, ninguna. En el
archivo comprimido solo me muestra el contenido del mismo, podría asociarle
alguna aplicación, pero ya tengo comandos para manejarlos dentro del propio
ranger, algo que veremos a continuación.&lt;/p&gt;
&lt;h2 id="mi_configuraci+n"&gt;Mi configuración&lt;/h2&gt;
&lt;p&gt;No he personalizado mucho mi configuración de momento, pero quien quiera echarle
un vistazo puede hacerlo en mi repositorio dotfiles en &lt;a href="http://github.com/joedicastro/dotfiles"&gt;GitHub&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="archivos_de_configuraci+n"&gt;Archivos de configuración&lt;/h3&gt;
&lt;p&gt;Para configurar ranger necesitamos editar ciertos archivos, que crearemos por
primera vez con el siguiente comando:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;ranger --copy-config&lt;span class="o"&gt;=&lt;/span&gt;all
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;qué nos creara los siguientes archivos por defecto en la carpeta
&lt;code&gt;~/.config/ranger/&lt;/code&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;commands.py&lt;/code&gt; &lt;em&gt;(python)&lt;/em&gt;, en este archivo se configuran los comandos a emplear
  en la línea de comandos de ranger&lt;/li&gt;
&lt;li&gt;&lt;code&gt;options.py&lt;/code&gt; &lt;em&gt;(python)&lt;/em&gt;, el fichero de opciones principal de ranger&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rc.conf&lt;/code&gt; &lt;em&gt;(texto)&lt;/em&gt;, aquí configuramos los atajos de teclado de ranger&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rifle.conf&lt;/code&gt; &lt;em&gt;(texto)&lt;/em&gt;, para establecer los programas que ejecutaran o abrirán
  un tipo de archivo en orden de preferencia&lt;/li&gt;
&lt;li&gt;&lt;code&gt;scope.sh&lt;/code&gt; &lt;em&gt;(bash)&lt;/em&gt;, los programas empleados para previsualizar un determinado
  tipo de archivo&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Adicionalmente, con el uso se añadirán tres ficheros más: &lt;code&gt;bookmarks&lt;/code&gt;, &lt;code&gt;history&lt;/code&gt;
y &lt;code&gt;tagged&lt;/code&gt; que guardarán los marcadores, la historia de comandos y las etiquetas
respectivamente.&lt;/p&gt;
&lt;h3 id="gestionar_la_papelera"&gt;Gestionar la papelera&lt;/h3&gt;
&lt;p&gt;Por defecto ranger no contempla la gestión de la papelera de Linux que
implementan escritorios como Gnome. Aunque no empleo ningún entorno
de escritorio ni gestores de archivos gráficos, si me interesa gestionar la
papelera, pues cada vez más aplicaciones la emplean para eliminar los archivos.
De hecho en &lt;em&gt;bash&lt;/em&gt; y &lt;em&gt;zsh&lt;/em&gt; tengo un alias para &lt;code&gt;rm&lt;/code&gt; que mueve los archivos a la
papelera en vez de eliminarlos.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nb"&gt;alias &lt;/span&gt;&lt;span class="nv"&gt;rm&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;mv --target-directory ~/.local/share/Trash/files&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Para gestionar la papelera desde ranger, añado dos atajos de teclado y un
comando editando varios archivos de configuración de la siguiente manera:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Mandar archivos a la papelera&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Para mandar a la papelera lo que tengamos seleccionado actualmente, en lugar de
eliminarlo directamente, añadimos esta línea al fichero &lt;code&gt;rc.conf&lt;/code&gt;&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c"&gt;# move to trash&lt;/span&gt;
&lt;span class="nb"&gt;map&lt;/span&gt; &lt;span class="n"&gt;DD&lt;/span&gt; &lt;span class="n"&gt;shell&lt;/span&gt; &lt;span class="n"&gt;mv&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="o"&gt;~/.&lt;/span&gt;&lt;span class="n"&gt;local&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;share&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Trash&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;files&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;de este modo, cada vez que pulsemos &lt;strong&gt;&lt;code&gt;DD&lt;/code&gt;&lt;/strong&gt; el contenido seleccionado es movido
al directorio donde tenemos nuestra papelera.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Movernos a la papelera&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Del mismo modo que ranger provee por defecto de atajos de teclado para movernos
al directorio &lt;code&gt;home&lt;/code&gt;, al directorio raiz, etc, he añadido un atajo de teclado
siguiendo el mismo criterio para acceder a nuestra papelera. Añadimos lo
siguiente al fichero &lt;code&gt;rc.conf&lt;/code&gt;&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c"&gt;# go to trash&lt;/span&gt;
&lt;span class="nb"&gt;map&lt;/span&gt; &lt;span class="n"&gt;gp&lt;/span&gt; &lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="o"&gt;~/.&lt;/span&gt;&lt;span class="n"&gt;local&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;share&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Trash&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;files&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;así, pulsando &lt;strong&gt;&lt;code&gt;gp&lt;/code&gt;&lt;/strong&gt; vamos directamente a la papelera, estemos donde estemos.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Vaciar la papelera&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Para vaciar la papelera opto por emplear un comando, para ello tenemos que
editar otro fichero, &lt;code&gt;commands.py&lt;/code&gt;, y añadir lo siguiente&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Command&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="sd"&gt;    :empty&lt;/span&gt;

&lt;span class="sd"&gt;    Empties the trash directory ~/.local/share/Trash/files&lt;/span&gt;

&lt;span class="sd"&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;execute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;rm -rf ~/.local/share/Trash/files/{*,.[^.]*}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;por lo que vaciar la papelera se convierte en algo tan simple como teclear
&lt;strong&gt;&lt;code&gt;:empty&lt;/code&gt;&lt;/strong&gt; o para los más cómodos &lt;strong&gt;&lt;code&gt;:em↹&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id="desmontar_una_unidad_con_udiskie"&gt;Desmontar una unidad con udiskie&lt;/h3&gt;
&lt;p&gt;Dada mi "particular" configuración, ya que no empleo ningún escritorio, empleo
la herramienta &lt;a href="https://bitbucket.org/byronclark/udiskie"&gt;udiskie&lt;/a&gt; para automontar unidades de almacenamiento
externas, como unidades USB o tarjetas de memoria. El montado se hace de forma
automática y solo el desmontado ha de hacerse de forma manual. Ya que no quiero
teclear el comando cada vez que desee desmontar una unidad, lo que hago es
hacerlo desde ranger. En el fichero &lt;code&gt;rc.conf&lt;/code&gt; mapeamos este atajo&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c"&gt;# umount a drive with udiskie&lt;/span&gt;
&lt;span class="nb"&gt;map&lt;/span&gt; &lt;span class="n"&gt;un&lt;/span&gt; &lt;span class="n"&gt;shell&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="n"&gt;udiskie&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;umount&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="o"&gt;/%&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;así para desmontar una unidad inicio ranger (en mi caso &lt;strong&gt;&lt;code&gt;Win + F1&lt;/code&gt;&lt;/strong&gt;), me
dirijo a las unidades externas montadas, &lt;strong&gt;&lt;code&gt;gm&lt;/code&gt;&lt;/strong&gt;, selecciono la unidad deseada
y la desmonto, &lt;strong&gt;&lt;code&gt;un&lt;/code&gt;&lt;/strong&gt;. Un proceso que me lleva apenas dos segundos, sin
abandonar las manos del teclado, compárese con hacerlo con un ratón y un entorno
gráfico.&lt;/p&gt;
&lt;h3 id="expulsar_un_cddvd"&gt;Expulsar un CD/DVD&lt;/h3&gt;
&lt;p&gt;Del mismo modo, en lugar de abrir un terminal y escribir el comando &lt;code&gt;eject&lt;/code&gt;, en
determinadas circunstancias, por ejemplo al acabar de examinar el contenido de
un disco, prefiero hacerlo directamente desde ranger. Para ello en el fichero
&lt;code&gt;rc.conf&lt;/code&gt; creamos este atajo de teclado&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c"&gt;# eject a CD-ROM/DVD&lt;/span&gt;
&lt;span class="nb"&gt;map&lt;/span&gt; &lt;span class="n"&gt;ej&lt;/span&gt; &lt;span class="n"&gt;shell&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="n"&gt;eject&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3 id="trabajar_con_archivos_comprimidos"&gt;Trabajar con archivos comprimidos&lt;/h3&gt;
&lt;p&gt;Estos comandos los he sacado de el &lt;a href="https://wiki.archlinux.org/index.php/Ranger"&gt;Wiki de Arch Linux&lt;/a&gt; y los he adaptado
a la versión de ranger que estoy empleando en este momento, la 1.5.5&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Extraer los ficheros de un archivo comprimido&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Con el comando &lt;strong&gt;&lt;code&gt;:extracthere&lt;/code&gt;&lt;/strong&gt; extraemos el contenido de un archivo/s
comprimido que previamente habremos seleccionado para copia (es decir empleando
el atajo &lt;strong&gt;&lt;code&gt;yy&lt;/code&gt;&lt;/strong&gt;). El contenido se extrae en el directorio en el que nos
encontremos actualmente. Es muy comodo para extraer múltiples archivos
comprimidos a la vez, si quisieramos descomprimir solo un archivo y en el mismo
directorio en el que este se encuentra, podríamos emplear el atajo &lt;strong&gt;&lt;code&gt;1l&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Para añadir el comando a ranger, tenemos que insertar esta clase en el fichero
&lt;code&gt;commands.py&lt;/code&gt;&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;extracthere&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Command&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;execute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot; Extract copied files to current directory &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
        &lt;span class="n"&gt;copied_files&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;tuple&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;copy&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;copied_files&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt;

        &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;refresh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="n"&gt;cwd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_directory&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;original_path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;cwd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;load_content&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

        &lt;span class="n"&gt;one_file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;copied_files&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="n"&gt;cwd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;thisdir&lt;/span&gt;
        &lt;span class="n"&gt;original_path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cwd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;
        &lt;span class="n"&gt;au_flags&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;-X&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cwd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="n"&gt;au_flags&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;()[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:]&lt;/span&gt;
        &lt;span class="n"&gt;au_flags&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;-e&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;copy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;clear&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cut&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;copied_files&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;descr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;extracting: &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;basename&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;one_file&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;descr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;extracting files from: &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;basename&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;one_file&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dirname&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;obj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;CommandLoader&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;aunpack&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;au_flags&lt;/span&gt; \
                &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;copied_files&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;descr&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;descr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;signal_bind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;after&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;refresh&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loader&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Crear un archivo comprimido&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Este comando te permite seleccionar uno o varios ficheros y crear un archivo
comprimido al llamar al comando &lt;strong&gt;&lt;code&gt;:compress&lt;/code&gt;&lt;/strong&gt;. Este comando te permite (a
través del autocompletado) darle un nombre automático a partir del directorio o
uno personalizado. Te permite además seleccionar el tipo de compresión en
función de la extension empleada.&lt;/p&gt;
&lt;p&gt;En el fichero &lt;code&gt;commands.py&lt;/code&gt; añadimos el siguiente código.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;compress&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Command&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;execute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot; Compress marked files to current directory &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
        &lt;span class="n"&gt;cwd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;thisdir&lt;/span&gt;
        &lt;span class="n"&gt;marked_files&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cwd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_selection&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;marked_files&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt;

        &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;refresh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="n"&gt;cwd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_directory&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;original_path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;cwd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;load_content&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

        &lt;span class="n"&gt;original_path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cwd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;
        &lt;span class="n"&gt;parts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;au_flags&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;parts&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:]&lt;/span&gt;
        &lt;span class="n"&gt;descr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;compressing files in: &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;basename&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;parts&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
        &lt;span class="n"&gt;obj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;CommandLoader&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;apack&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;au_flags&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; \
                &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;relpath&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cwd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;marked_files&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;descr&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;descr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;signal_bind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;after&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;refresh&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loader&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;tab&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot; Complete with current folder name &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
        &lt;span class="n"&gt;extension&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;.zip&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;.tar.gz&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;.rar&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;.7z&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;compress &amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;basename&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;thisdir&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;ext&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;ext&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;extension&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="productividad"></category><category term="linux"></category><category term="python"></category><category term="ncurses"></category></entry><entry><title>Productividad &amp; Linux: Turses</title><link href="http://joedicastro.com/productividad-linux-turses.html" rel="alternate"></link><updated>2012-06-21T22:50:00+02:00</updated><author><name>joe di castro</name></author><id>http://joedicastro.com/productividad-linux-turses.html</id><summary type="html">&lt;p&gt;Que medio mundo parece estar conectado a &lt;a href="http://twitter.com"&gt;Twitter&lt;/a&gt; no es
ninguna novedad. Y que si sigues a un buen número de personas, el intentar estar
al tanto de todo lo que ocurre es una temeridad, tampoco debería sorprender a
nadie. De hecho, dado su éxito y el enorme flujo de información que circula por
él, se han desarrollado cientos de herramientas para gestionarlo.&lt;/p&gt;
&lt;p&gt;Desde que cree mi cuenta en twitter, he probado unas cuantas, unas veinte (y
solo en Linux, en el resto uso la web). La primera, y la elección más obvia ya
que por aquel entonces usaba Ubuntu, fue &lt;strong&gt;Gwibber&lt;/strong&gt; . Luego cansado de sus
muchos problemas, probé un sinnúmero de aplicaciones, solo merece la pena
reseñar una: &lt;a href="http://hotot.org/"&gt;Hotot&lt;/a&gt;. Es la mejor aplicación gráfica para twitter en Linux
que conozco.&lt;/p&gt;
&lt;p&gt;Pero guiado por el mismo objetivo de &lt;a href="http://joedicastro.com/tag/productividad.html"&gt;mejorar la productividad&lt;/a&gt; en mis
herramientas habituales de trabajo, me lancé a la búsqueda de un cliente de
twitter que encajara en la misma filosofía. No hay muchas alternativas, la
mayoría, hay que reconocerlo, son demasiado "crudas" incluso para mí, que soy un
amante de la consola. Pero entonces dí con una pequeña joya, &lt;a href="http://tyrs.nicosphere.net/"&gt;Tyrs&lt;/a&gt;,
desarrollada por &lt;a href="https://github.com/Nic0"&gt;Nicolas Paris&lt;/a&gt;. Era una herramienta sencilla, pero que
cumplía muy bien con todo lo que buscaba de ella.  Pero un buen día, Nicolas, en
su afán por mejorarla, empezó a reescribir la herramienta empleando una nueva
librería para gestionar el interfaz. Las primeras versiones tenían varios fallos
y Nicolas pronto se vio desbordado por una tarea que no le apetecía continuar y
a la que no podía dedicar más tiempo. Y &lt;a href="http://www.nicosphere.net/small-projects-life-depends-on-his-owner/"&gt;decidió abandonar el proyecto&lt;/a&gt;,
con la esperanza de que alguien se atreviera a retomarlo. Cuando leí la entrada
de su blog no perdí la esperanza del todo, al fin y al cabo, estaba desarrollado
en Python, un lenguaje con el que me desenvuelvo. Mientras esperaba que hacer,
seguí usando la última versión estable a diario. Pero entonces, apareció el
milagro, &lt;strong&gt;Turses&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id="turses"&gt;Turses&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/alejandrogomez/"&gt;Alejandro Gómez&lt;/a&gt;, un usuario de &lt;strong&gt;Tyrs&lt;/strong&gt; &lt;a href="http://dialelo.com/Python/turses/2012/03/02/turses-un-cliente-de-twitter-con-interfaz-ncurses.html"&gt;se lanzó&lt;/a&gt; a crear su
propia aplicación basándose en él. Y no solo garantizaba la continuidad del buen
trabajo empezado por Nicolas, si no que llegaba lleno de ideas frescas y muchas
ganas de hacerlo bien. El propio Nicolas &lt;a href="http://www.nicosphere.net/turses-a-fork-from-tyrs-ncurses-twitter-client/"&gt;le felicitó&lt;/a&gt; por el trabajo
y la iniciativa. A día de hoy, el proyecto se sigue desarrollando, y aunque aún
tiene algunas metas marcadas por delante, la aplicación es perfectamente usable
en el día a día, de hecho es mi cliente habitual.&lt;/p&gt;
&lt;p&gt;Como ya se habrá podido deducir, &lt;a href="https://github.com/alejandrogomez/Turses"&gt;Turses&lt;/a&gt; es un cliente de twitter para la
consola con interfaz &lt;a href="https://es.wikipedia.org/wiki/Ncurses"&gt;ncurses&lt;/a&gt;. Está desarrollado en Python y emplea la
librería &lt;a href="http://excess.org/urwid/"&gt;Urwid&lt;/a&gt; para crear la interfaz en curses. Lo mejor de esta
aplicación es que emplea atajos de teclado inspirados en &lt;strong&gt;Vim&lt;/strong&gt;  y es
totalmente controlable desde el teclado. Esto unido a que emplea una interfaz
basada en texto, la convierten en la aplicación más ágil de todas las que haya
probado.  &lt;strong&gt;Hotot&lt;/strong&gt; también tiene algunas combinaciones de teclas muy útiles,
pero ni se acercan a lo que &lt;strong&gt;Turses&lt;/strong&gt;  te permite.&lt;/p&gt;
&lt;p&gt;Aquí se puede ver el aspecto por defecto de Turses&lt;/p&gt;
&lt;p style="text-align:center;"&gt;&lt;img src="pictures/turses.png" width="700"
height="290" alt="Turses" /&gt;&lt;/p&gt;

&lt;p&gt;Pero no se acaban ahí las bondades de Turses, tiene algunas características
geniales como la gestión dinámica de bufferes (líneas temporales) y de columnas.
Demos un repaso a lo que nos permite la aplicación:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Múltiples líneas temporales&lt;/strong&gt;  (&lt;em&gt;bufferes&lt;/em&gt;). Es decir, nos permite consultar
  los tweets de la gente a la que seguimos, los nuestros, menciones, etc. Es
  decir, los bufferes habituales, incluidos conversaciones, búsquedas y
  hashtags.  Y podemos tenerlas simultáneamente abiertas y navegar entre ellas
  muy fácilmente.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Múltiples columnas&lt;/strong&gt;. En cada columna se sitúa un buffer, y podemos añadir
  o quitar columnas a voluntad de forma muy sencilla. Es decir, que podemos
  visualizar un solo buffer de forma predefinida, o podemos ver varios a la vez
  distribuidos en múltiples columnas.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Tweet, Reply, Retweet, Borrar&lt;/strong&gt;. Vamos, que permite las operaciones
  habituales con los tweets. Además se puede hacer un Retweet editando el texto,
  algo que parece obvio, pero que en algunas aplicaciones no es tan sencillo.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Seguir/dejar de seguir&lt;/strong&gt; a un usuario. Podemos hacerlo bien a través de un
  tweet o bien introduciendo el nombre del usuario.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Des/Marcar como favorito&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Enviar mensajes directos&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Abrir URLs en un navegador&lt;/strong&gt;. Nos permite abrir las direcciones que aparecen
  en un tweet, así como abrir el propio tweet.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Visualizar conversaciones&lt;/strong&gt;. Podemos abrir un nuevo buffer con la
  conversación relacionada con un tweet.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Contador de los no leídos&lt;/strong&gt; funciona para todos los bufferes y nos permite
  ponerlo a cero manualmente cuando queremos ignorar algunos no leídos.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Búsqueda&lt;/strong&gt;. Se puede buscar tanto por usuario como por termino.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Ver los tweets de cualquier usuario &lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Visualizar el perfil de un usuario&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Totalmente personalizable&lt;/strong&gt; y la configuración se guarda en un fichero de
  texto plano.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Múltiples cuentas&lt;/strong&gt;, eso sí, una por ejecución.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Ayuda en línea&lt;/strong&gt; con todas las combinaciones de teclas posibles. Accesible a
  través de la tecla &lt;strong&gt;&lt;code&gt;?&lt;/code&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Interfaz de Turses mostrando múltiples columnas&lt;/p&gt;
&lt;p style="text-align:center;"&gt;&lt;img src="pictures/turses_2cols.png" width="700"
height="285" alt="Turses con multiples columnas" /&gt;&lt;/p&gt;

&lt;p&gt;Y entre las metas que tiene marcadas su autor, nos encontramos con el soporte
para listas, streaming, notificaciones emergentes y múltiples sesiones. Estoy
seguro de que las acabará incorporando, le sobra capacidad. Aunque he de reseñar
que actualmente he contribuido con una porción de código minúscula al proyecto y
que tengo la intención de seguir colaborando en todo lo que pueda. Si eres
programador Python y te apetece echar una mano, &lt;a href="https://github.com/alejandrogomez/Turses"&gt;anímate&lt;/a&gt;, Alejandro es muy
receptivo y un tío muy majo que estará encantado con toda la ayuda que le
podamos dar.&lt;/p&gt;
&lt;h2 id="mi_configuraci+n"&gt;Mi configuración&lt;/h2&gt;
&lt;p&gt;Si a alguien le puede servir como inspiración mi configuración, esta disponible
en &lt;a href="http://github.com/joedicastro/dotfiles"&gt;GitHub&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Turses mostrando la información del perfil del autor de un tweet&lt;/p&gt;
&lt;p style="text-align:center;"&gt;&lt;img src="pictures/turses_uinfo.png" width="700"
height="429" alt="Turses mostrando la información de un usuario" /&gt;&lt;/p&gt;

&lt;h2 id="alternativas"&gt;Alternativas&lt;/h2&gt;
&lt;p&gt;Solo conozco dos alternativas en la misma línea que merezca la pena reseñar, las
demás que he probado no estaban a la altura:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.vim.org/scripts/script.php?script_id=2204"&gt;TwitVim&lt;/a&gt;, es un plugin para Vim. Funciona fantásticamente bien, eso sí,
  solo apropiado para usuarios de Vim. La probé un tiempo y me gusto, pero
  personalmente no me gusta emplear Vim para esta tarea y Turses es bastante más
  manejable.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.floodgap.com/software/ttytter/"&gt;TTYtter&lt;/a&gt;, está escrito en Perl y no tiene interfaz. Trabaja en la línea
  de comandos a modo de interprete. Funciona muy bien y también lo usé un
  tiempo, pero su propio funcionamiento le reste eficiencia comparado con
  Turses.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary><category term="productividad"></category><category term="linux"></category><category term="ncurses"></category><category term="python"></category><category term="twitter"></category></entry><entry><title>Productividad &amp; Linux: Newsbeuter</title><link href="http://joedicastro.com/productividad-linux-newsbeuter.html" rel="alternate"></link><updated>2012-06-18T23:26:00+02:00</updated><author><name>joe di castro</name></author><id>http://joedicastro.com/productividad-linux-newsbeuter.html</id><summary type="html">&lt;p&gt;Uno de los pilares de la productividad es, como no, la gestión del tiempo. Otro
de los pilares fundamentales es, inexorablemente, el conocimiento. Si pierdes el
tiempo en tareas irrelevantes (o directamente procrastinando), tu productividad
se resiente irremediablemente. Si no tiene los conocimientos adecuados y
suficientes, consumes el tiempo aprendiendo a hacerlo o directamente lo pierdes
haciéndolo mal. Hoy en día, rara es la actividad donde la formación continua no
sea un requisito indispensable, no ya para mejorar o mantener tu rendimiento, si
no simplemente para poder seguir ejerciéndola.&lt;/p&gt;
&lt;p&gt;Por lo tanto nos vemos condenados a intentar mantenernos al día (y ampliar
conocimientos), mientras que procuramos dedicarle el menor tiempo posible para
no menoscabar nuestro rendimiento. Tal delicado equilibrio no es poca hazaña en
nuestros días. Nos vemos inundados de tal cantidad de información, que el
filtrado es la única manera de intentar sobrevivir a esa enorme vorágine de
datos a la que nos enfrentamos. Afortunadamente tenemos herramientas. Desde hace
muchos años he confiado esta tarea a emplear fuentes &lt;strong&gt;RSS&lt;/strong&gt; de calidad y una
buena herramienta para gestionarlas.&lt;/p&gt;
&lt;h2 id="mi_b+squeda_del_cliente_rss_ideal"&gt;Mi búsqueda del cliente RSS ideal&lt;/h2&gt;
&lt;p&gt;He empleado muchas herramientas distintas para esta tarea, siempre intentando
tener la más idónea para filtrar muchas fuentes RSS en el menor tiempo posible,
sin pasar por alto lo que me interesa conocer. Algunas muy buenas, que usaba
cuando aún empleaba Windows como SO principal, ya no existen. En Linux he pasado
por las más conocidas (en orden cronológico):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://liferea.sourceforge.net/"&gt;Liferea&lt;/a&gt;, era muy buena cuando la deje, lo de mostrar los comentarios en
  las entradas es algo que no he vuelto a ver en ninguna otra herramienta. Pero
  después de varios años de uso, la abandoné cuando se había convertido en
  insufriblemente lenta.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://userbase.kde.org/Akregator"&gt;Akregator&lt;/a&gt;, no era para mí, nunca acabe encontrándome a gusto con ella.
  Lo hacía todo medianamente bien, pero no destacaba en nada, pronto la
  abandoné.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.blogbridge.com/"&gt;Blogbride&lt;/a&gt;, su planteamiento es diferente al resto. Es una buena
  aplicación y estuve con ella muchos meses. Pero siempre seguí buscando algo
  más eficiente.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.rssowl.org/"&gt;RSSOwl&lt;/a&gt;, la mejor aplicación para leer RSS para escritorio que he
  conocido. La he usado durante años. Está construida sobre Eclipse. Ofrece
  muchas posibilidades de personalización y filtrado. Es muy rápida, pero debido
  a que depende de Eclipse y java, si manejas un número considerable de fuentes
  (+1000 en aquella época), se puede volver un poco pesada. Además, si como yo,
  dejabas muchos artículos para leer en otro momento, la base de datos crecía de
  tal manera, que podía llegar a ser muy lenta. La abandoné buscando algo aún
  más ágil y productivo.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://es.wikipedia.org/wiki/Google_Reader"&gt;Google Reader&lt;/a&gt;, decidí darle una oportunidad. Por aquella época
  había empezado a usar Read it Later (hoy &lt;a href="http://getpocket.com"&gt;Pocket&lt;/a&gt;) para guardar aquello
  que quería leer en otro momento o con más calma. La integración con RIL me
  obligaba a abandonar el teclado y usar el ratón. Además el rediseño que hizo
  Google no me convencía. Decidí buscar algo aún más rápido y eficiente.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Durante todo ese tiempo probé muchísimas otras alternativas (incluidos
complementos para navegadores web) y no encontraba nada que me valiese. Es
muy difícil encontrar una aplicación de este tipo que te permita manejar un gran
número de fuentes RSS de forma realmente eficiente. Al final ya estaba decidido
a regresar a RSSOwl. Pero acostumbrado a &lt;a href="http://joedicastro.com/productividad-linux-pentadactyl.html"&gt;Pentadactyl&lt;/a&gt; y Vim y las aplicaciones
&lt;a href="https://es.wikipedia.org/wiki/Ncurses"&gt;ncurses&lt;/a&gt;, decidí buscar algo en esa línea, y lo encontré.&lt;/p&gt;
&lt;h2 id="newsbeuter"&gt;Newsbeuter&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://www.newsbeuter.org/"&gt;Newsbeuter&lt;/a&gt; es un juego de palabras con la palabra alemana "Wildbeuter"
que significa &lt;a href="https://es.wikipedia.org/wiki/Cazador_recolector"&gt;cazador-recolector&lt;/a&gt;, por lo que Newsbeuter vendría a ser
algo así como &lt;em&gt;Cazador/Recolector de Noticias&lt;/em&gt;. Newsbeuter es una aplicación
para leer fuentes RSS y Atom que utiliza una interfaz tipo ncurses para consola.
Quién esté familiarizado con el cliente de correo &lt;a href="https://es.wikipedia.org/wiki/Mutt"&gt;Mutt&lt;/a&gt; se sentirá cómodo
enseguida, ya que se inspira en este. Está programado en C++ y dado que funciona
en modo texto, una de sus ventajas es la enorme agilidad que proporciona para
moverse entre fuentes y noticias.&lt;/p&gt;
&lt;p&gt;Un resumen de sus características:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Permite suscribirnos a fuentes RSS y Atom&lt;/li&gt;
&lt;li&gt;Soporta &lt;a href="https://es.wikipedia.org/wiki/OPML"&gt;OPML&lt;/a&gt; tanto para importar como para exportar las subscripciones&lt;/li&gt;
&lt;li&gt;Descarga de podcasts&lt;/li&gt;
&lt;li&gt;Se pueden configurar todos los atajos de teclado libremente&lt;/li&gt;
&lt;li&gt;Podemos realizar búsquedas entre todos los artículos descargados. Similar a
  Vim&lt;/li&gt;
&lt;li&gt;Es posible crear etiquetas para dividir nuestras subscripciones en categorías y
  realizar filtrados y búsquedas en función a ellas&lt;/li&gt;
&lt;li&gt;Se pueden sincronizar las fuentes con Google Reader y &lt;a href="http://tt-rss.org/redmine/"&gt;Tiny Tiny RSS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Podemos configurar el color y las cadenas de texto para personalizar su
  aspecto&lt;/li&gt;
&lt;li&gt;Se pueden eliminar de forma automática artículos que no deseemos a través
  de un &lt;a href="https://en.wikipedia.org/wiki/Kill_file"&gt;"killfile"&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Es posible integrar cualquier fuente de datos a través de un flexible sistema
  de filtros y plugins: Fichero con urls, fichero OPML, fichero OPML online, Google
  Reader, varios ficheros...&lt;/li&gt;
&lt;li&gt;Se pueden crear "meta fuentes" empleando un potente lenguaje de consultas&lt;/li&gt;
&lt;li&gt;Permite crear marcadores a partir de cualquier enlace del articulo empleando
  una aplicación externa o un script&lt;/li&gt;
&lt;li&gt;Permite guardar artículos en texto plano&lt;/li&gt;
&lt;li&gt;Podemos otorgar etiquetas de un solo carácter que el autor denomina "flags"
  por articulo y varias por articulo. Útiles para emplearlas conjuntamente con
  los filtros&lt;/li&gt;
&lt;li&gt;Se pueden definir macros&lt;/li&gt;
&lt;li&gt;Linea de comandos para poder ejecutar comandos y cambiar opciones sobre la
  marcha&lt;/li&gt;
&lt;li&gt;Funciona en Linux, Mac OS y FreeBSD&lt;/li&gt;
&lt;li&gt;Programado en C++ y guarda los artículos en una BDD &lt;a href="http://sqlite.org/"&gt;SQLite&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://newsbeuter.org/doc/newsbeuter.html"&gt;Documentación&lt;/a&gt; bastante completa&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Pantalla con la configuración por defecto de Newsbeuter&lt;/p&gt;
&lt;p style="text-align:center;"&gt;&lt;img src="pictures/newsbeuter_default.png" width="700"
height="410" alt="Newsbeuter" /&gt;&lt;/p&gt;

&lt;h2 id="lo_que_lo_distingue"&gt;Lo que lo distingue&lt;/h2&gt;
&lt;p&gt;Muchas de estas características las comparte con otras aplicaciones de las
mencionadas antes, pero lo que realmente distingue a Newsbeuter de todas ellas
es lo siguiente:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Totalmente controlable desde el teclado, lo que unido a su velocidad, le
  proporciona una agilidad inigualable.&lt;/li&gt;
&lt;li&gt;Basado en texto, lo que nos evita distraernos de lo importante, el contenido.&lt;/li&gt;
&lt;li&gt;Consumo ridículo de memoria y recursos comparado con cualquiera aplicación
  mencionada antes. En el peor de los casos, me ha consumido unos 30 MiB de RAM
  (para la versión de 64 bits)&lt;/li&gt;
&lt;li&gt;Se puede configurar el números de hilos de proceso para descargar noticias. En
  mi caso, con 8 hilos, tarda unos 40s en leer unos 250 canales RSS. Solo Google
  Reader por su funcionamiento, puede mejorar esto.&lt;/li&gt;
&lt;li&gt;Configurable con un fichero de texto plano&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Como dijo &lt;a href="http://www.zedshaw.com/essays/i_want_the_mutt_of_feed_readers.html"&gt;Zed Shaw&lt;/a&gt; y refrenda el autor de la aplicación, &lt;a href="http://synflood.at/"&gt;Andreas
Krennmair&lt;/a&gt;,&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;"Newsbeuter es el Mutt de los lectores de noticias RSS"&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Desde mi propia experiencia puedo decir que este programa ha cambiado mi forma
de leer las &lt;em&gt;noticias del día&lt;/em&gt;. Antes, para mi, era muy importante que el lector
de noticias que empleara, utilizara un estilo homogéneo entre todas las fuentes y
artículos, con el fin de centrarme en el contenido y no perder el tiempo con
nimiedades. Es algo más importante de lo que pueda parecer a simple vista, cuando
quieres emplear el menor tiempo posible en adquirir la información y al mismo
tiempo quieres asimilar lo que lees. Si cuando vas a leer las noticias tienes 45
minutos y 300 artículos sin leer, el cambiar de un articulo con fondo negro y
letra Sans Serif mediana a uno con fondo blanco y letra Serif enorme, te supone
una distracción y una adaptación de la vista innecesarias e incomodas.&lt;/p&gt;
&lt;p&gt;Vista de un articulo con mi configuración&lt;/p&gt;
&lt;p style="text-align:center;"&gt;&lt;img src="pictures/newsbeuter_articulo.png"
width="700" height="843" alt="Articulo en Newsbeuter" /&gt;&lt;/p&gt;

&lt;p&gt;Pero al comenzar a emplear Newsbeuter me di enseguida cuenta de algo, el carecer
por completo de imágenes y compartir cabecera entre todos los artículos, me ha
servido para pasar por alto o leer en diagonal aquello que menos me interesa. No
solo filtro más rápido, si no que lo hago más eficientemente. Evidentemente hay
artículos en los que las imágenes complementan necesariamente al articulo. En
estos casos o bien la abro directamente en el navegador (tan sencillo como
pulsar &lt;strong&gt;&lt;code&gt;o&lt;/code&gt;&lt;/strong&gt; ) o bien puedo abrir las imágenes de forma independiente en el
mismo si me interesa por ejemplo ver solo una. En este sentido, Newsbeuter
proporciona una lista de todas las Urls presentes en el articulo en forma de
lista al final del mismo, pudiendo abrir cualquiera de ellas introduciendo el
indice de la misma. De hecho, empleando el comando &lt;strong&gt;&lt;code&gt;u&lt;/code&gt;&lt;/strong&gt; podemos acceder a la
lista completa de las mimas en una nueva ventana.&lt;/p&gt;
&lt;h2 id="mi_configuraci+n"&gt;Mi configuración&lt;/h2&gt;
&lt;p&gt;Mi configuración no tiene demasiado de especial, quizás que emplea una
combinación de colores distinta a la habitual y que empleo un par de scripts
para las notificaciones y para crear marcadores. Esta se puede encontrar en mi
repositorio de mis &lt;em&gt;dotfiles&lt;/em&gt; en &lt;a href="http://github.com/joedicastro/dotfiles"&gt;GitHub&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="notificaciones"&gt;Notificaciones&lt;/h2&gt;
&lt;p&gt;Para las notificaciones que emite Newsbeuter después de refrescar las noticias
empleo el script &lt;code&gt;notify.py&lt;/code&gt; que comentaba en este &lt;a href="http://joedicastro.com/notificaciones-de-escritorio-en-ubuntu-desde-python.html"&gt;articulo&lt;/a&gt;
ligeramente modificado para trabajar con Newsbeuter. En la imagen se puede ver
una notificación del programa.&lt;/p&gt;
&lt;p style="text-align:center;"&gt;&lt;img src="pictures/newsbeuter_notify.png"
width="487" height="68" alt="Notificación de Newsbeuter" /&gt;&lt;/p&gt;

&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
    &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;
    &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;gtk&lt;/span&gt;
    &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pynotify&lt;/span&gt;
    &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;textwrap&lt;/span&gt;
    &lt;span class="n"&gt;NOT_NOTIFY&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;
&lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="ne"&gt;ImportError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;NOT_NOTIFY&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;notify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;icon&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;wrap&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Send notification icon messages through libnotify.&lt;/span&gt;

&lt;span class="sd"&gt;    Parameters:&lt;/span&gt;

&lt;span class="sd"&gt;    (str) title -- The notification title&lt;/span&gt;
&lt;span class="sd"&gt;    (str) msg -- The message to display into notification&lt;/span&gt;
&lt;span class="sd"&gt;    (str / uri) icon -- Type of icon (ok|info|error|warm|ask|sync) or icon file&lt;/span&gt;

&lt;span class="sd"&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;NOT_NOTIFY&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;pynotify&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;is_initted&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
        &lt;span class="n"&gt;pynotify&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;init&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;gtk_icon&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;ok&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;gtk&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;STOCK_YES&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="s"&gt;&amp;#39;info&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;gtk&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;STOCK_DIALOG_INFO&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="s"&gt;&amp;#39;error&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;gtk&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;STOCK_DIALOG_ERROR&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="s"&gt;&amp;#39;warm&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;gtk&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;STOCK_DIALOG_WARNING&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="s"&gt;&amp;#39;ask&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;gtk&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;STOCK_DIALOG_QUESTION&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="s"&gt;&amp;#39;sync&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;gtk&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;STOCK_JUMP_TO&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;wrap&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;msg&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;linesep&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;textwrap&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;wrap&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;wrap&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;note&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pynotify&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Notification&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;helper&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;gtk&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Button&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;gtk_icon&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;helper&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;render_icon&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;gtk_icon&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;icon&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;gtk&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ICON_SIZE_BUTTON&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;note&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_icon_from_pixbuf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;gtk_icon&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="ne"&gt;KeyError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;note&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pynotify&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Notification&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;icon&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;note&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Main section&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;notify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Newsbeuter&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;/home/joedicastro/.newsbeuter/icon.png&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;__main__&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="integraci+n_con_pocket"&gt;Integración con Pocket&lt;/h2&gt;
&lt;p&gt;Utilizo &lt;a href="http://getpocket.com"&gt;Pocket&lt;/a&gt; como nexo de unión entre el navegador y el Newsbeuter para
archivar todos aquello artículos que me interesa leer, pero que quiero dejar
para otro momento más idóneo. Hubo un tiempo en que empleaba &lt;a href="http://delicious.com/"&gt;Delicious&lt;/a&gt;
para esta tarea, pero me parece más adecuado Pocket.&lt;/p&gt;
&lt;p&gt;Esto lo consigo empleando el comando para crear marcadores de Newsbeuter y un
script en Python creado para ello. Esta es la parte del archivo de configuración
que relaciona el comando con el script:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;bookmark&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;cmd&lt;/span&gt;                            &amp;quot;&lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;newsbeuter&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;send2ril&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;El script hace uso de la &lt;a href="https://bitbucket.org/Surgo/ril/src"&gt;API Python&lt;/a&gt; para Read it Later (como se llamaba
anteriormente Pocket) para guardar la url del articulo en mi cuenta de Pocket.
Así pulsando &lt;strong&gt;&lt;code&gt;Ctrl + b&lt;/code&gt;&lt;/strong&gt; se guarda el marcador en Pocket.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/usr/bin/env python&lt;/span&gt;
&lt;span class="c"&gt;# -*- coding: utf8 -*-&lt;/span&gt;

&lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="sd"&gt;    send2ril.py: Send a new url to Read it Later&lt;/span&gt;
&lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;

&lt;span class="n"&gt;__author__&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;joe di castro &amp;lt;joe@joedicastro.com&amp;gt;&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;__license__&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;GNU General Public License version 3&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;__date__&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;18/06/2012&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;__version__&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;0.1&amp;quot;&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;readitlater&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;ril_config&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;config&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Main section&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;api&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;readitlater&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;API&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RIL_APIKEY&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RIL_USERNAME&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                          &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RIL_PASSWORD&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[{&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;url&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;title&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]}]&lt;/span&gt;
    &lt;span class="n"&gt;api&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;__main__&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;En el script se importa un modulo, &lt;code&gt;ril_config&lt;/code&gt;, que es el que contiene las
claves de mi cuenta de Pocket, este modulo sería algo similar a esto
(evidentemente los valores son falsos):&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c"&gt;# ril credentials&lt;/span&gt;
&lt;span class="n"&gt;RIL_APIKEY&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;987u1ksjsdfRk54kKLKL34jkjij9945k&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;RIL_USERNAME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;usuario&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;RIL_PASSWORD&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;ADRKSD-Xk3kj5kjljFl&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Por lo tanto para hacerlo funcionar necesitamos crear un fichero &lt;code&gt;ril_config.py&lt;/code&gt;
con las credenciales de cada uno para Pocket. Los campos &lt;code&gt;RIL_USERNAME&lt;/code&gt; y
&lt;code&gt;RIL_PASSWORD&lt;/code&gt; se corresponden evidentemente con el usuario y la contraseña que
tengamos para el servicio. El otro campo, &lt;code&gt;RIL_APIKEY&lt;/code&gt; es una clave que podemos
obtener en &lt;a href="http://getpocket.com/api/signup/"&gt;esta página&lt;/a&gt; para registrar nuestra aplicación (en este caso
nuestro script) y que pueda acceder de forma autorizada a la API de Pocket.&lt;/p&gt;
&lt;h3 id="copia_de_seguridad_de_las_urls_de_pocket"&gt;Copia de seguridad de las urls de Pocket&lt;/h3&gt;
&lt;p&gt;Del mismo modo, aprovechando la misma API que empleo en el anterior script, he
creado otro script que ejecuto regularmente con cron, que me guarda una copia en
mi disco duro con todas las urls que tengo guardadas en Pocket. Vamos, una copia
de seguridad, uno nunca sabe cuando este tipo de servicios pueden dejar de
funcionar. Estas direcciones las guardo en un fichero con formato &lt;a href="https://es.wikipedia.org/wiki/Org-mode"&gt;Org-mode&lt;/a&gt;&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/usr/bin/env python&lt;/span&gt;
&lt;span class="c"&gt;# -*- coding: utf8 -*-&lt;/span&gt;

&lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="sd"&gt;    get.py: Get the urls stored in Read it Later &amp;amp; save them in a Org-mode file&lt;/span&gt;
&lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;

&lt;span class="n"&gt;__author__&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;joe di castro &amp;lt;joe@joedicastro.com&amp;gt;&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;__license__&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;GNU General Public License version 3&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;__date__&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;18/06/2012&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;__version__&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;0.1&amp;quot;&lt;/span&gt;

&lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;
    &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
    &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;readitlater&lt;/span&gt;
    &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;ril_config&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;config&lt;/span&gt;
&lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="ne"&gt;ImportError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="c"&gt;# Checks the installation of the necessary python modules&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;linesep&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;An error found importing one module:&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exc_info&lt;/span&gt;&lt;span class="p"&gt;()[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]),&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;You need to install it&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Stopping...&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;
    &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Main section&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;api&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;readitlater&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;API&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RIL_APIKEY&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RIL_USERNAME&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                          &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RIL_PASSWORD&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;items&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;api&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;state&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;unread&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;lista&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;list&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;ril_urls.org&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;w&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;* Read It Later URLs&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;linesep&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;lista&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
            &lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;** {0}{1}&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;title&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;utf8&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                        &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;linesep&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
            &lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;   [[{0}][Enlace]]{1}{1}&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;url&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
                        &lt;span class="n"&gt;encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;utf8&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;linesep&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;__main__&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="conclusi+n"&gt;Conclusión&lt;/h2&gt;
&lt;p&gt;Newsbeuter no es para todo el mundo, por supuesto, la gran mayoría considerarían
decimonónico el emplear un interfaz de texto en vez de uno gráfico. Muchos
incluso llamarían herejía a usar el teclado en vez de el ratón (aunque luego se
vuelvan locos con las pantallas táctiles). Lo respeto y lo entiendo, pero para
aquellos que aman su tiempo y no están dispuestos a desperdiciarlo, deberían
darle una oportunidad a esta aplicación.&lt;/p&gt;</summary><category term="productividad"></category><category term="linux"></category><category term="ncurses"></category><category term="rss"></category><category term="python"></category></entry></feed>