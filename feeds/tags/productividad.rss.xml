<?xml version="1.0" encoding="utf-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>joe di castro</title><link>http://joedicastro.com</link><description></description><atom:link href="http://joedicastro.com/feeds/tags/productividad.rss.xml" rel="self"></atom:link><lastBuildDate>Fri, 19 Oct 2012 22:40:00 +0200</lastBuildDate><item><title>Productividad &amp; Linux: Ncdu</title><link>http://joedicastro.com/productividad-linux-ncdu.html</link><description>&lt;p&gt;Esta es una pequeña aplicación que sigue la máxima de &lt;a href="http://es.wikipedia.org/wiki/Douglas_McIlroy"&gt;Doug Mcllroy&lt;/a&gt; que
acabaría resumiendo la filosofía Unix &lt;em&gt;"Escribe programas que hagan una sola
cosa y que la hagan bien"&lt;/em&gt;. Y siguiendo la línea de los programas que engloban
esta serie de productividad sobre Linux, es un programa de consola que se maneja
íntegramente con el teclado, y donde además los atajos están inspirados en los
de &lt;a href="http://www.vim.org/"&gt;Vim&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="ncdu"&gt;Ncdu&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://dev.yorhel.nl/ncdu"&gt;Ncdu&lt;/a&gt; es un acrónimo para "NCurses Disk Usage", es decir, "Uso de disco
con interfaz ncurses". Lo que pretendía &lt;a href="https://github.com/yorhel"&gt;Yoran Heling&lt;/a&gt;, su autor, cuando
creo &lt;strong&gt;ncdu&lt;/strong&gt;, era obtener un analizador de uso de disco en consola que fuera lo
suficientemente ligero para poder emplearlo en un servidor remoto a través de
&lt;a href="https://es.wikipedia.org/wiki/Ssh"&gt;ssh&lt;/a&gt;. El gran acierto fue emplear la interfaz &lt;a href="https://es.wikipedia.org/wiki/Ncurses"&gt;ncurses&lt;/a&gt; para
poder navegar por los directorios con extrema facilidad al mismo tiempo que se
presentaba la información en un formato legible y amigable. El segundo y no
menos importante acierto, es emplear los conocidos atajos de teclado de Vim para
navegar entre los directorios.&lt;/p&gt;
&lt;p&gt;El resultado es un analizador de ocupación de disco que es realmente útil, 
agradable de utilizar y que es tan rápido y ligero que se puede emplear sin
interfaz gráfica y en maquinas remotas. Es una gran ayuda para los
administradores de sistemas, que hasta ahora nos teníamos que pelear con otras
herramientas bastante menos agradables. Es la típica herramienta que cuando la
utilizas por primera vez piensas ¿Por qué demonios no la habría encontrado
antes?&lt;/p&gt;
&lt;p style="text-align:center;"&gt;&lt;img src="pictures/ncdu.png" width="700"
height="559" alt="ncdu" /&gt;&lt;/p&gt;

&lt;p&gt;Como se puede ver la interfaz es muy limpia y carece de elementos superfluos que
nos distraigan de lo importante, un pecado que cometen algunas de las
aplicaciones gráficas más famosas, que cuentan con unos gráficos muy bonitos,
pero realmente no demasiado útiles. Es sencillisima de emplear una vez que
conoces los atajos y cuenta con ayuda integrada a la que se accede pulsando
&lt;strong&gt;&lt;code&gt;?&lt;/code&gt;&lt;/strong&gt;. Incluso para aquellos que no están acostumbrados a navegar empleando
las típicas teclas de vim (&lt;strong&gt;h&lt;/strong&gt;, &lt;strong&gt;j&lt;/strong&gt;, &lt;strong&gt;k&lt;/strong&gt;, &lt;strong&gt;l&lt;/strong&gt;), se pueden utilizar las
teclas de dirección.&lt;/p&gt;
&lt;h3 id="caracter+sticas"&gt;Características&lt;/h3&gt;
&lt;p&gt;Un programa de este tipo no necesita una funcionalidad muy elevada, pero
destacare aquí algunas de las posibilidades que nos ofrece:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Podemos ordenar los directorios/ficheros en función de su nombre o de su
  tamaño y en orden ascendente o descendente &lt;/li&gt;
&lt;li&gt;Se pueden eliminar directamente ficheros o directorios desde la aplicación,
  aunque también podemos iniciarla en modo solo lectura para prevenir borrados
  accidentales&lt;/li&gt;
&lt;li&gt;Se muestra o no, el porcentaje de espacio ocupado de forma gráfica y/o numérica&lt;/li&gt;
&lt;li&gt;El espacio empleado en disco puede hacer referencia al real o al aparente&lt;/li&gt;
&lt;li&gt;Los directorios y ficheros ocultos pueden ser o no mostrados&lt;/li&gt;
&lt;li&gt;Nos permite recalcular el espacio ocupado de un directorio concreto sin
  necesidad de volver a recalcular todo &lt;/li&gt;
&lt;li&gt;Tenemos la posibilidad de volcar la información a un archivo, que puede
  también ser leído por el mismo programa&lt;/li&gt;
&lt;li&gt;Es posible mostrar la información de un elemento individual en un cuadro
  emergente&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;La verdad es que lo único que hecho en falta en el programa es quizás un poco de
color para distinguir entre ficheros y directorios de forma más visual. Por lo
demás, es muy rápido calculando el espacio, no he hecho una comparación directa,
pero me parece ligeramente más rápido que Baobab.&lt;/p&gt;
&lt;h3 id="alternativas"&gt;Alternativas&lt;/h3&gt;
&lt;p&gt;Existen varias alternativas decentes como aplicaciones gráficas, como los
conocidos &lt;a href="http://www.marzocca.net/linux/baobab/"&gt;Baobab&lt;/a&gt; (que viene con las herramientas de Gnome) o
&lt;a href="http://www.jgoodies.com/freeware/jdiskreport/"&gt;JDiskReport&lt;/a&gt;. Después existen múltiples alternativas tanto en modo
gráfico como en modo consola que, sinceramente, no puedo recomendar a nadie,
bien porque son más vistosos que prácticos o bien porque son directamente
insufribles. Existe una alternativa en modo texto que algunos prefieren a ncdu
que es &lt;a href="http://gt5.sourceforge.net/"&gt;gt5&lt;/a&gt;.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">joe di castro</dc:creator><pubDate>Fri, 19 Oct 2012 22:40:00 +0200</pubDate><guid>http://joedicastro.com/productividad-linux-ncdu.html</guid><category>productividad</category><category>linux</category><category>ncurses</category><category>tamaño</category></item><item><title>Productividad &amp; Linux: Ranger</title><link>http://joedicastro.com/productividad-linux-ranger.html</link><description>&lt;p&gt;Algunos pensarán, de acuerdo, podemos entender que prefieras un &lt;a href="http://joedicastro.com/productividad-en-el-escritorio-linux-tiling.html"&gt;gestor de
ventanas de mosaico&lt;/a&gt;, o que emplees aplicaciones como &lt;a href="http://joedicastro.com/productividad-linux-pentadactyl.html"&gt;Pentadactyl&lt;/a&gt;,
&lt;a href="http://joedicastro.com/productividad-linux-newsbeuter.html"&gt;Newsbeuter&lt;/a&gt;, &lt;a href="http://joedicastro.com/productividad-linux-zathura.html"&gt;Zathura&lt;/a&gt; o &lt;a href="http://joedicastro.com/productividad-linux-turses.html"&gt;Turses&lt;/a&gt;, pero &lt;strong&gt;Ranger&lt;/strong&gt;... ya es
demasiado. ¿A quien en su sano juicio se le ocurriría utilizar semejante
engendro? A mí, y no solo lo utilizo a diario, si no que además opino que es
quizás la mejor aplicación que he descubierto en el último año y medio. Y esto
último es mucho decir para alguien, que como yo, está continuamente buscando
formas de mejorar su modo de trabajo.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://ranger.nongnu.org/"&gt;Ranger&lt;/a&gt; es un administrador de archivos en modo texto. Pero no es un
administrador de archivos en modo texto clásico a dos columnas, como el norton
commander y similares. No, Ranger es una pequeña joya con un planteamiento
distinto y tan potente, que puede conseguir que olvides que no podías vivir sin
un gestor de archivos gráfico como &lt;a href="https://es.wikipedia.org/wiki/Nautilus_(software)"&gt;Nautilus&lt;/a&gt;, &lt;a href="https://es.wikipedia.org/wiki/Konqueror"&gt;Konqueror&lt;/a&gt;,
&lt;a href="https://es.wikipedia.org/wiki/Dolphin_(administrador_de_archivos)"&gt;Dolphin&lt;/a&gt; o &lt;a href="https://es.wikipedia.org/wiki/Thunar"&gt;Thunar&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="ranger"&gt;Ranger&lt;/h2&gt;
&lt;p&gt;Tengo que estar enormemente agradecido a su autor, &lt;a href="https://github.com/hut"&gt;Roman Zimbelmann&lt;/a&gt; no
solo por su trabajo, si no por mostrarme que incluso en modo texto, se puede
revolucionar el mundo de la usabilidad. Evidentemente, en una aplicación que
basa su control en el teclado (tiene un soporte muy básico del ratón), es
requisito imprescindible invertir algún tiempo en aprender a utilizarlo, ya que
no es tan intuitivo como una aplicación gráfica. A menos que seas un usuario
típico de &lt;a href="https://es.wikipedia.org/wiki/Vim"&gt;Vim&lt;/a&gt;, entonces te encontrarás como en casa. Una vez que dominas
esta aplicación, el moverse entre los directorios y el realizar operaciones se
hace a velocidad de vértigo y con control absoluto (siempre que no seas un
manazas con el teclado).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Ranger&lt;/strong&gt; está desarrollado en &lt;strong&gt;Python&lt;/strong&gt; y emplea una interfaz ncurses igual que
&lt;a href="http://joedicastro.com/productividad-linux-turses.html"&gt;Turses&lt;/a&gt;. Al contrario de lo que algunos puedan pensar, el estar
desarrollado en Python no lo convierte ni en pesado ni en lento, si no que se
mueve a velocidad endiablada y consume una cantidad de memoria ridícula
comparada con cualquier gestor de archivos gráfico.&lt;/p&gt;
&lt;p style="text-align:center;"&gt;&lt;img src="pictures/ranger.png" width="700"
height="437" alt="Ranger" /&gt;&lt;/p&gt;

&lt;p&gt;Aquí puede verse una imagen típica de ranger, visualizando el contenido de un
directorio y previsualizando el contenido de un fichero, en este caso un fichero
de código python.&lt;/p&gt;
&lt;h3 id="caracter+sticas"&gt;Características&lt;/h3&gt;
&lt;p&gt;¿Qué se puede hacer con ranger?, bueno, quizás es mejor preguntarse que no se
puede hacer con Ranger. Prácticamente todas las funciones a las que estés
acostumbrado en un administrador de archivos gráfico se pueden realizar con
Ranger. Vamos primero a ver un resumen de sus características:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Soporte de UTF-8 por defecto&lt;/li&gt;
&lt;li&gt;Visualización en múltiples columnas&lt;/li&gt;
&lt;li&gt;Previsualización del directorio o fichero seleccionado&lt;/li&gt;
&lt;li&gt;Operaciones comunes sobre los ficheros. Crear, copiar, borrar, cambiar
  atributos (&lt;code&gt;chmod&lt;/code&gt;), etc...&lt;/li&gt;
&lt;li&gt;Combinaciones de teclado y consola inspiradas en Vim&lt;/li&gt;
&lt;li&gt;Autodetección de tipos de fichero y apertura de los mismos con el programa
  adecuado&lt;/li&gt;
&lt;li&gt;Permite establecer etiquetas y marcadores sobre archivos y directorios&lt;/li&gt;
&lt;li&gt;Empleo de pestañas. Nos permite navegar por varios directorios simultáneamente
  sin necesidad de abrir otra instancia del programa. Además se pueden realizar
  operaciones entre ellas&lt;/li&gt;
&lt;li&gt;Muestra una barra de progreso para las operaciones que lo necesitan&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Conviene dejar claro que no es un programa para &lt;em&gt;impacientes&lt;/em&gt;, hacerse con él y
sus innumerables opciones requiere tiempo. Hay que leerse la ayuda del programa
y practicar con él. A su vez, si queremos personalizar las opciones o ampliarlo,
debemos comprender como funcionan sus archivos de configuración, mejor aún si
tenemos conocimientos de Python. La documentación de su web, así como la de sus
páginas &lt;em&gt;man&lt;/em&gt; está un poco desactualizada, por lo que sacarle todo su jugo
requiere algo de paciencia.&lt;/p&gt;
&lt;h3 id="ejemplos"&gt;Ejemplos&lt;/h3&gt;
&lt;p&gt;Voy a intentar dar algo de visibilidad a algunas de las capacidades que nos
ofrece ranger empleando una par de ejemplos que lo ilustren.&lt;/p&gt;
&lt;p&gt;En el siguiente ejemplo vemos la previsualización que hace ranger en función del
tipo de fichero que se trate.&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;iframe src="http://player.vimeo.com/video/62061254?title=0&amp;amp;byline=0&amp;amp;portrait=0" 
width="700" height="438"&gt;
&lt;/iframe&gt;
&lt;p&gt;Previsualización de archivos en ranger con varios tipos de archivo.
Recomiendo ver en alta resolución y a pantalla completa.&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;La previsualización de imágenes en ASCII puede parecer una tontería, pero
resulta muy útil a la hora de diferenciar entre distintas imágenes con nombre
muy parecido. El fichero en HTML está renderizado en vez de mostrarnos el texto
plano, algo más amigable. También se agradece mucho el que los ficheros de
código se vean con resaltado de sintaxis.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Conviene aclarar que para realizar esta previsualización es necesario tener
instalado una serie de pequeñas aplicaciones que se detallan en el sitio de
ranger como dependencias.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Aquí vemos como se abren automáticamente los programas adecuados en función del
tipo de archivo (se puede configurar que aplicaciones emplear y cuales usar en
cada momento)&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;iframe src="http://player.vimeo.com/video/62634892?title=0&amp;amp;byline=0&amp;amp;portrait=0" 
width="700" height="438"&gt;
&lt;/iframe&gt;
&lt;p&gt;Ejecución automática de aplicaciones en función del tipo de archivo.
Recomiendo ver en alta resolución y a pantalla completa.&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;En el caso del fichero Torrent, al que no tengo asociada ninguna aplicación en
ranger, me abre un comando en el que puedo especificar directamente la
aplicación que deseo emplear para gestionarlo. En este caso, ninguna. En el
archivo comprimido solo me muestra el contenido del mismo, podría asociarle
alguna aplicación, pero ya tengo comandos para manejarlos dentro del propio
ranger, algo que veremos a continuación.&lt;/p&gt;
&lt;h2 id="mi_configuraci+n"&gt;Mi configuración&lt;/h2&gt;
&lt;p&gt;No he personalizado mucho mi configuración de momento, pero quien quiera echarle
un vistazo puede hacerlo en mi repositorio dotfiles en &lt;a href="http://github.com/joedicastro/dotfiles"&gt;GitHub&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="archivos_de_configuraci+n"&gt;Archivos de configuración&lt;/h3&gt;
&lt;p&gt;Para configurar ranger necesitamos editar ciertos archivos, que crearemos por
primera vez con el siguiente comando:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;ranger --copy-config&lt;span class="o"&gt;=&lt;/span&gt;all
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;qué nos creara los siguientes archivos por defecto en la carpeta
&lt;code&gt;~/.config/ranger/&lt;/code&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;commands.py&lt;/code&gt; &lt;em&gt;(python)&lt;/em&gt;, en este archivo se configuran los comandos a emplear
  en la línea de comandos de ranger&lt;/li&gt;
&lt;li&gt;&lt;code&gt;options.py&lt;/code&gt; &lt;em&gt;(python)&lt;/em&gt;, el fichero de opciones principal de ranger&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rc.conf&lt;/code&gt; &lt;em&gt;(texto)&lt;/em&gt;, aquí configuramos los atajos de teclado de ranger&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rifle.conf&lt;/code&gt; &lt;em&gt;(texto)&lt;/em&gt;, para establecer los programas que ejecutaran o abrirán
  un tipo de archivo en orden de preferencia&lt;/li&gt;
&lt;li&gt;&lt;code&gt;scope.sh&lt;/code&gt; &lt;em&gt;(bash)&lt;/em&gt;, los programas empleados para previsualizar un determinado
  tipo de archivo&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Adicionalmente, con el uso se añadirán tres ficheros más: &lt;code&gt;bookmarks&lt;/code&gt;, &lt;code&gt;history&lt;/code&gt;
y &lt;code&gt;tagged&lt;/code&gt; que guardarán los marcadores, la historia de comandos y las etiquetas
respectivamente.&lt;/p&gt;
&lt;h3 id="gestionar_la_papelera"&gt;Gestionar la papelera&lt;/h3&gt;
&lt;p&gt;Por defecto ranger no contempla la gestión de la papelera de Linux que
implementan escritorios como Gnome. Aunque no empleo ningún entorno
de escritorio ni gestores de archivos gráficos, si me interesa gestionar la
papelera, pues cada vez más aplicaciones la emplean para eliminar los archivos.
De hecho en &lt;em&gt;bash&lt;/em&gt; y &lt;em&gt;zsh&lt;/em&gt; tengo un alias para &lt;code&gt;rm&lt;/code&gt; que mueve los archivos a la
papelera en vez de eliminarlos.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nb"&gt;alias &lt;/span&gt;&lt;span class="nv"&gt;rm&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;mv --target-directory ~/.local/share/Trash/files&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Para gestionar la papelera desde ranger, añado dos atajos de teclado y un
comando editando varios archivos de configuración de la siguiente manera:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Mandar archivos a la papelera&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Para mandar a la papelera lo que tengamos seleccionado actualmente, en lugar de
eliminarlo directamente, añadimos esta línea al fichero &lt;code&gt;rc.conf&lt;/code&gt;&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c"&gt;# move to trash&lt;/span&gt;
&lt;span class="nb"&gt;map&lt;/span&gt; &lt;span class="n"&gt;DD&lt;/span&gt; &lt;span class="n"&gt;shell&lt;/span&gt; &lt;span class="n"&gt;mv&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="o"&gt;~/.&lt;/span&gt;&lt;span class="n"&gt;local&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;share&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Trash&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;files&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;de este modo, cada vez que pulsemos &lt;strong&gt;&lt;code&gt;DD&lt;/code&gt;&lt;/strong&gt; el contenido seleccionado es movido
al directorio donde tenemos nuestra papelera.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Movernos a la papelera&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Del mismo modo que ranger provee por defecto de atajos de teclado para movernos
al directorio &lt;code&gt;home&lt;/code&gt;, al directorio raiz, etc, he añadido un atajo de teclado
siguiendo el mismo criterio para acceder a nuestra papelera. Añadimos lo
siguiente al fichero &lt;code&gt;rc.conf&lt;/code&gt;&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c"&gt;# go to trash&lt;/span&gt;
&lt;span class="nb"&gt;map&lt;/span&gt; &lt;span class="n"&gt;gp&lt;/span&gt; &lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="o"&gt;~/.&lt;/span&gt;&lt;span class="n"&gt;local&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;share&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Trash&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;files&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;así, pulsando &lt;strong&gt;&lt;code&gt;gp&lt;/code&gt;&lt;/strong&gt; vamos directamente a la papelera, estemos donde estemos.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Vaciar la papelera&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Para vaciar la papelera opto por emplear un comando, para ello tenemos que
editar otro fichero, &lt;code&gt;commands.py&lt;/code&gt;, y añadir lo siguiente&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Command&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="sd"&gt;    :empty&lt;/span&gt;

&lt;span class="sd"&gt;    Empties the trash directory ~/.local/share/Trash/files&lt;/span&gt;

&lt;span class="sd"&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;execute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;rm -rf ~/.local/share/Trash/files/{*,.[^.]*}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;por lo que vaciar la papelera se convierte en algo tan simple como teclear
&lt;strong&gt;&lt;code&gt;:empty&lt;/code&gt;&lt;/strong&gt; o para los más cómodos &lt;strong&gt;&lt;code&gt;:em↹&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id="desmontar_una_unidad_con_udiskie"&gt;Desmontar una unidad con udiskie&lt;/h3&gt;
&lt;p&gt;Dada mi "particular" configuración, ya que no empleo ningún escritorio, empleo
la herramienta &lt;a href="https://bitbucket.org/byronclark/udiskie"&gt;udiskie&lt;/a&gt; para automontar unidades de almacenamiento
externas, como unidades USB o tarjetas de memoria. El montado se hace de forma
automática y solo el desmontado ha de hacerse de forma manual. Ya que no quiero
teclear el comando cada vez que desee desmontar una unidad, lo que hago es
hacerlo desde ranger. En el fichero &lt;code&gt;rc.conf&lt;/code&gt; mapeamos este atajo&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c"&gt;# umount a drive with udiskie&lt;/span&gt;
&lt;span class="nb"&gt;map&lt;/span&gt; &lt;span class="n"&gt;un&lt;/span&gt; &lt;span class="n"&gt;shell&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="n"&gt;udiskie&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;umount&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="o"&gt;/%&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;así para desmontar una unidad inicio ranger (en mi caso &lt;strong&gt;&lt;code&gt;Win + F1&lt;/code&gt;&lt;/strong&gt;), me
dirijo a las unidades externas montadas, &lt;strong&gt;&lt;code&gt;gm&lt;/code&gt;&lt;/strong&gt;, selecciono la unidad deseada
y la desmonto, &lt;strong&gt;&lt;code&gt;un&lt;/code&gt;&lt;/strong&gt;. Un proceso que me lleva apenas dos segundos, sin
abandonar las manos del teclado, compárese con hacerlo con un ratón y un entorno
gráfico.&lt;/p&gt;
&lt;h3 id="expulsar_un_cddvd"&gt;Expulsar un CD/DVD&lt;/h3&gt;
&lt;p&gt;Del mismo modo, en lugar de abrir un terminal y escribir el comando &lt;code&gt;eject&lt;/code&gt;, en
determinadas circunstancias, por ejemplo al acabar de examinar el contenido de
un disco, prefiero hacerlo directamente desde ranger. Para ello en el fichero
&lt;code&gt;rc.conf&lt;/code&gt; creamos este atajo de teclado&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c"&gt;# eject a CD-ROM/DVD&lt;/span&gt;
&lt;span class="nb"&gt;map&lt;/span&gt; &lt;span class="n"&gt;ej&lt;/span&gt; &lt;span class="n"&gt;shell&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="n"&gt;eject&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3 id="trabajar_con_archivos_comprimidos"&gt;Trabajar con archivos comprimidos&lt;/h3&gt;
&lt;p&gt;Estos comandos los he sacado de el &lt;a href="https://wiki.archlinux.org/index.php/Ranger"&gt;Wiki de Arch Linux&lt;/a&gt; y los he adaptado
a la versión de ranger que estoy empleando en este momento, la 1.5.5&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Extraer los ficheros de un archivo comprimido&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Con el comando &lt;strong&gt;&lt;code&gt;:extracthere&lt;/code&gt;&lt;/strong&gt; extraemos el contenido de un archivo/s
comprimido que previamente habremos seleccionado para copia (es decir empleando
el atajo &lt;strong&gt;&lt;code&gt;yy&lt;/code&gt;&lt;/strong&gt;). El contenido se extrae en el directorio en el que nos
encontremos actualmente. Es muy comodo para extraer múltiples archivos
comprimidos a la vez, si quisieramos descomprimir solo un archivo y en el mismo
directorio en el que este se encuentra, podríamos emplear el atajo &lt;strong&gt;&lt;code&gt;1l&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Para añadir el comando a ranger, tenemos que insertar esta clase en el fichero
&lt;code&gt;commands.py&lt;/code&gt;&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;extracthere&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Command&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;execute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot; Extract copied files to current directory &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
        &lt;span class="n"&gt;copied_files&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;tuple&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;copy&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;copied_files&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt;

        &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;refresh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="n"&gt;cwd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_directory&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;original_path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;cwd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;load_content&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

        &lt;span class="n"&gt;one_file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;copied_files&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="n"&gt;cwd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;thisdir&lt;/span&gt;
        &lt;span class="n"&gt;original_path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cwd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;
        &lt;span class="n"&gt;au_flags&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;-X&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cwd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="n"&gt;au_flags&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;()[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:]&lt;/span&gt;
        &lt;span class="n"&gt;au_flags&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;-e&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;copy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;clear&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cut&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;copied_files&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;descr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;extracting: &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;basename&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;one_file&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;descr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;extracting files from: &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;basename&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;one_file&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dirname&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;obj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;CommandLoader&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;aunpack&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;au_flags&lt;/span&gt; \
                &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;copied_files&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;descr&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;descr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;signal_bind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;after&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;refresh&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loader&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Crear un archivo comprimido&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Este comando te permite seleccionar uno o varios ficheros y crear un archivo
comprimido al llamar al comando &lt;strong&gt;&lt;code&gt;:compress&lt;/code&gt;&lt;/strong&gt;. Este comando te permite (a
través del autocompletado) darle un nombre automático a partir del directorio o
uno personalizado. Te permite además seleccionar el tipo de compresión en
función de la extension empleada.&lt;/p&gt;
&lt;p&gt;En el fichero &lt;code&gt;commands.py&lt;/code&gt; añadimos el siguiente código.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;compress&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Command&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;execute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot; Compress marked files to current directory &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
        &lt;span class="n"&gt;cwd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;thisdir&lt;/span&gt;
        &lt;span class="n"&gt;marked_files&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cwd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_selection&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;marked_files&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt;

        &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;refresh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="n"&gt;cwd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_directory&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;original_path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;cwd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;load_content&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

        &lt;span class="n"&gt;original_path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cwd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;
        &lt;span class="n"&gt;parts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;au_flags&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;parts&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:]&lt;/span&gt;
        &lt;span class="n"&gt;descr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;compressing files in: &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;basename&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;parts&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
        &lt;span class="n"&gt;obj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;CommandLoader&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;apack&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;au_flags&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; \
                &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;relpath&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cwd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;marked_files&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;descr&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;descr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;signal_bind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;after&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;refresh&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loader&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;tab&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot; Complete with current folder name &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
        &lt;span class="n"&gt;extension&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;.zip&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;.tar.gz&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;.rar&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;.7z&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;compress &amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;basename&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;thisdir&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;ext&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;ext&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;extension&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">joe di castro</dc:creator><pubDate>Thu, 18 Oct 2012 21:50:00 +0200</pubDate><guid>http://joedicastro.com/productividad-linux-ranger.html</guid><category>productividad</category><category>linux</category><category>python</category><category>ncurses</category></item><item><title>Productividad &amp; Linux: zathura</title><link>http://joedicastro.com/productividad-linux-zathura.html</link><description>&lt;p&gt;&lt;a href="http://pwmt.org/projects/zathura/"&gt;zathura&lt;/a&gt; es un programa minimalista que procura seguir el principio de
&lt;em&gt;"menos es más"&lt;/em&gt;  que acuñara &lt;a href="https://es.wikipedia.org/wiki/Ludwig_Mies_van_der_Rohe"&gt;Mies van der Rohe&lt;/a&gt; en la arquitectura y que
en la informática se correspondería con el principio &lt;a href="https://es.wikipedia.org/wiki/Principio_KISS"&gt;KISS&lt;/a&gt; y la
&lt;a href="http://en.wikipedia.org/wiki/Unix_philosophy"&gt;filosofía UNIX&lt;/a&gt;. Siguiendo esta filosofía, zathura es una aplicación que
hace una sola cosa, la hace bien y consume muy pocos recursos. Sus autores, la
comunidad &lt;a href="http://pwmt.org/about"&gt;PWMT.org&lt;/a&gt; (&lt;em&gt;programas con nombre de película&lt;/em&gt;), tienen como
propósito el crear aplicaciones de software libre que se centren en un interfaz
simple, que no malgaste espacio y que se maneje íntegramente desde el teclado.&lt;/p&gt;
&lt;p&gt;La aplicación es un visor de documentos, y es modular, por lo que puedes
instalar los plugins que quieras en función del formato de documentos que
quieras que soporte. Actualmente están disponibles los siguientes plugins:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;pdf-poppler&lt;/em&gt;: Lectura de &lt;a href="http://es.wikipedia.org/wiki/Pdf"&gt;PDF&lt;/a&gt; a través de la famosa librería
  &lt;a href="http://poppler.freedesktop.org/"&gt;Poppler&lt;/a&gt;, que es empleada por aplicaciones como Evince, Okular o
  Inkscape.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;pdf-mupdf&lt;/em&gt;: Lectura de PDF mediante la librería &lt;a href="http://mupdf.com/"&gt;mupdf&lt;/a&gt; empleada por
  ejemplo por Sumatra PDF.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;djvu&lt;/em&gt;: Para visionar documentos &lt;a href="https://es.wikipedia.org/wiki/Djvu"&gt;DJVU&lt;/a&gt;. Emplea la librería
  &lt;a href="http://djvu.sourceforge.net/"&gt;djvulibre&lt;/a&gt; que emplean por ejemplo Evince y Okular.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;ps&lt;/em&gt;: Para poder ver documentos &lt;a href="https://es.wikipedia.org/wiki/Postscript"&gt;Postscript&lt;/a&gt;. Usa la librería
  &lt;a href="http://libspectre.freedesktop.org/"&gt;libspectre&lt;/a&gt; que es utilizada por Evince y Okular.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;cb&lt;/em&gt;: Para poder abrir archivos en formato &lt;a href="https://es.wikipedia.org/wiki/Archivo_de_historieta"&gt;Comic Book&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Como se puede ver emplea las mismas librerías que emplean la mayoría de
programas similares para Linux, por lo tanto nos ofrecen la misma calidad que
estos pero con un interfaz minimalista donde el protagonista es el contenido, y
proporcionándonos un control absoluto del documento desde el teclado.&lt;/p&gt;
&lt;p style="text-align:center;"&gt;&lt;img src="pictures/zathura.png" width="700"
height="957" alt="Zathura" /&gt;&lt;/p&gt;

&lt;p&gt;El interfaz es simple, una ventana de contenido y una barra de estado/línea de
comandos. El control de la misma recae en el teclado (aunque puede usarse el
ratón para funciones básicas) y sus atajos están inspirados en los de Vim.&lt;/p&gt;
&lt;h2 id="caracter+sticas"&gt;Características&lt;/h2&gt;
&lt;p&gt;Las características principales de Zathura son las siguientes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Interfaz minimalista&lt;/li&gt;
&lt;li&gt;Controlable completamente desde el teclado, inspirado en vim y muy parecido a
  pentadactyl. Permite seguir enlaces y saltos directos a páginas&lt;/li&gt;
&lt;li&gt;Recarga automática de documentos si estos cambian. Útil para previsualizar la
  salida en PDF de documentos de LaTeX, por ejemplo&lt;/li&gt;
&lt;li&gt;Permite establecer marcadores y marcadores rápidos dentro de un documento. Muy
  útil para labores de investigación y documentación&lt;/li&gt;
&lt;li&gt;Exporta imágenes y adjuntos de un documento&lt;/li&gt;
&lt;li&gt;Puede abrir documentos protegidos por contraseña (proporcionándosela, claro)&lt;/li&gt;
&lt;li&gt;Imprime el documento completo o simplemente las hojas que deseemos&lt;/li&gt;
&lt;li&gt;Permite buscar en el documento y desplazarse por los resultados&lt;/li&gt;
&lt;li&gt;Se puede abrir y navegar por el indice del documento&lt;/li&gt;
&lt;li&gt;Muestra la información disponible (metadatos) sobre el documento&lt;/li&gt;
&lt;li&gt;Zoom y Rotar documentos&lt;/li&gt;
&lt;li&gt;Permite cambiar el color del documento. Sirve para visualizar el documento en
  duotono con los colores invertidos&lt;/li&gt;
&lt;li&gt;Se pueden personalizar los atajos de teclado y los colores empleados&lt;/li&gt;
&lt;li&gt;Se personaliza a través de un fichero de texto plano&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;En esta imagen se puede apreciar el resultado de aplicar el comando &lt;code&gt;:info&lt;/code&gt;
sobre un documento.&lt;/p&gt;
&lt;p style="text-align:center;"&gt;&lt;img src="pictures/zathura_info.png" width="700"
height="957" alt="zathura info dialog" /&gt;&lt;/p&gt;

&lt;p&gt;El poder cambiar los colores del documento, invirtiéndolos, es una
característica muy útil, por ejemplo, para leer largos documentos sin fatigar
demasiado nuestra vista. Aquí se puede ver la diferencia entre ver un documento
a pantalla completa en modo normal y con los colores invertidos.&lt;/p&gt;
&lt;p style="text-align:center;"&gt;&lt;img src="pictures/zathura.gif" width="640"
height="400" alt="zathura full screen" /&gt;&lt;/p&gt;

&lt;h2 id="alternativas"&gt;Alternativas&lt;/h2&gt;
&lt;p&gt;No hay demasiadas alternativas a Zathura que tengan un planteamiento parecido,
de hecho la única que conozco es &lt;a href="http://naihe2010.github.com/apvlv/"&gt;apvlv&lt;/a&gt;. Aunque para mi no es tan
completa como Zathura.&lt;/p&gt;
&lt;h2 id="mi_configuraci+n"&gt;Mi configuración&lt;/h2&gt;
&lt;p&gt;Aunque mi configuración no tiene nada de particular, está disponible en mis
&lt;em&gt;dotfiles&lt;/em&gt; alojados en &lt;a href="http://github.com/joedicastro/dotfiles"&gt;GitHub&lt;/a&gt;.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">joe di castro</dc:creator><pubDate>Mon, 16 Jul 2012 23:32:00 +0200</pubDate><guid>http://joedicastro.com/productividad-linux-zathura.html</guid><category>productividad</category><category>Linux</category><category>pdf</category><category>djvu</category><category>postscript</category></item><item><title>Productividad &amp; Linux: tmux</title><link>http://joedicastro.com/productividad-linux-tmux.html</link><description>&lt;p&gt;&lt;a href="http://tmux.sourceforge.net/"&gt;Tmux&lt;/a&gt; es un &lt;strong&gt;multiplexor&lt;/strong&gt;  de terminales. Es una herramienta básica,
casi diría imprescindible, para los que trabajamos habitualmente con la consola
de Linux. El termino multiplexor es empleado en electrónica para designar un
dispositivo que combina múltiples entradas en una única salida. Esto es lo que
hace tmux, combinar varios terminales en una sola ventana, de forma que podamos
organizarlos de la forma más eficiente posible. Si lo primero que te viene a la
cabeza son terminales con múltiples pestañas o paneles como &lt;a href="https://launchpad.net/terminator/"&gt;Terminator&lt;/a&gt;,
olvídalo, tmux es un concepto diferente y más potente.&lt;/p&gt;
&lt;p&gt;La gran diferencia es que tmux está basado en un modelo cliente-servidor. El
servidor puede albergar múltiples sesiones y cada instancia (ventana de
terminal) puede estar asociado con una o más sesiones. Se pueden abrir, cerrar
sesiones, moverse entre ellas, renombrarlas. Una sesión puede ser compartida por
varios clientes, lo que es empleado por ejemplo para sesiones de &lt;a href="https://es.wikipedia.org/wiki/Programaci%C3%B3n_en_pareja"&gt;pair
programming&lt;/a&gt;. Si se cierra un cliente, la sesión sigue corriendo en segundo
plano, pudiéndose volver a ella cuando se desee. A su vez cada sesión puede
albergar varias ventanas (el equivalente a las pestañas en otros terminales) y
cada ventana puede subdividirse en varios paneles.&lt;/p&gt;
&lt;p&gt;Es una aplicación muy flexible y con muchas posibilidades, no voy a entrar en
detalle en todas ellas porque me extendería demasiado. Es totalmente controlable
desde el teclado, lo que lo hace muy ágil en su manejo. Yo lo uso a diario y es
muy raro que trabaje en un terminal sin hacerlo dentro de una sesión de tmux.
Tmux te permite tener perfectamente organizadas todas esas ventanas de terminal
que los SysAdmins manejamos y que de otra manera se convierten en un caos. Antes
de emplear tmux empleaba screen y terminator dependiendo de la tarea y el equipo
a emplear, pero tmux me da lo mejor de ambas aplicaciones y aún más. Y si además
los combinamos con un terminal ligero, superrápido y con soporte para UTF-8 y
256 colores como &lt;code&gt;rxvt-unicode&lt;/code&gt; tenemos un entorno ideal para cualquier tarea
que desarrollemos en la consola.&lt;/p&gt;
&lt;h2 id="caracter+sticas"&gt;Características&lt;/h2&gt;
&lt;p&gt;Este es un resumen de las características de tmux:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Modelo cliente/servidor&lt;/li&gt;
&lt;li&gt;Linea de comandos potente, consistente y fácilmente programable&lt;/li&gt;
&lt;li&gt;Totalmente controlable desde el teclado, aunque tiene un soporte básico de
  ratón&lt;/li&gt;
&lt;li&gt;División de las ventanas en múltiples paneles horizontales y/o verticales&lt;/li&gt;
&lt;li&gt;Los paneles pueden ser movidos, redimensionados y pueden reorganizarse en
  esquemas predefinidos&lt;/li&gt;
&lt;li&gt;Sincronizar paneles. Introducir el mismo texto en varios paneles a la vez&lt;/li&gt;
&lt;li&gt;Soporte para UTF-8 y 256 colores&lt;/li&gt;
&lt;li&gt;Copiar y pegar con múltiples bufferes&lt;/li&gt;
&lt;li&gt;Menús interactivos para seleccionar ventanas, sesiones o clientes&lt;/li&gt;
&lt;li&gt;Bloqueo de terminal manualmente o por cuenta atrás&lt;/li&gt;
&lt;li&gt;Moverse a una ventana mediante una búsqueda del texto existente dentro de ella&lt;/li&gt;
&lt;li&gt;Barra de estado por defecto y muy personalizable&lt;/li&gt;
&lt;li&gt;Fichero de configuración basado en texto plano&lt;/li&gt;
&lt;li&gt;Soporte para combinaciones de teclas basadas en Vim o Emacs&lt;/li&gt;
&lt;li&gt;Documentación bastante completa&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;En esta imagen se puede ver la configuración por defecto de tmux, a primera
vista no se puede apreciar toda la potencia que se esconde detrás de esta
aplicación.&lt;/p&gt;
&lt;p style="text-align:center;"&gt;&lt;img src="pictures/tmux.png" width="700"
height="481" alt="tmux" /&gt;&lt;/p&gt;

&lt;h2 id="alternativas"&gt;Alternativas&lt;/h2&gt;
&lt;p&gt;La alternativa más directa es el veterano &lt;a href="http://es.wikipedia.org/wiki/GNU_Screen"&gt;GNU Screen&lt;/a&gt; en el que se
inspira tmux. Sigue siendo una aplicación muy utilizada, pero en mi opinión tmux
la ha superado hace tiempo. Otra alternativa es &lt;a href="https://launchpad.net/byobu"&gt;Byobu&lt;/a&gt; que no es más que
un frontend para tmux o screen que los hace más amigables para los usuarios
menos avanzados.&lt;/p&gt;
&lt;h2 id="scripts"&gt;Scripts&lt;/h2&gt;
&lt;p&gt;Una de las posibilidades más potentes que nos permite tmux es la de la creación
de scripts para iniciar una o varias sesiones con configuraciones
predeterminadas. De esto modo se pueden crear sesiones predefinidas para
desarrollo, web, ssh, etc. Pero crear scripts en tmux es una tarea bastante
árida, por lo que se han desarrollado algunas utilidades de terceros para
realizar esto de forma más cómoda y agradable:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/aziz/tmuxinator"&gt;Tmuxinator&lt;/a&gt; es una utilidad escrita en &lt;a href="http://www.ruby-lang.org/es/"&gt;Ruby&lt;/a&gt; para crear y
modificar sesiones de Tmux, permitiendo crear sesiones complejas de una forma
muy sencilla ya que emplea ficheros de configuración en formato &lt;a href="https://es.wikipedia.org/wiki/YAML"&gt;YAML&lt;/a&gt;
para ello.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/remiprev/teamocil"&gt;teamocil&lt;/a&gt; es una utilidad que nos permite crear esquemas de ventanas y
paneles predefinidos con facilidad empleando el formato YAML. También está
escrito en Ruby, en cuya comunidad de desarrolladores tmux está muy implantado.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Aquí se puede ver una ventana de tmux con mi configuración en la que se muestra
la sesión &lt;code&gt;www&lt;/code&gt; donde tengo agrupadas varias ventanas con aplicaciones
relacionadas con la web. Se puede ver como estoy en la ventana 2 de 4 y como he
personalizado la barra de estado:&lt;/p&gt;
&lt;p style="text-align:center;"&gt;&lt;img src="pictures/tmux_www.png" width="700"
height="429" alt="tmux con una sesión para internet" /&gt;&lt;/p&gt;

&lt;h2 id="mi_configuraci+n"&gt;Mi configuración&lt;/h2&gt;
&lt;p&gt;Mi configuración de tmux puede encontrarse en mi repositorio &lt;em&gt;dotfiles&lt;/em&gt; en
&lt;a href="http://github.com/joedicastro/dotfiles"&gt;GitHub&lt;/a&gt;. Mi configuración se apoya en la muchos otros usuarios que me han
aportado ideas y en buena parte gracias a la lectura del libro &lt;a href="http://pragprog.com/book/bhtmux/tmux"&gt;tmux: Productive
Mouse-Free Development&lt;/a&gt; de Brian P. Hogan.&lt;/p&gt;
&lt;p&gt;En esta otra imagen se puede ver una sesión de desarrollo con tmux, donde tengo
abiertos tres paneles con tres aplicaciones (de izquierda a derecha y de arriba
a abajo): vim, &lt;a href="http://ipython.org/"&gt;ipython &lt;/a&gt; y &lt;a href="http://jonas.nitro.dk/tig/"&gt;tig&lt;/a&gt;. Así mismo hay una ventana adicional
donde tengo un shell bash. Pulsar sobre ella para ver a tamaño completo.&lt;/p&gt;
&lt;p style="text-align:center;"&gt;&lt;a href="pictures/tmux_develop_full.png" alt="tmux
como entorno de desarrollo" title="tmux como entorno de desarrollo"&gt;&lt;img
src="pictures/tmux_develop.png" width="700" height="430" alt="tmux como entorno
de desarrollo" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Voy a destacar algunos puntos reseñables de mi configuración. Lo primero que
configuro es la combinación de teclas conocida como &lt;code&gt;Prefix&lt;/code&gt; que es la
combinación que precede a los atajos de teclado de tmux. Esto se hace de este
modo para no interferir con los atajos de teclado de las aplicaciones que
ejecutemos dentro de tmux. El prefijo por defecto de tmux es &lt;strong&gt;&lt;code&gt;Ctrl + b&lt;/code&gt;&lt;/strong&gt;,
pero para los que estábamos acostumbrados a &lt;strong&gt;screen&lt;/strong&gt; la combinación &lt;strong&gt;&lt;code&gt;Ctrl +
a&lt;/code&gt;&lt;/strong&gt; es más idónea. Y también porque es más cómodo de teclear, sobre todo si
como en mi caso, tienes mapeada una tecla de &lt;strong&gt;&lt;code&gt;Ctrl&lt;/code&gt;&lt;/strong&gt; adicional en lugar de
&lt;strong&gt;&lt;code&gt;Bloq Mays&lt;/code&gt;&lt;/strong&gt;. Bueno, en realidad uso la tecla &lt;strong&gt;&lt;code&gt;Bloq Mays&lt;/code&gt;&lt;/strong&gt; también como
tecla &lt;strong&gt;&lt;code&gt;Esc&lt;/code&gt;&lt;/strong&gt; cuando no es pulsada en combinación con otras, gracias a la
maravillosa pequeña utilidad &lt;a href="https://github.com/alols/xcape"&gt;xcape&lt;/a&gt;, muy útil para los usuarios de Vim.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="gp"&gt;#&lt;/span&gt; Use C-a instead of C-b as the prefix
&lt;span class="go"&gt;set -g prefix C-a&lt;/span&gt;
&lt;span class="go"&gt;unbind-key C-b&lt;/span&gt;
&lt;span class="go"&gt;bind-key C-a send-prefix&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Para emplear 256 colores y indicarle que interprete de shell emplear, se lo
indico mediante las siguientes lineas&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="gp"&gt;#&lt;/span&gt; &lt;span class="nb"&gt;set &lt;/span&gt;256 colors
&lt;span class="go"&gt;set -g default-terminal &amp;quot;screen-256color&amp;quot;&lt;/span&gt;

&lt;span class="gp"&gt;#&lt;/span&gt; &lt;span class="nb"&gt;set &lt;/span&gt;default shell
&lt;span class="go"&gt;set -g default-command &amp;quot;exec /bin/bash&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;También cambio el retraso inicial después de pulsado el prefijo, para que no de
problemas con otras aplicaciones como vim y para mejorar su respuesta.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="gp"&gt;#&lt;/span&gt; be more responsive, changing the default delay
&lt;span class="go"&gt;set -sg escape-time 1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Para hacer más fácil el cambio entre ventanas y paneles a través de los números
de los mismos, lo que hago es que empiecen a contar desde 1 y no desde 0&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="gp"&gt;#&lt;/span&gt; Start numbering at 1
&lt;span class="go"&gt;set -g base-index 1&lt;/span&gt;
&lt;span class="go"&gt;setw -g pane-base-index 1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Esto es muy útil para comprobar cambios en la configuración sobre la marcha sin
necesidad de cerrar las sesiones. Este comando me permite recargar la
configuración en vivo con la combinación &lt;strong&gt;&lt;code&gt;prefix r&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="gp"&gt;#&lt;/span&gt; force a reload of the config file
&lt;span class="go"&gt;unbind r&lt;/span&gt;
&lt;span class="go"&gt;bind r source-file ~/.tmux.conf  \; display &amp;quot;Reloaded!&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Para moverme entre los paneles y cambiar su tamaño empleo las teclas típicas de
movimiento de vim para no tener que abandonar los dedos de la fila principal del
teclado.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="gp"&gt;#&lt;/span&gt; moving between panes
&lt;span class="go"&gt;bind h select-pane -L&lt;/span&gt;
&lt;span class="go"&gt;bind j select-pane -D&lt;/span&gt;
&lt;span class="go"&gt;bind k select-pane -U&lt;/span&gt;
&lt;span class="go"&gt;bind l select-pane -R&lt;/span&gt;

&lt;span class="gp"&gt;#&lt;/span&gt; Quick pane selection
&lt;span class="go"&gt;bind -r C-h select-window -t :-&lt;/span&gt;
&lt;span class="go"&gt;bind -r C-l select-window -t :+&lt;/span&gt;

&lt;span class="gp"&gt;#&lt;/span&gt; Pane resizing
&lt;span class="go"&gt;bind -r H resize-pane -L 5&lt;/span&gt;
&lt;span class="go"&gt;bind -r J resize-pane -D 5&lt;/span&gt;
&lt;span class="go"&gt;bind -r K resize-pane -U 5&lt;/span&gt;
&lt;span class="go"&gt;bind -r L resize-pane -R 5&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;La barra de estado que empleo está inspirada en el plugin de Vim,
&lt;a href="https://github.com/Lokaltog/vim-powerline/"&gt;vim-powerline&lt;/a&gt;, que le otorga una estética más lograda que la original. Es
necesario emplear para ello una fuente monoespaciada parcheada especialmente,
con los símbolos que emplea vim-powerline. Se pueden encontrar varias en su
&lt;a href="https://github.com/Lokaltog/vim-powerline/wiki/Patched-fonts"&gt;wiki&lt;/a&gt;. Yo empleo mi fuente preferida que es Dejavu Sans Mono.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="gp"&gt;#&lt;/span&gt; Custom status bar
&lt;span class="gp"&gt;#&lt;/span&gt; Powerline symbols: ⮂ ⮃ ⮀ ⮁ ⭤
&lt;span class="go"&gt;set -g status-utf8 on&lt;/span&gt;
&lt;span class="go"&gt;set -g status-left-length 32&lt;/span&gt;
&lt;span class="go"&gt;set -g status-right-length 150&lt;/span&gt;
&lt;span class="go"&gt;set -g status-interval 2&lt;/span&gt;

&lt;span class="go"&gt;set -g status-left &amp;#39;#[fg=colour15,bg=colour238,bold] #S #[fg=colour238,bg=colour234,nobold]⮀&amp;#39;&lt;/span&gt;
&lt;span class="go"&gt;set -g status-right &amp;#39;#[fg=colour245]⮃ %R ⮃ %d %b #[fg=colour254,bg=colour234,nobold]⮂#[fg=colour16,bg=colour254,bold] #h &amp;#39;&lt;/span&gt;
&lt;span class="go"&gt;set -g window-status-format &amp;quot;#[fg=white,bg=colour234] #I #W &amp;quot;&lt;/span&gt;
&lt;span class="go"&gt;set -g window-status-current-format &amp;quot;#[fg=colour234,bg=colour39]⮀#[fg=colour16,bg=colour39,noreverse,bold] #I ⮁ #W #F #[fg=colour39,bg=colour234,nobold]⮀&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Por último unos atajos de teclado muy útiles que me permiten hacer un zoom
temporal de un panel a ventana completa y luego regresar a la distribución
original de paneles.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="gp"&gt;#&lt;/span&gt; Maximize and restore a pane
&lt;span class="go"&gt;unbind Up&lt;/span&gt;
&lt;span class="go"&gt;bind Up new-window -d -n tmp \; swap-pane -s tmp.1 \; select-window -t tmp&lt;/span&gt;
&lt;span class="go"&gt;unbind Down&lt;/span&gt;
&lt;span class="go"&gt;bind Down last-window \; swap-pane -s tmp.1 \; kill-window -t tmp&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">joe di castro</dc:creator><pubDate>Mon, 09 Jul 2012 22:42:00 +0200</pubDate><guid>http://joedicastro.com/productividad-linux-tmux.html</guid><category>productividad</category><category>linux</category><category>tmux</category></item><item><title>Productividad &amp; Linux: Turses</title><link>http://joedicastro.com/productividad-linux-turses.html</link><description>&lt;p&gt;Que medio mundo parece estar conectado a &lt;a href="http://twitter.com"&gt;Twitter&lt;/a&gt; no es
ninguna novedad. Y que si sigues a un buen número de personas, el intentar estar
al tanto de todo lo que ocurre es una temeridad, tampoco debería sorprender a
nadie. De hecho, dado su éxito y el enorme flujo de información que circula por
él, se han desarrollado cientos de herramientas para gestionarlo.&lt;/p&gt;
&lt;p&gt;Desde que cree mi cuenta en twitter, he probado unas cuantas, unas veinte (y
solo en Linux, en el resto uso la web). La primera, y la elección más obvia ya
que por aquel entonces usaba Ubuntu, fue &lt;strong&gt;Gwibber&lt;/strong&gt; . Luego cansado de sus
muchos problemas, probé un sinnúmero de aplicaciones, solo merece la pena
reseñar una: &lt;a href="http://hotot.org/"&gt;Hotot&lt;/a&gt;. Es la mejor aplicación gráfica para twitter en Linux
que conozco.&lt;/p&gt;
&lt;p&gt;Pero guiado por el mismo objetivo de &lt;a href="http://joedicastro.com/tag/productividad.html"&gt;mejorar la productividad&lt;/a&gt; en mis
herramientas habituales de trabajo, me lancé a la búsqueda de un cliente de
twitter que encajara en la misma filosofía. No hay muchas alternativas, la
mayoría, hay que reconocerlo, son demasiado "crudas" incluso para mí, que soy un
amante de la consola. Pero entonces dí con una pequeña joya, &lt;a href="http://tyrs.nicosphere.net/"&gt;Tyrs&lt;/a&gt;,
desarrollada por &lt;a href="https://github.com/Nic0"&gt;Nicolas Paris&lt;/a&gt;. Era una herramienta sencilla, pero que
cumplía muy bien con todo lo que buscaba de ella.  Pero un buen día, Nicolas, en
su afán por mejorarla, empezó a reescribir la herramienta empleando una nueva
librería para gestionar el interfaz. Las primeras versiones tenían varios fallos
y Nicolas pronto se vio desbordado por una tarea que no le apetecía continuar y
a la que no podía dedicar más tiempo. Y &lt;a href="http://www.nicosphere.net/small-projects-life-depends-on-his-owner/"&gt;decidió abandonar el proyecto&lt;/a&gt;,
con la esperanza de que alguien se atreviera a retomarlo. Cuando leí la entrada
de su blog no perdí la esperanza del todo, al fin y al cabo, estaba desarrollado
en Python, un lenguaje con el que me desenvuelvo. Mientras esperaba que hacer,
seguí usando la última versión estable a diario. Pero entonces, apareció el
milagro, &lt;strong&gt;Turses&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id="turses"&gt;Turses&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/alejandrogomez/"&gt;Alejandro Gómez&lt;/a&gt;, un usuario de &lt;strong&gt;Tyrs&lt;/strong&gt; &lt;a href="http://dialelo.com/Python/turses/2012/03/02/turses-un-cliente-de-twitter-con-interfaz-ncurses.html"&gt;se lanzó&lt;/a&gt; a crear su
propia aplicación basándose en él. Y no solo garantizaba la continuidad del buen
trabajo empezado por Nicolas, si no que llegaba lleno de ideas frescas y muchas
ganas de hacerlo bien. El propio Nicolas &lt;a href="http://www.nicosphere.net/turses-a-fork-from-tyrs-ncurses-twitter-client/"&gt;le felicitó&lt;/a&gt; por el trabajo
y la iniciativa. A día de hoy, el proyecto se sigue desarrollando, y aunque aún
tiene algunas metas marcadas por delante, la aplicación es perfectamente usable
en el día a día, de hecho es mi cliente habitual.&lt;/p&gt;
&lt;p&gt;Como ya se habrá podido deducir, &lt;a href="https://github.com/alejandrogomez/Turses"&gt;Turses&lt;/a&gt; es un cliente de twitter para la
consola con interfaz &lt;a href="https://es.wikipedia.org/wiki/Ncurses"&gt;ncurses&lt;/a&gt;. Está desarrollado en Python y emplea la
librería &lt;a href="http://excess.org/urwid/"&gt;Urwid&lt;/a&gt; para crear la interfaz en curses. Lo mejor de esta
aplicación es que emplea atajos de teclado inspirados en &lt;strong&gt;Vim&lt;/strong&gt;  y es
totalmente controlable desde el teclado. Esto unido a que emplea una interfaz
basada en texto, la convierten en la aplicación más ágil de todas las que haya
probado.  &lt;strong&gt;Hotot&lt;/strong&gt; también tiene algunas combinaciones de teclas muy útiles,
pero ni se acercan a lo que &lt;strong&gt;Turses&lt;/strong&gt;  te permite.&lt;/p&gt;
&lt;p&gt;Aquí se puede ver el aspecto por defecto de Turses&lt;/p&gt;
&lt;p style="text-align:center;"&gt;&lt;img src="pictures/turses.png" width="700"
height="290" alt="Turses" /&gt;&lt;/p&gt;

&lt;p&gt;Pero no se acaban ahí las bondades de Turses, tiene algunas características
geniales como la gestión dinámica de bufferes (líneas temporales) y de columnas.
Demos un repaso a lo que nos permite la aplicación:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Múltiples líneas temporales&lt;/strong&gt;  (&lt;em&gt;bufferes&lt;/em&gt;). Es decir, nos permite consultar
  los tweets de la gente a la que seguimos, los nuestros, menciones, etc. Es
  decir, los bufferes habituales, incluidos conversaciones, búsquedas y
  hashtags.  Y podemos tenerlas simultáneamente abiertas y navegar entre ellas
  muy fácilmente.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Múltiples columnas&lt;/strong&gt;. En cada columna se sitúa un buffer, y podemos añadir
  o quitar columnas a voluntad de forma muy sencilla. Es decir, que podemos
  visualizar un solo buffer de forma predefinida, o podemos ver varios a la vez
  distribuidos en múltiples columnas.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Tweet, Reply, Retweet, Borrar&lt;/strong&gt;. Vamos, que permite las operaciones
  habituales con los tweets. Además se puede hacer un Retweet editando el texto,
  algo que parece obvio, pero que en algunas aplicaciones no es tan sencillo.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Seguir/dejar de seguir&lt;/strong&gt; a un usuario. Podemos hacerlo bien a través de un
  tweet o bien introduciendo el nombre del usuario.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Des/Marcar como favorito&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Enviar mensajes directos&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Abrir URLs en un navegador&lt;/strong&gt;. Nos permite abrir las direcciones que aparecen
  en un tweet, así como abrir el propio tweet.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Visualizar conversaciones&lt;/strong&gt;. Podemos abrir un nuevo buffer con la
  conversación relacionada con un tweet.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Contador de los no leídos&lt;/strong&gt; funciona para todos los bufferes y nos permite
  ponerlo a cero manualmente cuando queremos ignorar algunos no leídos.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Búsqueda&lt;/strong&gt;. Se puede buscar tanto por usuario como por termino.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Ver los tweets de cualquier usuario &lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Visualizar el perfil de un usuario&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Totalmente personalizable&lt;/strong&gt; y la configuración se guarda en un fichero de
  texto plano.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Múltiples cuentas&lt;/strong&gt;, eso sí, una por ejecución.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Ayuda en línea&lt;/strong&gt; con todas las combinaciones de teclas posibles. Accesible a
  través de la tecla &lt;strong&gt;&lt;code&gt;?&lt;/code&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Interfaz de Turses mostrando múltiples columnas&lt;/p&gt;
&lt;p style="text-align:center;"&gt;&lt;img src="pictures/turses_2cols.png" width="700"
height="285" alt="Turses con multiples columnas" /&gt;&lt;/p&gt;

&lt;p&gt;Y entre las metas que tiene marcadas su autor, nos encontramos con el soporte
para listas, streaming, notificaciones emergentes y múltiples sesiones. Estoy
seguro de que las acabará incorporando, le sobra capacidad. Aunque he de reseñar
que actualmente he contribuido con una porción de código minúscula al proyecto y
que tengo la intención de seguir colaborando en todo lo que pueda. Si eres
programador Python y te apetece echar una mano, &lt;a href="https://github.com/alejandrogomez/Turses"&gt;anímate&lt;/a&gt;, Alejandro es muy
receptivo y un tío muy majo que estará encantado con toda la ayuda que le
podamos dar.&lt;/p&gt;
&lt;h2 id="mi_configuraci+n"&gt;Mi configuración&lt;/h2&gt;
&lt;p&gt;Si a alguien le puede servir como inspiración mi configuración, esta disponible
en &lt;a href="http://github.com/joedicastro/dotfiles"&gt;GitHub&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Turses mostrando la información del perfil del autor de un tweet&lt;/p&gt;
&lt;p style="text-align:center;"&gt;&lt;img src="pictures/turses_uinfo.png" width="700"
height="429" alt="Turses mostrando la información de un usuario" /&gt;&lt;/p&gt;

&lt;h2 id="alternativas"&gt;Alternativas&lt;/h2&gt;
&lt;p&gt;Solo conozco dos alternativas en la misma línea que merezca la pena reseñar, las
demás que he probado no estaban a la altura:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.vim.org/scripts/script.php?script_id=2204"&gt;TwitVim&lt;/a&gt;, es un plugin para Vim. Funciona fantásticamente bien, eso sí,
  solo apropiado para usuarios de Vim. La probé un tiempo y me gusto, pero
  personalmente no me gusta emplear Vim para esta tarea y Turses es bastante más
  manejable.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.floodgap.com/software/ttytter/"&gt;TTYtter&lt;/a&gt;, está escrito en Perl y no tiene interfaz. Trabaja en la línea
  de comandos a modo de interprete. Funciona muy bien y también lo usé un
  tiempo, pero su propio funcionamiento le reste eficiencia comparado con
  Turses.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">joe di castro</dc:creator><pubDate>Thu, 21 Jun 2012 22:50:00 +0200</pubDate><guid>http://joedicastro.com/productividad-linux-turses.html</guid><category>productividad</category><category>linux</category><category>ncurses</category><category>python</category><category>twitter</category></item><item><title>Productividad &amp; Linux: Newsbeuter</title><link>http://joedicastro.com/productividad-linux-newsbeuter.html</link><description>&lt;p&gt;Uno de los pilares de la productividad es, como no, la gestión del tiempo. Otro
de los pilares fundamentales es, inexorablemente, el conocimiento. Si pierdes el
tiempo en tareas irrelevantes (o directamente procrastinando), tu productividad
se resiente irremediablemente. Si no tiene los conocimientos adecuados y
suficientes, consumes el tiempo aprendiendo a hacerlo o directamente lo pierdes
haciéndolo mal. Hoy en día, rara es la actividad donde la formación continua no
sea un requisito indispensable, no ya para mejorar o mantener tu rendimiento, si
no simplemente para poder seguir ejerciéndola.&lt;/p&gt;
&lt;p&gt;Por lo tanto nos vemos condenados a intentar mantenernos al día (y ampliar
conocimientos), mientras que procuramos dedicarle el menor tiempo posible para
no menoscabar nuestro rendimiento. Tal delicado equilibrio no es poca hazaña en
nuestros días. Nos vemos inundados de tal cantidad de información, que el
filtrado es la única manera de intentar sobrevivir a esa enorme vorágine de
datos a la que nos enfrentamos. Afortunadamente tenemos herramientas. Desde hace
muchos años he confiado esta tarea a emplear fuentes &lt;strong&gt;RSS&lt;/strong&gt; de calidad y una
buena herramienta para gestionarlas.&lt;/p&gt;
&lt;h2 id="mi_b+squeda_del_cliente_rss_ideal"&gt;Mi búsqueda del cliente RSS ideal&lt;/h2&gt;
&lt;p&gt;He empleado muchas herramientas distintas para esta tarea, siempre intentando
tener la más idónea para filtrar muchas fuentes RSS en el menor tiempo posible,
sin pasar por alto lo que me interesa conocer. Algunas muy buenas, que usaba
cuando aún empleaba Windows como SO principal, ya no existen. En Linux he pasado
por las más conocidas (en orden cronológico):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://liferea.sourceforge.net/"&gt;Liferea&lt;/a&gt;, era muy buena cuando la deje, lo de mostrar los comentarios en
  las entradas es algo que no he vuelto a ver en ninguna otra herramienta. Pero
  después de varios años de uso, la abandoné cuando se había convertido en
  insufriblemente lenta.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://userbase.kde.org/Akregator"&gt;Akregator&lt;/a&gt;, no era para mí, nunca acabe encontrándome a gusto con ella.
  Lo hacía todo medianamente bien, pero no destacaba en nada, pronto la
  abandoné.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.blogbridge.com/"&gt;Blogbride&lt;/a&gt;, su planteamiento es diferente al resto. Es una buena
  aplicación y estuve con ella muchos meses. Pero siempre seguí buscando algo
  más eficiente.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.rssowl.org/"&gt;RSSOwl&lt;/a&gt;, la mejor aplicación para leer RSS para escritorio que he
  conocido. La he usado durante años. Está construida sobre Eclipse. Ofrece
  muchas posibilidades de personalización y filtrado. Es muy rápida, pero debido
  a que depende de Eclipse y java, si manejas un número considerable de fuentes
  (+1000 en aquella época), se puede volver un poco pesada. Además, si como yo,
  dejabas muchos artículos para leer en otro momento, la base de datos crecía de
  tal manera, que podía llegar a ser muy lenta. La abandoné buscando algo aún
  más ágil y productivo.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://es.wikipedia.org/wiki/Google_Reader"&gt;Google Reader&lt;/a&gt;, decidí darle una oportunidad. Por aquella época
  había empezado a usar Read it Later (hoy &lt;a href="http://getpocket.com"&gt;Pocket&lt;/a&gt;) para guardar aquello
  que quería leer en otro momento o con más calma. La integración con RIL me
  obligaba a abandonar el teclado y usar el ratón. Además el rediseño que hizo
  Google no me convencía. Decidí buscar algo aún más rápido y eficiente.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Durante todo ese tiempo probé muchísimas otras alternativas (incluidos
complementos para navegadores web) y no encontraba nada que me valiese. Es
muy difícil encontrar una aplicación de este tipo que te permita manejar un gran
número de fuentes RSS de forma realmente eficiente. Al final ya estaba decidido
a regresar a RSSOwl. Pero acostumbrado a &lt;a href="http://joedicastro.com/productividad-linux-pentadactyl.html"&gt;Pentadactyl&lt;/a&gt; y Vim y las aplicaciones
&lt;a href="https://es.wikipedia.org/wiki/Ncurses"&gt;ncurses&lt;/a&gt;, decidí buscar algo en esa línea, y lo encontré.&lt;/p&gt;
&lt;h2 id="newsbeuter"&gt;Newsbeuter&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://www.newsbeuter.org/"&gt;Newsbeuter&lt;/a&gt; es un juego de palabras con la palabra alemana "Wildbeuter"
que significa &lt;a href="https://es.wikipedia.org/wiki/Cazador_recolector"&gt;cazador-recolector&lt;/a&gt;, por lo que Newsbeuter vendría a ser
algo así como &lt;em&gt;Cazador/Recolector de Noticias&lt;/em&gt;. Newsbeuter es una aplicación
para leer fuentes RSS y Atom que utiliza una interfaz tipo ncurses para consola.
Quién esté familiarizado con el cliente de correo &lt;a href="https://es.wikipedia.org/wiki/Mutt"&gt;Mutt&lt;/a&gt; se sentirá cómodo
enseguida, ya que se inspira en este. Está programado en C++ y dado que funciona
en modo texto, una de sus ventajas es la enorme agilidad que proporciona para
moverse entre fuentes y noticias.&lt;/p&gt;
&lt;p&gt;Un resumen de sus características:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Permite suscribirnos a fuentes RSS y Atom&lt;/li&gt;
&lt;li&gt;Soporta &lt;a href="https://es.wikipedia.org/wiki/OPML"&gt;OPML&lt;/a&gt; tanto para importar como para exportar las subscripciones&lt;/li&gt;
&lt;li&gt;Descarga de podcasts&lt;/li&gt;
&lt;li&gt;Se pueden configurar todos los atajos de teclado libremente&lt;/li&gt;
&lt;li&gt;Podemos realizar búsquedas entre todos los artículos descargados. Similar a
  Vim&lt;/li&gt;
&lt;li&gt;Es posible crear etiquetas para dividir nuestras subscripciones en categorías y
  realizar filtrados y búsquedas en función a ellas&lt;/li&gt;
&lt;li&gt;Se pueden sincronizar las fuentes con Google Reader y &lt;a href="http://tt-rss.org/redmine/"&gt;Tiny Tiny RSS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Podemos configurar el color y las cadenas de texto para personalizar su
  aspecto&lt;/li&gt;
&lt;li&gt;Se pueden eliminar de forma automática artículos que no deseemos a través
  de un &lt;a href="https://en.wikipedia.org/wiki/Kill_file"&gt;"killfile"&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Es posible integrar cualquier fuente de datos a través de un flexible sistema
  de filtros y plugins: Fichero con urls, fichero OPML, fichero OPML online, Google
  Reader, varios ficheros...&lt;/li&gt;
&lt;li&gt;Se pueden crear "meta fuentes" empleando un potente lenguaje de consultas&lt;/li&gt;
&lt;li&gt;Permite crear marcadores a partir de cualquier enlace del articulo empleando
  una aplicación externa o un script&lt;/li&gt;
&lt;li&gt;Permite guardar artículos en texto plano&lt;/li&gt;
&lt;li&gt;Podemos otorgar etiquetas de un solo carácter que el autor denomina "flags"
  por articulo y varias por articulo. Útiles para emplearlas conjuntamente con
  los filtros&lt;/li&gt;
&lt;li&gt;Se pueden definir macros&lt;/li&gt;
&lt;li&gt;Linea de comandos para poder ejecutar comandos y cambiar opciones sobre la
  marcha&lt;/li&gt;
&lt;li&gt;Funciona en Linux, Mac OS y FreeBSD&lt;/li&gt;
&lt;li&gt;Programado en C++ y guarda los artículos en una BDD &lt;a href="http://sqlite.org/"&gt;SQLite&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://newsbeuter.org/doc/newsbeuter.html"&gt;Documentación&lt;/a&gt; bastante completa&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Pantalla con la configuración por defecto de Newsbeuter&lt;/p&gt;
&lt;p style="text-align:center;"&gt;&lt;img src="pictures/newsbeuter_default.png" width="700"
height="410" alt="Newsbeuter" /&gt;&lt;/p&gt;

&lt;h2 id="lo_que_lo_distingue"&gt;Lo que lo distingue&lt;/h2&gt;
&lt;p&gt;Muchas de estas características las comparte con otras aplicaciones de las
mencionadas antes, pero lo que realmente distingue a Newsbeuter de todas ellas
es lo siguiente:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Totalmente controlable desde el teclado, lo que unido a su velocidad, le
  proporciona una agilidad inigualable.&lt;/li&gt;
&lt;li&gt;Basado en texto, lo que nos evita distraernos de lo importante, el contenido.&lt;/li&gt;
&lt;li&gt;Consumo ridículo de memoria y recursos comparado con cualquiera aplicación
  mencionada antes. En el peor de los casos, me ha consumido unos 30 MiB de RAM
  (para la versión de 64 bits)&lt;/li&gt;
&lt;li&gt;Se puede configurar el números de hilos de proceso para descargar noticias. En
  mi caso, con 8 hilos, tarda unos 40s en leer unos 250 canales RSS. Solo Google
  Reader por su funcionamiento, puede mejorar esto.&lt;/li&gt;
&lt;li&gt;Configurable con un fichero de texto plano&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Como dijo &lt;a href="http://www.zedshaw.com/essays/i_want_the_mutt_of_feed_readers.html"&gt;Zed Shaw&lt;/a&gt; y refrenda el autor de la aplicación, &lt;a href="http://synflood.at/"&gt;Andreas
Krennmair&lt;/a&gt;,&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;"Newsbeuter es el Mutt de los lectores de noticias RSS"&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Desde mi propia experiencia puedo decir que este programa ha cambiado mi forma
de leer las &lt;em&gt;noticias del día&lt;/em&gt;. Antes, para mi, era muy importante que el lector
de noticias que empleara, utilizara un estilo homogéneo entre todas las fuentes y
artículos, con el fin de centrarme en el contenido y no perder el tiempo con
nimiedades. Es algo más importante de lo que pueda parecer a simple vista, cuando
quieres emplear el menor tiempo posible en adquirir la información y al mismo
tiempo quieres asimilar lo que lees. Si cuando vas a leer las noticias tienes 45
minutos y 300 artículos sin leer, el cambiar de un articulo con fondo negro y
letra Sans Serif mediana a uno con fondo blanco y letra Serif enorme, te supone
una distracción y una adaptación de la vista innecesarias e incomodas.&lt;/p&gt;
&lt;p&gt;Vista de un articulo con mi configuración&lt;/p&gt;
&lt;p style="text-align:center;"&gt;&lt;img src="pictures/newsbeuter_articulo.png"
width="700" height="843" alt="Articulo en Newsbeuter" /&gt;&lt;/p&gt;

&lt;p&gt;Pero al comenzar a emplear Newsbeuter me di enseguida cuenta de algo, el carecer
por completo de imágenes y compartir cabecera entre todos los artículos, me ha
servido para pasar por alto o leer en diagonal aquello que menos me interesa. No
solo filtro más rápido, si no que lo hago más eficientemente. Evidentemente hay
artículos en los que las imágenes complementan necesariamente al articulo. En
estos casos o bien la abro directamente en el navegador (tan sencillo como
pulsar &lt;strong&gt;&lt;code&gt;o&lt;/code&gt;&lt;/strong&gt; ) o bien puedo abrir las imágenes de forma independiente en el
mismo si me interesa por ejemplo ver solo una. En este sentido, Newsbeuter
proporciona una lista de todas las Urls presentes en el articulo en forma de
lista al final del mismo, pudiendo abrir cualquiera de ellas introduciendo el
indice de la misma. De hecho, empleando el comando &lt;strong&gt;&lt;code&gt;u&lt;/code&gt;&lt;/strong&gt; podemos acceder a la
lista completa de las mimas en una nueva ventana.&lt;/p&gt;
&lt;h2 id="mi_configuraci+n"&gt;Mi configuración&lt;/h2&gt;
&lt;p&gt;Mi configuración no tiene demasiado de especial, quizás que emplea una
combinación de colores distinta a la habitual y que empleo un par de scripts
para las notificaciones y para crear marcadores. Esta se puede encontrar en mi
repositorio de mis &lt;em&gt;dotfiles&lt;/em&gt; en &lt;a href="http://github.com/joedicastro/dotfiles"&gt;GitHub&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="notificaciones"&gt;Notificaciones&lt;/h2&gt;
&lt;p&gt;Para las notificaciones que emite Newsbeuter después de refrescar las noticias
empleo el script &lt;code&gt;notify.py&lt;/code&gt; que comentaba en este &lt;a href="http://joedicastro.com/notificaciones-de-escritorio-en-ubuntu-desde-python.html"&gt;articulo&lt;/a&gt;
ligeramente modificado para trabajar con Newsbeuter. En la imagen se puede ver
una notificación del programa.&lt;/p&gt;
&lt;p style="text-align:center;"&gt;&lt;img src="pictures/newsbeuter_notify.png"
width="487" height="68" alt="Notificación de Newsbeuter" /&gt;&lt;/p&gt;

&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
    &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;
    &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;gtk&lt;/span&gt;
    &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pynotify&lt;/span&gt;
    &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;textwrap&lt;/span&gt;
    &lt;span class="n"&gt;NOT_NOTIFY&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;
&lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="ne"&gt;ImportError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;NOT_NOTIFY&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;notify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;icon&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;wrap&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Send notification icon messages through libnotify.&lt;/span&gt;

&lt;span class="sd"&gt;    Parameters:&lt;/span&gt;

&lt;span class="sd"&gt;    (str) title -- The notification title&lt;/span&gt;
&lt;span class="sd"&gt;    (str) msg -- The message to display into notification&lt;/span&gt;
&lt;span class="sd"&gt;    (str / uri) icon -- Type of icon (ok|info|error|warm|ask|sync) or icon file&lt;/span&gt;

&lt;span class="sd"&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;NOT_NOTIFY&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;pynotify&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;is_initted&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
        &lt;span class="n"&gt;pynotify&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;init&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;gtk_icon&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;ok&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;gtk&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;STOCK_YES&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="s"&gt;&amp;#39;info&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;gtk&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;STOCK_DIALOG_INFO&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="s"&gt;&amp;#39;error&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;gtk&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;STOCK_DIALOG_ERROR&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="s"&gt;&amp;#39;warm&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;gtk&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;STOCK_DIALOG_WARNING&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="s"&gt;&amp;#39;ask&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;gtk&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;STOCK_DIALOG_QUESTION&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="s"&gt;&amp;#39;sync&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;gtk&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;STOCK_JUMP_TO&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;wrap&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;msg&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;linesep&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;textwrap&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;wrap&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;wrap&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;note&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pynotify&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Notification&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;helper&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;gtk&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Button&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;gtk_icon&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;helper&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;render_icon&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;gtk_icon&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;icon&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;gtk&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ICON_SIZE_BUTTON&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;note&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_icon_from_pixbuf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;gtk_icon&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="ne"&gt;KeyError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;note&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pynotify&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Notification&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;icon&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;note&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Main section&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;notify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Newsbeuter&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;/home/joedicastro/.newsbeuter/icon.png&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;__main__&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="integraci+n_con_pocket"&gt;Integración con Pocket&lt;/h2&gt;
&lt;p&gt;Utilizo &lt;a href="http://getpocket.com"&gt;Pocket&lt;/a&gt; como nexo de unión entre el navegador y el Newsbeuter para
archivar todos aquello artículos que me interesa leer, pero que quiero dejar
para otro momento más idóneo. Hubo un tiempo en que empleaba &lt;a href="http://delicious.com/"&gt;Delicious&lt;/a&gt;
para esta tarea, pero me parece más adecuado Pocket.&lt;/p&gt;
&lt;p&gt;Esto lo consigo empleando el comando para crear marcadores de Newsbeuter y un
script en Python creado para ello. Esta es la parte del archivo de configuración
que relaciona el comando con el script:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;bookmark&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;cmd&lt;/span&gt;                            &amp;quot;&lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;newsbeuter&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;send2ril&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;El script hace uso de la &lt;a href="https://bitbucket.org/Surgo/ril/src"&gt;API Python&lt;/a&gt; para Read it Later (como se llamaba
anteriormente Pocket) para guardar la url del articulo en mi cuenta de Pocket.
Así pulsando &lt;strong&gt;&lt;code&gt;Ctrl + b&lt;/code&gt;&lt;/strong&gt; se guarda el marcador en Pocket.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/usr/bin/env python&lt;/span&gt;
&lt;span class="c"&gt;# -*- coding: utf8 -*-&lt;/span&gt;

&lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="sd"&gt;    send2ril.py: Send a new url to Read it Later&lt;/span&gt;
&lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;

&lt;span class="n"&gt;__author__&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;joe di castro &amp;lt;joe@joedicastro.com&amp;gt;&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;__license__&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;GNU General Public License version 3&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;__date__&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;18/06/2012&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;__version__&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;0.1&amp;quot;&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;readitlater&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;ril_config&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;config&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Main section&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;api&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;readitlater&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;API&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RIL_APIKEY&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RIL_USERNAME&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                          &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RIL_PASSWORD&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[{&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;url&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;title&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]}]&lt;/span&gt;
    &lt;span class="n"&gt;api&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;__main__&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;En el script se importa un modulo, &lt;code&gt;ril_config&lt;/code&gt;, que es el que contiene las
claves de mi cuenta de Pocket, este modulo sería algo similar a esto
(evidentemente los valores son falsos):&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c"&gt;# ril credentials&lt;/span&gt;
&lt;span class="n"&gt;RIL_APIKEY&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;987u1ksjsdfRk54kKLKL34jkjij9945k&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;RIL_USERNAME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;usuario&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;RIL_PASSWORD&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;ADRKSD-Xk3kj5kjljFl&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Por lo tanto para hacerlo funcionar necesitamos crear un fichero &lt;code&gt;ril_config.py&lt;/code&gt;
con las credenciales de cada uno para Pocket. Los campos &lt;code&gt;RIL_USERNAME&lt;/code&gt; y
&lt;code&gt;RIL_PASSWORD&lt;/code&gt; se corresponden evidentemente con el usuario y la contraseña que
tengamos para el servicio. El otro campo, &lt;code&gt;RIL_APIKEY&lt;/code&gt; es una clave que podemos
obtener en &lt;a href="http://getpocket.com/api/signup/"&gt;esta página&lt;/a&gt; para registrar nuestra aplicación (en este caso
nuestro script) y que pueda acceder de forma autorizada a la API de Pocket.&lt;/p&gt;
&lt;h3 id="copia_de_seguridad_de_las_urls_de_pocket"&gt;Copia de seguridad de las urls de Pocket&lt;/h3&gt;
&lt;p&gt;Del mismo modo, aprovechando la misma API que empleo en el anterior script, he
creado otro script que ejecuto regularmente con cron, que me guarda una copia en
mi disco duro con todas las urls que tengo guardadas en Pocket. Vamos, una copia
de seguridad, uno nunca sabe cuando este tipo de servicios pueden dejar de
funcionar. Estas direcciones las guardo en un fichero con formato &lt;a href="https://es.wikipedia.org/wiki/Org-mode"&gt;Org-mode&lt;/a&gt;&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/usr/bin/env python&lt;/span&gt;
&lt;span class="c"&gt;# -*- coding: utf8 -*-&lt;/span&gt;

&lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="sd"&gt;    get.py: Get the urls stored in Read it Later &amp;amp; save them in a Org-mode file&lt;/span&gt;
&lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;

&lt;span class="n"&gt;__author__&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;joe di castro &amp;lt;joe@joedicastro.com&amp;gt;&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;__license__&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;GNU General Public License version 3&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;__date__&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;18/06/2012&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;__version__&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;0.1&amp;quot;&lt;/span&gt;

&lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;
    &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
    &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;readitlater&lt;/span&gt;
    &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;ril_config&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;config&lt;/span&gt;
&lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="ne"&gt;ImportError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="c"&gt;# Checks the installation of the necessary python modules&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;linesep&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;An error found importing one module:&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exc_info&lt;/span&gt;&lt;span class="p"&gt;()[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]),&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;You need to install it&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Stopping...&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;
    &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Main section&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;api&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;readitlater&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;API&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RIL_APIKEY&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RIL_USERNAME&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                          &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RIL_PASSWORD&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;items&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;api&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;state&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;unread&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;lista&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;list&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;ril_urls.org&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;w&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;* Read It Later URLs&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;linesep&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;lista&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
            &lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;** {0}{1}&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;title&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;utf8&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                        &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;linesep&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
            &lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;   [[{0}][Enlace]]{1}{1}&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;url&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
                        &lt;span class="n"&gt;encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;utf8&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;linesep&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;__main__&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="conclusi+n"&gt;Conclusión&lt;/h2&gt;
&lt;p&gt;Newsbeuter no es para todo el mundo, por supuesto, la gran mayoría considerarían
decimonónico el emplear un interfaz de texto en vez de uno gráfico. Muchos
incluso llamarían herejía a usar el teclado en vez de el ratón (aunque luego se
vuelvan locos con las pantallas táctiles). Lo respeto y lo entiendo, pero para
aquellos que aman su tiempo y no están dispuestos a desperdiciarlo, deberían
darle una oportunidad a esta aplicación.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">joe di castro</dc:creator><pubDate>Mon, 18 Jun 2012 23:26:00 +0200</pubDate><guid>http://joedicastro.com/productividad-linux-newsbeuter.html</guid><category>productividad</category><category>linux</category><category>ncurses</category><category>rss</category><category>python</category></item><item><title>Productividad &amp; Linux: Pentadactyl</title><link>http://joedicastro.com/productividad-linux-pentadactyl.html</link><description>&lt;p&gt;&lt;a href="http://5digits.org/pentadactyl/"&gt;Pentadactyl&lt;/a&gt; como su nombre sugiere (&lt;em&gt;"que tiene cinco dedos"&lt;/em&gt;), está
pensado para ser usado con los cinco dedos de cada mano, ergo, el teclado. No es
una aplicación en si misma, si no un complemento para el navegador web
&lt;strong&gt;Firefox&lt;/strong&gt;. Básicamente podríamos resumirlo en que es un complemento que te
permite controlar Firefox desde el teclado. Pero sería un resumen bastante
injusto para todo lo que te ofrece este plugin. Una pista, los atajos de teclado
están basados en los de
&lt;a href="https://es.wikipedia.org/wiki/Vim"&gt;Vim&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Ejemplo de navegación web con Pentadactyl empleando únicamente el teclado.
Observar como el puntero del ratón permanece estático en la misma posición
(parte superior derecha de la pantalla). Es un ejemplo muy básico, pero llega
para hacerse una idea.&lt;/p&gt;
&lt;p style="text-align:center;"&gt;&lt;img src="pictures/pentadactyl_demo.gif"
width="600" height="400" alt="Pentadactyl" /&gt;&lt;/p&gt;

&lt;p&gt;En esta imagen se puede ver una ventana de Firefox estándar y una otra de
Firefox con el complemento Pentadactyl activado (con mi configuración). Como se
puede observar, se puede ganar una cantidad significativa de espacio en la
ventana para la página web. En este caso son 170px, un 6% más de espacio
vertical. En el caso de que abriéramos otra pestaña más, aparecería la barra de
pestañas y solo ahorraríamos el espacio que ocupan la barra de menús y la de
navegación. Aunque en mi configuración actual ya he eliminado también la barra de
pestañas e incluso las barras de desplazamiento, solo se ve la línea de estado
de Pentadactyl.&lt;/p&gt;
&lt;p style="text-align:center;"&gt;&lt;img src="pictures/pentadactyl_vs_ffox.png"
width="700" height="431" alt="Pentadactyl vs Firefox" /&gt;&lt;/p&gt;

&lt;p&gt;Pero... y la barra de herramientas de navegación, ¿no es necesaria? No, con este
complemento no lo es, dado que las direcciones las introduces a través de la
línea de comandos y la dirección de la página web siempre está visible en la
linea de estado inferior de Pentadactyl. Por ejemplo, para abrir la página web
de google, pulsamos la tecla &lt;strong&gt;&lt;code&gt;o&lt;/code&gt;&lt;/strong&gt; y luego escribimos &lt;code&gt;google.es&lt;/code&gt; y pulsamos
&lt;strong&gt;&lt;code&gt;↵&lt;/code&gt;&lt;/strong&gt; así de sencillo. Si quisiéramos abrirla en una nueva pestaña, bastaría
con pulsar &lt;strong&gt;&lt;code&gt;t&lt;/code&gt;&lt;/strong&gt; en lugar de &lt;strong&gt;&lt;code&gt;o&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p style="text-align:center;"&gt;&lt;img src="pictures/pentadactyl_command.png"
width="700" height="118" alt="Linea de comandos de Pentadactyl" /&gt;&lt;/p&gt;

&lt;p&gt;Aquí se puede ver la línea de estado y la linea de comandos. La línea de
comandos tiene autocompletado y en la imagen se ve como se va a introducir el
comando que activa la completísima ayuda que proporciona el complemento. A la
línea de comandos se accede igual que en Vim, pulsando la tecla &lt;strong&gt;&lt;code&gt;:&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id="caracter+sticas"&gt;Características&lt;/h2&gt;
&lt;p&gt;Estas son algunas de las funciones que proporciona Pentadactyl para Firefox, sin
contar con las &lt;a href="http://5digits.org/pentadactyl/plugins"&gt;extensiones disponibles para el mismo Pentadactyl&lt;/a&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Atajos de teclado basados en vim. Soporta las mismas opciones de contexto que
  Vim, por ejemplo, desplazarse dos pestañas hacia la derecha &lt;strong&gt;&lt;code&gt;2 &amp;lt;ctrl&amp;gt; +
  n&lt;/code&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Comandos para prácticamente cualquier función de Firefox. Ejemplo: abrir la
  ventana de complementos, &lt;strong&gt;&lt;code&gt;:dialog addons&lt;/code&gt;&lt;/strong&gt; que puede abreviarse como &lt;strong&gt;&lt;code&gt;:dia
  addo↹&lt;/code&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Autocompletado para todos los comandos, opciones, marcadores, bufferes,
  motores de búsqueda, ...&lt;/li&gt;
&lt;li&gt;Características de privacidad adicionales a las de Firefox y muy potentes&lt;/li&gt;
&lt;li&gt;Búsqueda dentro de la página (con resaltado) y navegación a través de los
  resultados. Similar a la búsqueda de Vim. Se pueden emplear expresiones
  regulares&lt;/li&gt;
&lt;li&gt;Macros de teclado (se pueden grabar sobre la marcha) y se pueden personalizar
  los atajos de teclado y los comandos (pudiendo ademas añadir otros)&lt;/li&gt;
&lt;li&gt;Esquemas de color y extensiones (algunas muy interesantes)&lt;/li&gt;
&lt;li&gt;Navegación potente y rápida a través de enlaces, campos de formularios, áreas
  de texto, ... desde el teclado&lt;/li&gt;
&lt;li&gt;Linea de estado similar a la de Vim&lt;/li&gt;
&lt;li&gt;Se pueden ejecutar comandos de shell directamente en la línea de comandos de
  Pentadactyl&lt;/li&gt;
&lt;li&gt;Interfaz mínimo, pudiendo ocultar menús, barras de herramientas, barras de
  desplazamiento y pestañas&lt;/li&gt;
&lt;li&gt;Se pueden cargar scripts directamente con el comando &lt;strong&gt;&lt;code&gt;:source&lt;/code&gt;&lt;/strong&gt;, soportando
  ficheros javascript y CSS, además de comandos propios de Pentadactyl&lt;/li&gt;
&lt;li&gt;Se pueden emplear alarmas visuales o sonoras para indicarnos errores&lt;/li&gt;
&lt;li&gt;Posibilidad de establecer marcadores de posición dentro de páginas&lt;/li&gt;
&lt;li&gt;Marcadores rápidos para acceder de forma rápida a los sitios que queramos&lt;/li&gt;
&lt;li&gt;Se pueden editar los campos de texto desde un editor externo&lt;/li&gt;
&lt;li&gt;AutoComandos para ejecutar acciones activadas por ciertos eventos&lt;/li&gt;
&lt;li&gt;Sistema de ayuda incorporado completísimo que cubre todo lo que el plugin
  puede hacer. A la ayuda se accede bien a través de los comandos &lt;strong&gt;&lt;code&gt;:help&lt;/code&gt;&lt;/strong&gt; o
  &lt;strong&gt;&lt;code&gt;:helpall&lt;/code&gt;&lt;/strong&gt; o bien pulsando la tecla &lt;strong&gt;&lt;code&gt;F1&lt;/code&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;No es mi intención explicar aquí la forma de trabajar con el complemento, ya que
posee tantas opciones y una ayuda tan completa, que lo considero excesivo.
Además no es necesario conocer toda su funcionalidad, de hecho yo sigo
infrautilizandolo y voy descubriendo funciones nuevas de vez en cuando. Por
ejemplo, hasta que no he vuelto a repasar sus funciones para escribir este
articulo, estaba empleando un plugin (It's All Text!) para editar los campos de
texto con gVim, ahora lo hago también con Pentadactyl y de manera aún más
sencilla. Y con este ya van ocho complementos para Firefox que he dejado de
usar porque los suplo con Pentadactyl.&lt;/p&gt;
&lt;h2 id="mi_configuraci+n"&gt;Mi configuración&lt;/h2&gt;
&lt;p&gt;Mi configuración es realmente sencilla, ya que aparte de emplear un par de
extensiones, un par de comandos y un esquema de color, lo demás es cambiar
ciertas opciones predefinidas del mismo. La configuración la he dejado
disponible en mi repositorio de &lt;code&gt;dotfiles&lt;/code&gt;, en &lt;a href="http://github.com/joedicastro/dotfiles"&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id="validar_el_html_de_una_p+gina"&gt;Validar el HTML de una página&lt;/h3&gt;
&lt;p&gt;Este es un comando que he añadido a la configuración para poder validar el HTML
de una página empleando la &lt;a href="http://validator.w3.org/"&gt;herramienta del W3C&lt;/a&gt;. Como se puede ver, se
basa en emplear javascript para definir lo que queremos hacer:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nx"&gt;command&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;description&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Validar XHTML&amp;#39;&lt;/span&gt; &lt;span class="nx"&gt;valid&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;open&lt;/span&gt;
&lt;span class="nx"&gt;javascript&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="k"&gt;void&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;location&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;http://validator.w3.org/check?uri=&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;escape&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;location&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Aquí se puede ver como funciona:&lt;/p&gt;
&lt;p style="text-align:center;"&gt;&lt;img src="pictures/validate.gif" width="640"
height="400" alt="validate HTML" /&gt;&lt;/p&gt;

&lt;p&gt;Gracias al autocompletado de Pentadactyl, solo es necesario escribir las dos
primeras letras del comando y pulsar el tabulador y finalmente Intro para
ejecutar la operación. Nos aparece la herramienta del W3C diciendo que la página
ha validado correctamente como HTML 5. Y desde luego esto es más rápido que
emplear el ratón conjuntamente con otro plugin.&lt;/p&gt;
&lt;h3 id="guardar_paginas_en_pocket_anteriormente_read_it_later"&gt;Guardar paginas en Pocket (anteriormente Read it Later)&lt;/h3&gt;
&lt;p&gt;Para guardar páginas en &lt;a href="http://getpocket.com"&gt;Pocket&lt;/a&gt;, el que hasta hace unas semanas era Read
it Later, empleo también otro comando. Antes empleaba el plugin oficial, pero no
solo consumía memoria si no que para emplear solamente una combinación de
teclas, empleo un comando de Pentadactyl y me ahorro el tenerlo instalado.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nx"&gt;command&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="nx"&gt;pocket&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;description&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Bookmarklet: Save to Pocket&amp;quot;&lt;/span&gt; &lt;span class="nx"&gt;open&lt;/span&gt;
&lt;span class="nx"&gt;javascript&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;&lt;span class="nx"&gt;ISRIL_H&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;83dd&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nx"&gt;PKT_D&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;getpocket.com&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nx"&gt;ISRIL_SCRIPT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;SCRIPT&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="nx"&gt;ISRIL_SCRIPT&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;text/javascript&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nx"&gt;ISRIL_SCRIPT&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;http://&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;PKT_D&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/b/r.js&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementsByTagName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;head&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;appendChild&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ISRIL_SCRIPT&lt;/span&gt;&lt;span class="p"&gt;)})();&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Podemos ver en esta animación como funciona este comando:&lt;/p&gt;
&lt;p style="text-align:center;"&gt;&lt;img src="pictures/pocket.gif" width="640"
height="400" alt="Guardar pagina en Pocket" /&gt;&lt;/p&gt;

&lt;p&gt;La clave para este comando es bien sencilla, primero tener una cuenta en Pocket,
luego ir a la página en la que se nos proporciona un &lt;a href="http://getpocket.com/add/"&gt;botón para la barra de
marcadores &lt;/a&gt; para añadir las páginas a Pocket. Copiad con el botón derecho
la ruta del enlace que os proporciona ese botón, &lt;em&gt;et voilà!&lt;/em&gt;, ahí tenéis el
código javascript que necesitáis para el comando. Luego para ejecutar el comando
solo necesitáis estar logueados en Pocket para que funcione.&lt;/p&gt;
&lt;h3 id="editar_+reas_de_texto_con_un_editor_externo"&gt;Editar áreas de texto con un editor externo&lt;/h3&gt;
&lt;p&gt;Esta opción es para muy cómoda cuando se trata de editar grandes áreas de texto,
pues un editor externo te proporciona mejores y más cómodas herramientas. Además
en caso de que haya algún problema al enviar el texto, sigues teniendo la copia
en el editor.&lt;/p&gt;
&lt;p&gt;Activar esta opción es muy sencillo, para Linux y Gvim, añadir esto a el archivo
de configuración:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="k"&gt;set&lt;/span&gt; editor&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/usr/bin/gvim -f +&amp;lt;line&amp;gt; &amp;lt;file&amp;gt;&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Después puede ser empleado como comentaba para editar áreas de texto, o para
abrir el código fuente de una página, entre otras posibilidades.&lt;/p&gt;
&lt;h3 id="readability"&gt;Readability&lt;/h3&gt;
&lt;p&gt;Para usar este servicio empleo una extension, &lt;a href="https://github.com/grassofhust/dotfiles/blob/master/.pentadactyl/plugins/readability.js"&gt;readability.js&lt;/a&gt;, que es
necesario descargar y añadir al directorio &lt;code&gt;~/.pentadactyl/plugins/&lt;/code&gt;. Para
ejecutarlo solo necesitamos emplear el comando  &lt;strong&gt;&lt;code&gt;:rea ↹ ↵&lt;/code&gt;&lt;/strong&gt;, como podemos ver
en esta animación:&lt;/p&gt;
&lt;p style="text-align:center;"&gt;&lt;img src="pictures/readability.gif" width="640"
height="400" alt="Readability + Pentadactyl" /&gt;&lt;/p&gt;

&lt;h3 id="http_headers"&gt;HTTP Headers&lt;/h3&gt;
&lt;p&gt;Esta es otra extensión que nos permite ver las cabeceras HTTP de una página. Es
una de las &lt;a href="http://5digits.org/pentadactyl/plugins"&gt;extensiones oficiales &lt;/a&gt; y al igual que la anterior, basta con
añadirla al directorio de plugins de Pentadactyl.&lt;/p&gt;
&lt;p&gt;Si queremos ver la información que Pentadactyl nos ofrece de una página,
escribimos el siguiente comando &lt;strong&gt;&lt;code&gt;:pageinfo&lt;/code&gt;&lt;/strong&gt; y podemos ver algo como esto:&lt;/p&gt;
&lt;p style="text-align:center;"&gt;&lt;img src="pictures/pageinfo.png" width="700"
height="190" alt="pageinfo" /&gt;&lt;/p&gt;

&lt;p&gt;Ahora, si queremos ver las cabeceras, tenemos estas dos opciones:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Request Headers, &lt;strong&gt;&lt;code&gt;:pageinfo h&lt;/code&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style="text-align:center;"&gt;&lt;img src="pictures/requesth.png" width="700"
height="141" alt="Request Headers" /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Response Headers, &lt;strong&gt;&lt;code&gt;:pageinfo H&lt;/code&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style="text-align:center;"&gt;&lt;img src="pictures/responseh.png" width="700"
height="150" alt="Response Headers" /&gt;&lt;/p&gt;

&lt;p&gt;Y podemos ver las dos a la vez empleando &lt;strong&gt;&lt;code&gt;:pageinfo hH&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id="alternativas"&gt;Alternativas&lt;/h2&gt;
&lt;p&gt;Existen diferentes alternativas para este complemento, tanto para el mismo
Firefox, como para otros navegadores. Pero ninguna es tan completa como este.&lt;/p&gt;
&lt;p&gt;Podríamos empezar por &lt;a href="http://www.vimperator.org/vimperator"&gt;Vimperator&lt;/a&gt;, que es el plugin original, ya que
Pentadactyl es un fork del mismo por parte de algunos de los desarrolladores
originales del mismo. Luego tenemos a &lt;a href="http://code.google.com/p/vimium-firefox/"&gt;Vimium&lt;/a&gt; que en este caso es una
versión del mismo plugin para Chrome.&lt;/p&gt;
&lt;p&gt;Para Chrome/Chromium tenemos también varios plugins disponibles,&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://chrome.google.com/webstore/detail/godjoomfiimiddapohpmfklhgmbfffjj"&gt;Vrome&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://chrome.google.com/webstore/detail/dbepggeogbaibhgnhhndojpepiihcmeb"&gt;Vimium&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://chrome.google.com/webstore/detail/gghkfhpblkcmlkmpcpgaajbbiikbhpdi"&gt;vichrome&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Existen alguno que otra solución para Safari y Opera, si no me equivoco.&lt;/p&gt;
&lt;h3 id="navegadores_con_control_a_trav+s_del_teclado"&gt;Navegadores con control a través del teclado&lt;/h3&gt;
&lt;p&gt;Existen una serie de navegadores, todos ellos pensados para ser muy ligeros y
todos basados en &lt;a href="http://es.wikipedia.org/wiki/WebKit"&gt;Webkit&lt;/a&gt;, que implementan la navegación por teclado por
defecto.  Además estos que muestro están basados en los atajos de teclado de
Vim.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.uzbl.org/"&gt;Uzbl&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://sourceforge.net/apps/trac/vimprobable/"&gt;Vimprobable&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://portix.bitbucket.org/dwb/"&gt;dwb&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://mason-larobina.github.com/luakit/"&gt;luakit&lt;/a&gt;, orientado a programadores y usuarios avanzados.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="teledactyl"&gt;Teledactyl&lt;/h2&gt;
&lt;p&gt;Los mismo desarrolladores de Pentadactyl tienen disponible otro plugin para la
otra gran herramienta de la &lt;a href="https://es.wikipedia.org/wiki/Mozilla_Foundation"&gt;Mozilla Foundation&lt;/a&gt;, el cliente de correo
electrónico &lt;strong&gt;Thunderbird&lt;/strong&gt; , y aunque está en desarrollo en fase muy temprana, se
puede usar: &lt;a href="http://5digits.org/teledactyl"&gt;Teledactyl&lt;/a&gt;. Aunque si queremos emplear un plugin similar,
pero con un desarrollo más maduro, podemos escoger la herramienta hermana de
Vimperator, &lt;a href="http://test.vimperator.org/muttator"&gt;Muttator&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="productividad"&gt;Productividad&lt;/h2&gt;
&lt;p&gt;Se qué me dejo muchas posibilidades de este plugin en el tintero, pero el
articulo se haría eterno. Si no ha despertado ya tu curiosidad por lo que te he
contado y mostrado, difícilmente lo hará ya. Ahora bien, si decides probarlo,
entonces seguro que serás el primero en mirar la ayuda para intentar sacarle
todo el jugo que este complemento te aporta. A lo poco que lo domines,
incrementara tu productividad en la navegación web considerablemente.&lt;/p&gt;
&lt;p&gt;Y es que una vez te acostumbras a él -si conoces Vim y tienes soltura con él,
todo te será muy natural- la diferencia entre navegar con el teclado y el ratón
es abismal, no hay color. Tamaña es la diferencia que ni siquiera me planteo el
cambio de navegador por otro, porque todos carecen de Pentadactyl. Si navegas
habitualmente por la red, agradecerás mucho el tiempo que un plugin como este te
devuelve para emplearlo en otras tareas.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">joe di castro</dc:creator><pubDate>Thu, 14 Jun 2012 20:52:00 +0200</pubDate><guid>http://joedicastro.com/productividad-linux-pentadactyl.html</guid><category>linux</category><category>productividad</category><category>firefox</category><category>pentadactyl</category></item><item><title>Productividad &amp; Linux: Aplicaciones</title><link>http://joedicastro.com/productividad-linux-aplicaciones.html</link><description>&lt;p&gt;En la anterior serie de artículos sobre &lt;a href="http://joedicastro.com/productividad-en-el-escritorio-linux-introduccion.html"&gt;Productividad en el escritorio
Linux&lt;/a&gt;, hacia referencia a los lanzadores de aplicaciones y a los gestores
de ventanas de mosaico como elementos diferenciadores a la hora de ser más
productivos. Aunque la productividad en el escritorio es fundamental para
trabajar de forma más eficiente, son las aplicaciones que empleamos, las que en
último lugar, determinaran la realidad de nuestro día a día frente a la
pantalla.&lt;/p&gt;
&lt;p&gt;Gran parte de las aplicaciones para Linux (las más conocidas y extendidas) son
realmente una adaptación de los conceptos de los sistemas operativos más
difundidos: Windows &amp;amp; Mac OS. Esto es, aplicaciones muy pesadas, repletas de
opciones y funciones de las que se aprovechan en realidad muy pocas.  Además
están por lo general fuertemente orientadas al empleo del ratón y muchas veces
con un interfaz gráfico muy agradable visualmente pero con un concepto de
usabilidad, en mi opinión, no siempre bien enfocado.&lt;/p&gt;
&lt;h2 id="la_usabilidad_mal_entendida_como_enemiga_de_la_productividad"&gt;La usabilidad mal entendida, como enemiga de la productividad&lt;/h2&gt;
&lt;p&gt;La &lt;a href="https://es.wikipedia.org/wiki/Usabilidad"&gt;usabilidad&lt;/a&gt;, ese concepto tan de moda últimamente, está desde mi
punto de vista, frecuentemente muy mal enfocado. Dejando a un lado lo que
teóricamente se pretende, en el 80% de las ocasiones esto se traduce en la
práctica en dos palabras en ingles: &lt;em&gt;For dummies&lt;/em&gt;  ("pá tontos", en castizo). Es
decir, que cualquiera pueda manejar la aplicación sin grandes dificultades y en
el menor tiempo posible. Reducir las barreras de entrada está muy bien, pero
desgraciadamente muchas veces esto es una estrategia a corto plazo que no
debería emplearse &lt;strong&gt;NUNCA de este modo&lt;/strong&gt; en aplicaciones profesionales.
Entiendo, y además apoyo, está estrategia en aplicaciones web y aplicaciones de
consumo, pero lo veo nocivo a la hora de aplicaciones destinadas a producir
datos y contenidos de forma masiva e intensiva. Y a mi modo de ver es un
problema serio en un gran número de escenarios.&lt;/p&gt;
&lt;h3 id="un_caso_real_de_usabilidad_enga+osa"&gt;Un caso real de usabilidad engañosa&lt;/h3&gt;
&lt;p&gt;No proporcionare datos reales por respeto a las partes implicadas, pero quiero
aportar aquí un ejemplo real que he podido vivir de cerca durante varios años,
de lo que la pretendida usabilidad, ni lo es, ni ayuda a sacar más partido de
las herramientas:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Escenario fallido&lt;/strong&gt; : un negocio que se dedica el 90% del tiempo a editar
grandes cantidades de texto. Se informatizan a mediados de los 80 y adoptan como
procesador de textos WordPerfect para consola. Después de varios años, están en
la versión de WordPerfect 5.1 para MSDOS con un 90% de los empleados (unos
diez), con un dominio asombroso de la aplicación, basando todo su trabajo en
atajos de teclado y una pantalla donde únicamente se visualiza el texto sobre el
que están trabajando. Productividad: realmente elevada.  Principios del siglo
XXI, un consultor informático embaucador (&lt;em&gt;aka&lt;/em&gt; comercial) los convence de que
el futuro es &lt;a href="https://es.wikipedia.org/wiki/Wysiwyg"&gt;WYSIWYG&lt;/a&gt; y que eso del terminal de texto es cosa del pasado.
Tras una primera migración a WordPerfect para Windows, la productividad baja de
forma significativa. La solución propuesta: Word, la productividad cae de forma
dramática. La excusa del "asesor": necesidad de adaptación al nuevo concepto.
Dos años después, la productividad sigue sin incrementarse, el trabajo se
acumula y se contratan a dos personas más para refuerzo. El personal ya se ha
adaptado y están tan hipnotizados por el ratón, los iconos y los "regalitos" que
su software les proporciona en cada nueva versión, que se oponen radicalmente a
volver al "pasado". En realidad, nadie desde dentro se cuestionaba que el
problema real era que habían dejado de centrarse en el contenido, para centrarse
en el continente. Lo más irónico: lo que realmente hacían era crear e imprimir
documentos, impresos en impresoras matriciales que seguían imprimiendo con la
misma calidad y la misma fuente Courier 11 sobre el mismo tipo de documentos
oficiales.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Escenario exitoso&lt;/strong&gt; : Paralelamente, en un área de negocio distinta, pero
estrechamente relacionada con la anterior, una empresa que ha trabajado siempre
en entorno de terminal contra un &lt;a href="https://es.wikipedia.org/wiki/As/400"&gt;AS/400,&lt;/a&gt; presentaba una mentalidad y un
resultado totalmente opuestos. Nunca se han dejado seducir por los cantos de
sirena del marketing y se han opuesto radicalmente a cualquier cambio de
sistema, simplemente han evolucionado el que ya tenían y conservando su
plantilla prácticamente intacta durante el mismo periodo. El resultado: la
productividad se ha mantenido constante a lo largo de los años y han podido
asumir importantes picos de carga de trabajo sin demasiadas dificultades. Y un
efecto secundario de esta toma de decisiones: el haberse mantenido dentro de un
sistema maduro y estable les ha librado de un mantenimiento casi nulo en el área
de software, limitándose el mismo al área de hardware (lo habitual). Como podéis
imaginar, en un sistema basado en plataforma Windows y actualizaciones sucesivas
de SO y aplicaciones, el mantenimiento del área de software les ha supuesto una
importante carga económica al otro negocio.&lt;/p&gt;
&lt;p&gt;Que cada uno extraiga sus propias conclusiones. La mía: que la carrera hacia
adelante de fabricantes de sistemas operativos y aplicaciones (cuyo único
recurso para seguir vendiendo ha sido con frecuencia un simple
lavado de cara) ha supuesto, en muchos aspectos, un paso atrás en varias áreas de
la informática.&lt;/p&gt;
&lt;h2 id="la_usabilidad_bien_entendida"&gt;La usabilidad bien entendida&lt;/h2&gt;
&lt;p&gt;No quiero decir con lo anterior, que las aplicaciones gráficas sean el problema
ni mucho menos. De hecho, hay aplicaciones gráficas que son una maravilla de la
usabilidad. Por ejemplo, Autocad, que te permite un control casi absoluto como
usuario avanzado (con los comandos y &lt;a href="https://es.wikipedia.org/wiki/Autolisp"&gt;AutoLISP&lt;/a&gt;) y que al mismo tiempo te
permite realizar gran parte del trabajo de manera muy intuitiva (siempre
teniendo en cuenta el contexto del usuario al que va dirigido) empleando la
interfaz gráfica. Lo que permite que sea muy usable sin detrimento de la
productividad. Lo que quiero decir, es que es necesario añadir el sentido común
como un criterio más, si no el primero, a la hora de implementar la usabilidad.&lt;/p&gt;
&lt;p&gt;Si consultamos la Wikipedia, encontramos dos definiciones de la ISO para el
concepto de &lt;a href="https://es.wikipedia.org/wiki/Usabilidad"&gt;usabilidad&lt;/a&gt; :&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;La usabilidad se refiere a la capacidad de un software de ser comprendido,
aprendido, usado y ser atractivo para el usuario, en condiciones específicas de
uso&lt;/p&gt;
&lt;p&gt;Usabilidad es la eficacia, eficiencia y satisfacción con la que un producto
permite alcanzar objetivos específicos a usuarios específicos en un contexto de
uso específico&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Como decía anteriormente, la realidad dista mucho de la teoría. En la
práctica se ha adoptado con bastante fidelidad la primera definición, eso sí,
ignorando con bastante frecuencia la parte de "condiciones específicas" y la
segunda definición parece haber sido ampliamente ignorada.&lt;/p&gt;
&lt;p&gt;Si bien es cierto que la mayoría de las aplicaciones actuales pueden ser muy
potentes, lo que yo veo mirando al pasado, es que la gran mayoría de los
empleados que utilizaban una aplicación a diario eran usuarios avanzados y
cuando no expertos. Hoy en día, y ciñéndonos al ámbito profesional, a algunos
les cambias el icono de la misma, y no saben iniciarla. Y no es culpa de ellos,
las aplicaciones se diseñan para que las puedan usar hasta los más reacios a la
tecnología (siempre en su contexto), pero una vez que necesitas realizar algo
complejo, existe un salto conceptual que la mayoría de los usuarios, ni se
atreven a dar, ni quieren darlo.&lt;/p&gt;
&lt;p&gt;Es realmente complejo, muy complejo, conseguir una interfaz de usuario que sea
realmente amigable e intuitiva y que al mismo tiempo consiga satisfacer las
necesidades reales tanto del usuario profesional, como del usuario ocasional. El
problema de base está en intentar crear herramientas todoterreno. Ni maldita
falta que le hace un Word actual a un usuario domestico y que demonios hace un
escritor profesional empleándolo en vez de algo como Latex + editor de texto.
Ni un usuario domestico necesita de herramientas para correspondencia, programar
macros, etc, ni un escritor necesita preocuparse del formato del texto. Y sin
embargo es empleado hasta por editores que deberían estar empleando
herramientas de autoedición.&lt;/p&gt;
&lt;p&gt;Por ejemplo, una aplicación que es un claro ejemplo de buena usabilidad y que
está teniendo una buena acogida últimamente, es &lt;a href="http://www.sublimetext.com/"&gt;Sublime Text&lt;/a&gt;. Es bonita,
es potente, es amigable y es francamente muy, muy usable. Realmente lo que han
hecho ha sido recoger el testigo que dejo &lt;a href="http://macromates.com/"&gt;TextMate&lt;/a&gt;, que fueron los
primeros en darse cuenta de algo muy sencillo. Esto es, los editores de texto y
los IDEs para programadores son una de las aplicaciones en las que nunca llueve
a gusto de todos, surgen continuamente nuevas alternativas, pero no se acaba por
imponer ninguna. Por que en realidad, si nos fijamos en los programadores más
experimentados, dos de los editores más utilizados y defendidos a muerte, son
&lt;a href="https://es.wikipedia.org/wiki/Vim"&gt;Vim&lt;/a&gt; y &lt;a href="https://es.wikipedia.org/wiki/Emacs"&gt;Emacs&lt;/a&gt;, ambos basados en conceptos de hace casi cuatro
décadas. Es que la usabilidad ya estaba inventada hace mucho tiempo, y no tiene
nada que ver ni con gráficos bonitos, ni con tratar a los usuarios como
imbéciles. La usabilidad, señores, está en la adaptación del interfaz del
ordenador de la manera más optima posible al interfaz que la naturaleza nos dio,
nuestras manos. Y desde luego, jamás un ratón, con los botones que quieras
ponerle, sera más eficaz que un teclado (usado con los diez deditos), al igual
que no lo es más que un bolígrafo o una tableta gráfica con lápiz. Que para eso
tenemos los dedos y no muñones. Si vamos a comprar un libro en Internet, el
ratón es nuestro gran aliado para hacerlo de forma intuitiva sin conocimientos
previos, pero si me vas a obligar a introducir entradas de almacén 40 horas a la
semana con la misma aplicación, por favor, no me condenes a usar el ratón cada
dos pasos. Sentido común!&lt;/p&gt;
&lt;h2 id="las_aplicaciones_amigas_de_la_productividad"&gt;Las aplicaciones amigas de la productividad&lt;/h2&gt;
&lt;p&gt;Este entrada pretende ser la introducción y el indice de una nueva serie de
artículos dedicada a esas aplicaciones para Linux que para mi marcan la
diferencia entre &lt;em&gt;hacer el trabajo&lt;/em&gt; y &lt;em&gt;marear la perdiz&lt;/em&gt;. Estas aplicaciones
comparten en general tres puntos en común:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Son muy eficientes y ayudan a incrementar nuestra productividad.&lt;/li&gt;
&lt;li&gt;Realizan a una sola tarea y lo hacen bien o muy bien.&lt;/li&gt;
&lt;li&gt;No están muy extendidas.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Iré actualizando la entrada a medida que vaya creando los artículos para cada
aplicación.&lt;/p&gt;
&lt;h3 id="aplicaciones"&gt;Aplicaciones&lt;/h3&gt;
&lt;p&gt;Estas son algunas de las aplicaciones que yo empleo a menudo y que al igual que
a mí, pueden servirte para incrementar de forma notable tu productividad.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://joedicastro.com/productividad-linux-pentadactyl.html"&gt;Pentadactyl&lt;/a&gt;, complemento para Firefox para controlar el navegador
  completamente desde el teclado, permite navegar entre las páginas a velocidad
  de vértigo. Además es muy potente y posee muchísimas opciones y posibilidades.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://joedicastro.com/productividad-linux-newsbeuter.html"&gt;Newsbeuter&lt;/a&gt;, aplicación para leer subscripciones RSS y Atom. Funciona
  en modo texto, con una interfaz tipo ncurses y completamente controlable desde
  el teclado. Es una aplicación rapidisima y con un consumo muy escaso de
  recursos.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://joedicastro.com/productividad-linux-turses.html"&gt;Turses&lt;/a&gt;, cliente twitter para la consola con interfaz ncurses.
  Controlable desde el teclado con atajos basados en Vim. Muy personalizable y
  con un funcionamiento muy versátil y ágil.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://joedicastro.com/productividad-linux-tmux.html"&gt;tmux&lt;/a&gt;, es un multiplexor de terminales. Permite agrupar varios
  terminales en una sola ventana de forma muy eficiente. La herramienta ideal
  para los amantes de la consola, desarrolladores y administradores de sistemas.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://joedicastro.com/productividad-linux-zathura.html"&gt;zathura&lt;/a&gt;, es un visor de documentos minimalista y controlable desde
  el teclado. Soporta documentos en formato PDF, DJVU, PostScript y Comic Book.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://joedicastro.com/productividad-linux-ranger.html"&gt;Ranger&lt;/a&gt;, es un administrador de archivos en modo texto y
  revolucionario en su interfaz y manejo. Muy potente y personalizable. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://joedicastro.com/productividad-linux-ncdu.html"&gt;Ncdu&lt;/a&gt;, una herramienta con interfaz ncurses que nos permite conocer el
  espacio consumido en nuestro disco duro y navegar por los distintos
  directorios. La mejor herramienta del estilo que existe para la consola.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">joe di castro</dc:creator><pubDate>Thu, 07 Jun 2012 22:40:00 +0200</pubDate><guid>http://joedicastro.com/productividad-linux-aplicaciones.html</guid><category>linux</category><category>productividad</category><category>usabilidad</category></item><item><title>Productividad en el escritorio Linux: Awesome</title><link>http://joedicastro.com/productividad-en-el-escritorio-linux-awesome.html</link><description>&lt;p&gt;Como había comentando en el anterior articulo sobre &lt;a href="http://joedicastro.com/productividad-en-el-escritorio-linux-xmonad.html"&gt;Xmonad&lt;/a&gt;, tenía la
intención de probar un &lt;a href="http://joedicastro.com/productividad-en-el-escritorio-linux-tiling.html"&gt;Gestor de ventanas de mosaico&lt;/a&gt; más, antes de tomar
la decisión final de cual emplear a diario. Y si, &lt;em&gt;y solo si&lt;/em&gt;, resultaba ser una
mejor alternativa, abandonaría &lt;strong&gt;Xmonad&lt;/strong&gt;. Este &lt;strong&gt;tiling window manager&lt;/strong&gt; era
&lt;a href="http://awesome.naquadah.org/"&gt;Awesome&lt;/a&gt; y ha conseguido con creces que abandone a Xmonad.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Awesome&lt;/strong&gt; carece de algunas funcionalidades que me ofrecía Xmonad, pero después
de trabajar con él durante seis meses y conseguir tener una configuración a mi
medida, solamente hecho en falta una característica que comentare después. Además
Awesome me ofrece algunas características que no me ofrecía Xmonad y que valoro lo
suficiente como para realizar el cambio sin mirar atrás.&lt;/p&gt;
&lt;h2 id="awesome_vs_xmonad"&gt;Awesome vs Xmonad&lt;/h2&gt;
&lt;p&gt;En esta tabla podemos ver una comparativa rápida de algunas de las
características de ambos gestores de ventanas.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Característica&lt;/th&gt;
&lt;th&gt;Awesome&lt;/th&gt;
&lt;th&gt;Xmonad&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Lenguaje&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;C&lt;/td&gt;
&lt;td&gt;Haskell&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Extensible&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Lua&lt;/td&gt;
&lt;td&gt;Haskell&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Gestión ventanas&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Automático&lt;/td&gt;
&lt;td&gt;Automático&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Soporte ratón&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Muy bueno&lt;/td&gt;
&lt;td&gt;Básico&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Bandeja sistema (systray)&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Integrada&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Paneles&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Integrado&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Reinicio en caliente&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Si&lt;/td&gt;
&lt;td&gt;Si&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Librería&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;XCB&lt;/td&gt;
&lt;td&gt;Xlib&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Soporte varios monitores&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Muy bueno&lt;/td&gt;
&lt;td&gt;Bueno&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Transparencias&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Gestor externo&lt;/td&gt;
&lt;td&gt;Gestor externo&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Integración escritorios&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Buena&lt;/td&gt;
&lt;td&gt;Muy buena (Gnome, KDE)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Desarrollo&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Muy activo&lt;/td&gt;
&lt;td&gt;Muy activo&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Estabilidad&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Estable&lt;/td&gt;
&lt;td&gt;Estable&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Documentación&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Buena&lt;/td&gt;
&lt;td&gt;Buena&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id="ventajas"&gt;Ventajas&lt;/h3&gt;
&lt;p&gt;Una de las principales ventajas de Awesome sobre Xmonad es la velocidad de
respuesta que ofrece el entorno, que en Awesome es bastante superior a la de
Xmonad. Alguna que otra vez, al intentar realizar muchas operaciones
consecutivas entre ventanas y escritorios en Xmonad, se me ha quedado colgado y
he tenido que reiniciarlo (que se hace en caliente y en segundos, pero no deja
de ser algo molesto). En este sentido Awesome solo se me ha colgado un par de
veces.&lt;/p&gt;
&lt;p&gt;Otra de las grandes ventajas es que al configurarse en &lt;a href="https://es.wikipedia.org/wiki/Lua"&gt;Lua&lt;/a&gt; es
bastante más sencillo hacerse con él, ya que es un lenguaje relativamente
asequible y carece de la complejidad inicial de &lt;a href="https://es.wikipedia.org/wiki/Haskell"&gt;Haskell&lt;/a&gt; para aquellos
que no conocen la programación funcional. Esto aumenta las posibilidades de
personalizarlo para un usuario con conocimientos muy básicos de programación.&lt;/p&gt;
&lt;p&gt;La configuración por defecto de Awesome también es más completa y amigable que
la de Xmonad, partiendo de un esquema tradicional de ventanas flotantes y con
menús que nos permiten dar los primeros pasos y poder abandonar la sesión sin
llegar a conocer las combinaciones de teclado por defecto. Algo que agradecerán
aquellos que se hayan tenido que enfrentar a una configuración por defecto de
Xmonad por primera vez. Esto invita a conocer el sistema y no abandonarlo
"asustado" por su complejidad. En la imagen se puede ver el aspecto que presenta
una sesión de Awesome con la configuración por defecto.&lt;/p&gt;
&lt;p style="text-align:center;"&gt;&lt;img src="pictures/awesome_default.png" width="700"
height="525" alt="configuración por defecto de Awesome" /&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Para acceder al menú podemos bien hacer click sobre el icono de
Awesome en la parte superior izquierda o bien con el botón derecho en
cualquier parte de la pantalla. También se puede acceder a él con la
combinación de teclas &lt;strong&gt;&lt;code&gt;Win&lt;/code&gt;&lt;/strong&gt; + &lt;strong&gt;&lt;code&gt;w&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Finalmente, el que Awesome tenga integrados aspectos como los paneles, una
bandeja del sistema (systray), lanzador de aplicaciones y un soporte muy bueno del
ratón facilita el poder emplearlo en solitario, sin un sistema de escritorio
tradicional detrás. Y a través de librerías es fácil implementar un sistema de
notificaciones, un localizador de ventanas, temas, menús emergentes, ...&lt;/p&gt;
&lt;h3 id="desventajas"&gt;Desventajas&lt;/h3&gt;
&lt;p&gt;Quizás para mí la mayor desventaja frente a Xmonad y lo único que hecho
realmente en falta, es la imposibilidad, a diferencia de Xmonad, de poder
regular el tamaño vertical de las ventanas. Es particularmente útil en algunas
situaciones y en Xmonad está integrado de manera natural. Pero después de varios
meses he aprendido a vivir sin ello.&lt;/p&gt;
&lt;p&gt;La otra gran desventaja es que el desarrollo aún no ha alcanzado el estadio de
madurez de Xmonad, esta sujeto a demasiados cambios y no cuidan demasiado la
retrocompatibilidad. Las nuevas versiones frecuentemente obligan a realizar
cambios en la configuración para que todo vuelva a funcionar con normalidad.&lt;/p&gt;
&lt;p&gt;Por otro lado, la instalación en algunas distribuciones puede no ser tan
sencilla como la de Xmonad por la falta de soporte a la librería XCB o por
necesitar versiones especificas de cairo.&lt;/p&gt;
&lt;h3 id="diferentes_filosof+as"&gt;Diferentes filosofías&lt;/h3&gt;
&lt;p&gt;Siendo como son ambos, gestores de ventanas de mosaico, difieren particularmente
en la manera de entender principalmente dos conceptos:&lt;/p&gt;
&lt;h4 id="__m+ltiples_escritorios__"&gt;&lt;strong&gt;Múltiples escritorios&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;Aquí Xmonad sigue el concepto tradicional de múltiples escritorios en Linux,
soportando por defecto 9 por monitor y asignándoles un número del 1 al 0. Luego
una aplicación puede estar, por ejemplo, en el escritorio 4 del monitor 2 y
podemos movernos entre escritorios y monitores y mover a su vez las aplicaciones
entre ellos.&lt;/p&gt;
&lt;p&gt;En cambio, Awesome, aunque aparentemente sigue el mismo sistema, y para
cualquiera que no quiera profundizar en ello no habrá diferencia alguna, se
basa en un concepto diferente. En Awesome cada escritorio es en realidad una
&lt;strong&gt;etiqueta&lt;/strong&gt; y puede ser tanto un número como un texto. En principio también
son 9 por monitor, aunque esto puede ampliarse o reducirse en la configuración.
La diferencia principal es que una aplicación puede ser asignada a varias
etiquetas simultáneamente y puede por lo tanto ser mostrada en varios
&lt;em&gt;escritorios&lt;/em&gt;  a la vez. Esto permite asignar de forma muy sencilla etiquetas
destinadas a una tarea y predefinir ciertas aplicaciones para que sean mostradas
en una o más etiquetas. Por ejemplo podemos tener una etiqueta para
&lt;code&gt;redes sociales&lt;/code&gt; y mostrar allí un navegador, pero al mismo tiempo podemos tener
una etiqueta &lt;code&gt;desarrollo&lt;/code&gt; en la que también queremos que se muestre el navegador.
Por otro lado, también es posible mostrar varias etiquetas al mismo tiempo, lo
que nos permite trabajar en dos tareas distintas y bien definidas, cada una en su
etiqueta, y en un momento dado, visualizarlas juntas sin perder la asignación de
etiquetas original. En este sentido Awesome es mucho más flexible y potente que
Xmonad.&lt;/p&gt;
&lt;h4 id="__m+ltiples_monitores__"&gt;&lt;strong&gt;Múltiples monitores&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;En este caso Xmonad comparte el mismo escritorio en distintos monitores. Por lo
tanto si estamos en el escritorio 1 en el monitor 1 y nos movemos al escritorio
2, lo hará en todos los monitores a la vez, lo que también es el comportamiento
clásico. Con lo que podemos decir que aunque tenemos 9 escritorios por monitor,
se comporta como si tuviéramos 9 para todos los monitores.&lt;/p&gt;
&lt;p&gt;Awesome, al contrario, emplea 9 etiquetas por monitor independientes entre
si. Lo que significa que en este casi si tenemos 9 &lt;em&gt;escritorios&lt;/em&gt; reales por cada
monitor. Si nos encontramos en el monitor 1 y la etiqueta 1, al cambiar a la
etiqueta 2, el resto de monitores permanecerán inalterados en la etiqueta en la
que estuvieran previamente. En este sentido Awesome también sigue siendo bastante
más flexible y potente que Xmonad. Este comportamiento puede ser alterado mediante
la configuración. Hay quienes prefieren un método de trabajo y quienes
prefieren el otro, yo soy de los que prefieren el comportamiento de Awesome.&lt;/p&gt;
&lt;h2 id="awesome_con_gnome"&gt;Awesome con Gnome&lt;/h2&gt;
&lt;p&gt;Actualmente estoy empleando Awesome en solitario, si un escritorio detrás, lo que
me obliga a configurar por mi cuenta todos los servicios que estos proporcionan,
pero me compensa con la ligereza que me reporta el no emplear un pesado
escritorio por debajo. Sin embargo, los primeros meses lo empleé conjuntamente
con Gnome en Ubuntu, utilizando solo los componentes básicos del mismo. La forma
de configurar una sesión de Awesome con Gnome en Ubuntu (11.10 y 12.04) y en
&lt;a href="http://www.archlinux.org"&gt;Arch Linux&lt;/a&gt;, la distribución que estoy empleando ahora, es a través
de los siguientes ficheros:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;/usr/share/applications/awesome.desktop&lt;/code&gt;&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="k"&gt;[Desktop Entry]&lt;/span&gt;
&lt;span class="na"&gt;Version&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;1.0&lt;/span&gt;
&lt;span class="na"&gt;Type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;Application&lt;/span&gt;
&lt;span class="na"&gt;Name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;Awesome&lt;/span&gt;
&lt;span class="na"&gt;Comment&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;The awesome launcher!&lt;/span&gt;
&lt;span class="na"&gt;TryExec&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;awesome&lt;/span&gt;
&lt;span class="na"&gt;Exec&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;awesome&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;/usr/share/gnome-session/sessions/awesome.session&lt;/code&gt;&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="k"&gt;[GNOME Session]&lt;/span&gt;
&lt;span class="na"&gt;Name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;Awesome session&lt;/span&gt;
&lt;span class="na"&gt;RequiredComponents&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;gnome-settings-daemon;&lt;/span&gt;
&lt;span class="na"&gt;RequiredProviders&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;windowmanager;&lt;/span&gt;
&lt;span class="na"&gt;DefaultProvider-windowmanager&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;awesome&lt;/span&gt;
&lt;span class="na"&gt;DesktopName&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;GNOME&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;/usr/share/xsessions/awesome-gnome-session.desktop&lt;/code&gt;&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="k"&gt;[Desktop Entry]&lt;/span&gt;
&lt;span class="na"&gt;Name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;Awesome GNOME&lt;/span&gt;
&lt;span class="na"&gt;Comment&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;Dynamic window manager&lt;/span&gt;
&lt;span class="na"&gt;TryExec&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;/usr/bin/gnome-session&lt;/span&gt;
&lt;span class="na"&gt;Exec&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;gnome-session --session=awesome&lt;/span&gt;
&lt;span class="na"&gt;Type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;XSession&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Evidentemente para esto es necesario instalar los paquetes necesarios para
ejecutar Awesome que en el caso de Ubuntu son &lt;code&gt;awesome&lt;/code&gt; y &lt;code&gt;awesome-extra&lt;/code&gt;:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="gp"&gt;$&lt;/span&gt; sudo apt-get install awesome awesome-extra
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;En Arch, bastaría con instalar el paquete &lt;code&gt;awesome&lt;/code&gt;:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="gp"&gt;$&lt;/span&gt; sudo pacman -S awesome
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="mi_configuraci+n"&gt;Mi configuración&lt;/h2&gt;
&lt;p&gt;A diferencia de Xmonad, mi configuración de Awesome no está contenida en un solo
fichero, ya que el tema y los diversos plugins están alojados dentro de sus
propios directorios. Además el fichero de configuración &lt;code&gt;rc.lua&lt;/code&gt; es demasiado
extenso (cerca de 1200 lineas) para volcarlo aquí. Así que me limitare a
mencionar los aspectos más destacados, la configuración completa queda
disponible a través de mi repositorio en &lt;a href="http://github.com/joedicastro/dotfiles"&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Destacar que al principio del fichero incluyo una &lt;em&gt;Cheat Sheet&lt;/em&gt; ("chuleta") con
todas las combinaciones de teclado y ratón que tengo habilitadas en mi
configuración.&lt;/p&gt;
&lt;h2 id="panel_y_widgets"&gt;Panel y Widgets&lt;/h2&gt;
&lt;p&gt;Awesome permite la creación de varios paneles, generalmente se suelen crear en
la parte superior y/o inferior de la pantalla. A mi me gusta disponer del máximo
espacio posible para las aplicaciones, así que solo he creado uno superior que
además puedo ocultar a conveniencia. De hecho, para determinadas tareas, lo
mantengo oculto la mayor parte del tiempo y solo lo muestro cuando me interesa
consultar la información que allí se muestra.&lt;/p&gt;
&lt;p&gt;Aquí se puede ver la apariencia del panel superior y una ampliación del mismo:&lt;/p&gt;
&lt;p style="text-align:center;"&gt;&lt;img src="pictures/wibox_full.png" width="700"
height="8" alt="wibox" /&gt;&lt;/p&gt;

&lt;p style="text-align:center;"&gt;&lt;img src="pictures/wibox.png" width="600"
height="63" alt="Zoom sobre la barra de estado" /&gt;&lt;/p&gt;

&lt;p&gt;En el que se pueden apreciar (de izquierda a derecha y de arriba a abajo) los
siguientes widgets:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Icono de Awesome. Proporciona acceso al menú de Awesome&lt;/li&gt;
&lt;li&gt;Etiquetas. Aquí se puede ver que hay dos activas y que nos encontramos en la
  segunda, &lt;code&gt;β&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Icono de esquema. Vemos que está seleccionado el esquema &lt;code&gt;tile&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Icono y titulo de la ventana activa. En este caso tenemos una ventana de &lt;em&gt;Gvim&lt;/em&gt;
  y además el icono del final nos indica que es una ventana flotante&lt;/li&gt;
&lt;li&gt;Pomodoro. Es un widget que me permite seguir el método &lt;a href="http://www.pomodorotechnique.com/"&gt;Pomodoro&lt;/a&gt; y que
  indica que quedan 4 minutos y 14 segundos para tomarme un pequeño descanso.&lt;/li&gt;
&lt;li&gt;MPD. Indica el estado del servidor de música &lt;em&gt;mpd&lt;/em&gt;, y en este caso nos indica el
  autor y el titulo de la canción que se está reproduciendo&lt;/li&gt;
&lt;li&gt;Velocidad de los ventiladores del sistema&lt;/li&gt;
&lt;li&gt;Temperaturas de CPU y GPU&lt;/li&gt;
&lt;li&gt;Uso de las CPUs del microprocesador&lt;/li&gt;
&lt;li&gt;Porcentaje y cantidad de memoria RAM en uso&lt;/li&gt;
&lt;li&gt;Velocidad (en Kbs) de bajada y subida de la red.&lt;/li&gt;
&lt;li&gt;Porcentaje de ocupación en disco de &lt;code&gt;/&lt;/code&gt; y &lt;code&gt;/home&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Estado de la batería y tiempo estimado de carga/descarga&lt;/li&gt;
&lt;li&gt;Uptime. Indica el tiempo que lleva el equipo encendido desde el último
  reinicio&lt;/li&gt;
&lt;li&gt;Versión del Kernel Linux en ejecución&lt;/li&gt;
&lt;li&gt;Volumen del sonido del sistema&lt;/li&gt;
&lt;li&gt;Fecha y hora&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Muchos prefieren añadir iconos o encabezados a todos los widgets para facilitar
su identificación, pero yo ya conozco para que es cada uno y prefiero un entorno
minimalista que me distraiga lo menos posible. Muchos de estos widgets ejecutan
una acción al ser pulsados con un botón del ratón o al pasar por encima de
ellos. Por ejemplo al pasar el ratón por encima de la fecha y hora se muestra un
calendario y al pulsar con el botón izquierdo sobre el uso de las CPUs, se lanza
una ventana con el programa &lt;code&gt;htop&lt;/code&gt;&lt;/p&gt;
&lt;h2 id="localizar_aplicaciones"&gt;Localizar aplicaciones&lt;/h2&gt;
&lt;p&gt;Una de las funcionalidades geniales que tenía implementada en Xmonad me permitía
conocer todas las ventanas que estaban abiertas y elegir la deseada con una
rápida combinación de teclas. Awesome no tiene esto implementado, pero gracias a
una librería externa, &lt;strong&gt;&lt;a href="https://github.com/bioe007/awesome-revelation"&gt;Revelation&lt;/a&gt;&lt;/strong&gt;, podemos emplear un método similar al
famoso Exposé del Mac OS y también presente en Compiz. Lo que hace es mostrarnos
en la etiqueta que estemos actualmente todas las ventanas abiertas en forma de
mosaico y podemos elegir una de ellas para saltar automáticamente a ella (y la
etiqueta en la que se encuentre). Aquí podemos ver un screencast de su
funcionamiento:&lt;/p&gt;
&lt;p style="text-align:center;"&gt;&lt;img src="pictures/revelation.gif" width="640"
height="400" alt="Revelation en funcionamiento" /&gt;&lt;/p&gt;

&lt;p&gt;Es también un método muy rápido y muy visual, al final he acabado prefiriendo
este método al que empleaba en Xmonad, ya que en este último, el titulo de las
ventanas podía ser muy ambiguo y no ser fácil dar con la ventana adecuada.&lt;/p&gt;
&lt;h2 id="gesti+n_din+mica_de_etiquetas"&gt;Gestión dinámica de etiquetas&lt;/h2&gt;
&lt;p&gt;Aunque por defecto Awesome define 10 etiquetas por monitor, podemos definir a
nuestro antojo el número de ellas que queramos en el fichero de configuración.
Podemos optar por un número clásico en los escritorios Linux, cuatro, o
podemos crear una para cada tarea concreta más una libre. Por defecto tengo
definidas diez, empleando para identificarlas los números en griego:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c1"&gt;-- definición de las etiquetas en el fichero de configuración rc.lua&lt;/span&gt;
&lt;span class="n"&gt;tags&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;awful&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tag&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;α&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;β&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;γ&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;δ&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;ε&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;ς&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;ζ&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;η&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;θ&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;layouts&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Sin embargo, en mi configuración empleo una librería externa, &lt;a href="http://git.glacicle.org/eminent"&gt;Eminent&lt;/a&gt;,
que gestiona estas etiquetas de forma dinámica, creándolas y destruyéndolas
según sea necesario. Así de entrada solo tenemos una etiqueta, &lt;code&gt;α&lt;/code&gt; y solo se
creara una segunda etiqueta, &lt;code&gt;β&lt;/code&gt; si nos desplazamos a ella. Del mismo modo,
cuando eliminamos la última ventana de una etiqueta y la abandonamos, se
destruye. La ventaja de esto es que por un lado nos facilita localizar donde
estamos más fácilmente y por otro, que en caso de ser necesario, si necesitamos
más etiquetas (de las creadas por defecto), las creara de forma automática. De
este modo cuando llegamos a la etiqueta &lt;code&gt;θ&lt;/code&gt;, si necesitamos otra, creara la &lt;code&gt;10&lt;/code&gt;
y así en lo sucesivo.&lt;/p&gt;
&lt;h2 id="lanzar_aplicaciones"&gt;Lanzar aplicaciones&lt;/h2&gt;
&lt;p&gt;Existen dos métodos para realizar esta tarea:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Empleando un prompt que emerge en el panel superior y nos permite escribir el
  comando que queremos ejecutar y que posee autocompletado. La combinación de
  teclas por defecto que activa esto es &lt;strong&gt;&lt;code&gt;Win&lt;/code&gt;&lt;/strong&gt; + &lt;strong&gt;&lt;code&gt;r&lt;/code&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style="text-align:center;"&gt;&lt;img src="pictures/awesome_prompt.png" width="585"
height="30" alt="prompt en Awesome" /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Empleando &lt;a href="http://awesome.naquadah.org/wiki/Menubar"&gt;menubar&lt;/a&gt;. Menubar es una librería externa, que será incluida
  en la próxima versión de Awesome por defecto, que al igual que muchos
  otros lanzadores de aplicaciones (&lt;em&gt;Gnome Do&lt;/em&gt;, &lt;em&gt;Kupfer&lt;/em&gt;, &lt;em&gt;Synapse&lt;/em&gt;, etc) nos va
  mostrando las aplicaciones disponibles en función de lo que vayamos tecleando.
  Se lanza con la combinación de teclas &lt;strong&gt;&lt;code&gt;Win&lt;/code&gt;&lt;/strong&gt; + &lt;strong&gt;&lt;code&gt;p&lt;/code&gt;&lt;/strong&gt; y en mi caso, esta
  aparece inmediatamente debajo del panel superior.
  Aquí se puede ver la menubar en funcionamiento (la tecla &lt;strong&gt;&lt;code&gt;Win&lt;/code&gt;&lt;/strong&gt; también es
  llamada &lt;strong&gt;&lt;code&gt;Super&lt;/code&gt;&lt;/strong&gt; ):&lt;/li&gt;
&lt;/ul&gt;
&lt;p style="text-align:center;"&gt;&lt;img src="pictures/menubar.gif" width="640"
height="400" alt="Lanzar aplicaciones con menubar en Awesome wm" /&gt;&lt;/p&gt;

&lt;p&gt;Yo además empleo un tercer método que heredo de Xmonad, y es emplear
&lt;a href="http://tools.suckless.org/dmenu/"&gt;dmenu&lt;/a&gt; para lanzar aplicaciones. &lt;code&gt;dmenu&lt;/code&gt; es muy parecido al prompt de
Awesome, pero busca para el autocompletado en todo el nombre del comando y no
solo al principio. Además muestra todas las coincidencias disponibles y que se
pueden seleccionar con las teclas de dirección.&lt;/p&gt;
&lt;p style="text-align:center;"&gt;&lt;img src="pictures/dmenu.gif" width="640"
height="400" alt="dmenu en acción" /&gt;&lt;/p&gt;

&lt;h3 id="grabar_v+deos_y_screencasts_del_escritorio"&gt;Grabar vídeos y screencasts del escritorio&lt;/h3&gt;
&lt;p&gt;Adicionalmente, tengo definidas ciertas combinaciones de teclas para lanzar
determinadas aplicaciones o procesos con las teclas de función. Dentro de estos
atajos de teclado cabe destacar cinco que en lugar lanzar una aplicación,
comienzan o terminan un determinado proceso. Estas combinaciones, que van de
&lt;strong&gt;&lt;code&gt;F8&lt;/code&gt;&lt;/strong&gt; a &lt;strong&gt;&lt;code&gt;F12&lt;/code&gt;&lt;/strong&gt;, las utilizo para grabar vídeos y screencasts con gifs
animados y son las que he empleado para ilustrar este articulo.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c1"&gt;-- Win  +  F8                       Start gif screencast recording LowRes&lt;/span&gt;
&lt;span class="c1"&gt;-- Win  +  F9                       Start gif screencast recording HighRes&lt;/span&gt;
&lt;span class="c1"&gt;-- Win  +  F10                      Stop gif screencast recording&lt;/span&gt;
&lt;span class="c1"&gt;-- Win  +  F11                      Start mkv screencast recording&lt;/span&gt;
&lt;span class="c1"&gt;-- Win  +  F12                      Stop mkv screencast recording&lt;/span&gt;

&lt;span class="n"&gt;awful&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="n"&gt;modkey&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;F8&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;awful&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;util&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;spawn_with_shell&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;rm &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;..&lt;/span&gt; &lt;span class="n"&gt;home_dir&lt;/span&gt; &lt;span class="o"&gt;..&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;/screencast.gif&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;awful&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;util&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;spawn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;ffmpeg -f x11grab -s &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;..&lt;/span&gt; &lt;span class="n"&gt;scr_res&lt;/span&gt; &lt;span class="o"&gt;..&lt;/span&gt;
                        &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt; -r 2 -i :0.0 -b:v 500k -pix_fmt rgb24 -y&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;..&lt;/span&gt;
                        &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt; -loop 0 -s 640x400 &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;..&lt;/span&gt; &lt;span class="n"&gt;home_dir&lt;/span&gt; &lt;span class="o"&gt;..&lt;/span&gt;
                        &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;/animated.gif&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;

&lt;span class="n"&gt;awful&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="n"&gt;modkey&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;F9&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;awful&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;util&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;spawn_with_shell&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;rm &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;..&lt;/span&gt; &lt;span class="n"&gt;home_dir&lt;/span&gt; &lt;span class="o"&gt;..&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;/screencast.gif&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;awful&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;util&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;spawn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;ffmpeg -f x11grab -s &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;..&lt;/span&gt; &lt;span class="n"&gt;scr_res&lt;/span&gt; &lt;span class="o"&gt;..&lt;/span&gt;
                        &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt; -r 2 -i :0.0 -b:v 500k -pix_fmt rgb24 -y&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;..&lt;/span&gt;
                        &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt; -loop 0 -s 1440x900 &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;..&lt;/span&gt; &lt;span class="n"&gt;home_dir&lt;/span&gt; &lt;span class="o"&gt;..&lt;/span&gt;
                        &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;/animated.gif&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;

&lt;span class="n"&gt;awful&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="n"&gt;modkey&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;F10&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;awful&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;util&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;spawn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;killall ffmpeg&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;awful&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;util&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;spawn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;convert ephemeral:&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;..&lt;/span&gt; &lt;span class="n"&gt;home_dir&lt;/span&gt; &lt;span class="o"&gt;..&lt;/span&gt;
                         &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;/animated.gif -fuzz 7% -layers Optimize &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;..&lt;/span&gt;
                         &lt;span class="n"&gt;home_dir&lt;/span&gt; &lt;span class="o"&gt;..&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;/screencast.gif&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;

&lt;span class="n"&gt;awful&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="n"&gt;modkey&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;F11&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;awful&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;util&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;spawn_with_shell&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;rm &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;..&lt;/span&gt; &lt;span class="n"&gt;home_dir&lt;/span&gt; &lt;span class="o"&gt;..&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;/screencast.mkv&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;awful&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;util&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;spawn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;ffmpeg -f x11grab -s &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;..&lt;/span&gt; &lt;span class="n"&gt;scr_res&lt;/span&gt; &lt;span class="o"&gt;..&lt;/span&gt;
                        &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt; -r 25 -i :0.0 -sameq &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;..&lt;/span&gt; &lt;span class="n"&gt;home_dir&lt;/span&gt; &lt;span class="o"&gt;..&lt;/span&gt;
                        &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;/screencast.mkv&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;

&lt;span class="n"&gt;awful&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="n"&gt;modkey&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;F12&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;awful&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;util&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;spawn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;killall ffmpeg&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="gesti+n_tiempo_con_pomodoro"&gt;Gestión tiempo con pomodoro&lt;/h2&gt;
&lt;p&gt;La &lt;a href="https://es.wikipedia.org/wiki/T%C3%A9cnica_Pomodoro"&gt;técnica Pomodoro&lt;/a&gt; puede ser muy provechosa en ciertas tareas si se
emplea con sentido común y se sigue más o menos a rajatabla. Yo la empleo muy a
menudo cuando tengo una tarea concreta en la que quiero centrarme sin
distracciones para sacarla adelante y no caer en el error de procrastinar
demasiado. Es una combinación ideal entre concentración puntual y alternar
distracciones, que impiden a uno "quemarse" por no saber echar el freno a
tiempo. Es una técnica muy útil a la hora de programar o de crear un articulo
como este, pero que es difícilmente aplicable en tareas que requieren cierta
multitarea como son las de administración de sistemas.&lt;/p&gt;
&lt;p&gt;Existen múltiples aplicaciones, applets, indicadores, etc para aplicar esta
técnica, que se basaba originalmente en un simple reloj de cocina. Pero alguien,
en su momento pensó, que no era mala idea crear un widget para Awesome que nos
permitiera medir los tiempos para aplicarla y creo una librería externa para
ello. Yo empleo esta &lt;a href="https://github.com/nikolavp/awesome-pomodoro"&gt;librería&lt;/a&gt; ligeramente modificada para controlar
el tiempo transcurrido.&lt;/p&gt;
&lt;p&gt;El funcionamiento es muy básico, pulsamos sobre el icono y se activa la cuenta
atrás de 25 minutos. Al acabar, una alarma sonora y una notificación emergente,
nos avisan de que se ha terminado el tiempo de trabajo y nos merecemos un
descanso. Volvemos a pulsar sobre el widget y comienza la cuenta atrás de cinco
minutos y se repite el proceso. Si pulsamos con el botón derecho se reinicia el
widget.&lt;/p&gt;
&lt;p style="text-align:center;"&gt;&lt;img src="pictures/pomodoro.png" width="613"
height="105" alt="notificaciones de pomodoro" /&gt;&lt;/p&gt;

&lt;h2 id="debug_con_xephyr"&gt;Debug con Xephyr&lt;/h2&gt;
&lt;p&gt;Esta es una de las posibilidades que nos permite Awesome, que más nos ayudará a
la hora de "trastear" con él, sin temor a "romper" nada. Podemos depurar los
errores y realizar pruebas con Awesome con una configuración distinta a la
nuestra y en una sesión X distinta a la actual. Esto lo conseguimos ejecutando
Awesome dentro de un servidor X, &lt;a href="http://www.freedesktop.org/wiki/Software/Xephyr"&gt;Xephyr&lt;/a&gt;, que aparecerá dentro de
nuestra sesión como una ventana más.&lt;/p&gt;
&lt;p&gt;Yo he integrado esta posibilidad dentro del menú de Awesome para que sea mucho
más sencillo e inmediato el poder probar cambios en un entorno de pruebas.&lt;/p&gt;
&lt;p style="text-align:center;"&gt;&lt;img src="pictures/awesome_menu.png" width="603"
height="275" alt="Mi menu de Awesome" /&gt;&lt;/p&gt;

&lt;p&gt;En este vídeo se puede ver el funcionamiento básico de este sistema. Normalmente
inicio el entorno de pruebas a pantalla completa, pero que se pueda apreciar
mejor la diferencia, he grabado la mayoría del vídeo con una sesión de Xephyr a
menor resolución. Lo que se puede ver es como primero inicio una sesión de
Awesome dentro de Xephyr con la configuración por defecto. Después la cierro y
compruebo la sintaxis Lua de la configuración de test. La notificación me alerta
de que el fichero no existe, luego procedo a crearlo (es una copia de la
configuración real actual) y vuelvo a comprobar la sintaxis. Una vez que veo que
esta es correcta, lanzo Awesome con la configuración de test. Cierro la sesión y
procedo a realizar cambios en la configuración de pruebas. Ahora lanzo de nuevo
Awesome con esta configuración y compruebo que efectivamente se han realizado
los cambios. Dentro de esta sesión vuelvo a editar la configuración de test para
deshacer los cambios y después reinicio este Awesome de pruebas. Se puede ver
como efectivamente todo vuelve a el estado anterior. Cierro la sesión y
compruebo el log de la sesión para ver los mensajes de error. Finalmente abro
varias sesiones de Awesome a la vez y una a pantalla completa.&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;iframe src="http://player.vimeo.com/video/43562306" width="700" height="438"&gt;
&lt;/iframe&gt;
&lt;p&gt;Muestra de las posibilidades que ofrecen Xephyr y el script
&lt;strong&gt;awdt.py&lt;/strong&gt; para poder depurar la configuración de Awesome.
Recomiendo ver en alta resolución y a pantalla completa.&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;Para realizar estas acciones programé un script en Python, &lt;code&gt;awdt.py&lt;/code&gt;, que incluyo
al final del articulo.&lt;/p&gt;
&lt;p&gt;Una de las ventajas de Awesome con respecto a Xmonad, es que no necesitamos
recompilar cada vez que realizamos un cambio en la configuración, basta con
editar el fichero, salvar y reiniciarlo. Reiniciar Awesome es algo que lleva
menos de un segundo.&lt;/p&gt;
&lt;h2 id="reinicio_apagado_y_suspensi+n"&gt;Reinicio, apagado y suspensión&lt;/h2&gt;
&lt;p&gt;Dado que no empleo ningún escritorio, arrancando directamente la sesión en
Awesome, debo gestionar directamente cierto tipo de situaciones que vienen
resueltas de manera predefinida en estos. Uno de estos casos es la gestión de
energía del equipo, esto es: apagarlo, reiniciarlo, suspenderlo e hibernarlo.
Dado que nunca lo hiberno, he implementado únicamente las tres primeras
acciones. Lo que hago es emplear directamente los comandos de consola, que
ejecuto a través de un dialogo gráfico que me pide la contraseña para &lt;code&gt;sudo&lt;/code&gt; con
&lt;code&gt;gksudo&lt;/code&gt; (podría haber empleado &lt;em&gt;Zenity&lt;/em&gt;, &lt;em&gt;Xdialog&lt;/em&gt; o cualquier otro similar)
que es activado a través de una combinación de teclas. Por ejemplo, para
suspender el equipo lo activo a través de la combinación &lt;strong&gt;&lt;code&gt;Win&lt;/code&gt;&lt;/strong&gt; + &lt;strong&gt;&lt;code&gt;s&lt;/code&gt;&lt;/strong&gt; :&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;awful&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="n"&gt;modkey&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;s&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt;
            &lt;span class="n"&gt;awful&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;util&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;spawn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;gksudo pm-suspend -m &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;..&lt;/span&gt;
                             &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Se va a suspender el equipo, ¿estás seguro?&amp;#39;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;end&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;con el siguiente resultado:&lt;/p&gt;
&lt;p style="text-align:center;"&gt;&lt;img src="pictures/suspend.png" width="381"
height="191" alt="Dialogo para suspensión" /&gt;&lt;/p&gt;

&lt;p&gt;Sé que la mayoría no está acostumbrado a tener que introducir la contraseña para
realizar cualquiera de estas acciones y posiblemente detestarían hacerlo, pero
yo lo prefiero así.&lt;/p&gt;
&lt;h2 id="bloqueo_de_la_pantalla"&gt;Bloqueo de la pantalla&lt;/h2&gt;
&lt;p&gt;Empleo un método similar para bloquear la pantalla, ya que no empleo un
salvapantallas (simplemente apago la pantalla pasado un cierto tiempo) empleo el
programa &lt;a href="http://joelburget.com/slimlock/"&gt;&lt;code&gt;slimlock&lt;/code&gt;&lt;/a&gt; para realizar esta tarea y lo activo de forma manual
con otra combinación de teclas. El resultado es una pantalla como esta:&lt;/p&gt;
&lt;p style="text-align:center;"&gt;&lt;img src="pictures/slimlock.png" width="642"
height="401" alt="slimlock" /&gt;&lt;/p&gt;

&lt;h2 id="documentaci+n_y_enlaces_de_inter+s"&gt;Documentación y enlaces de interés.&lt;/h2&gt;
&lt;p&gt;La documentación del código fuente y de la API de Awesome son bastante buenas,
con lo que si tienes los conocimientos suficientes no te será muy dificil
hacerte con él. Si necesitas algo más general, tanto el propio Wiki de Awesome
como los recursos disponibles gracias a su comunidad (lista de correo e IRC) son
bastante útiles para ayudarte a conseguir la configuración que más se ajuste a
tus necesidades. Es una comunidad muy dinámica y bastante colaboradora. También
en el Wiki de Arch Linux hay información interesante sobre Awesome.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://awesome.naquadah.org/"&gt;Pagina principal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://awesome.naquadah.org/wiki/Main_Page"&gt;Wiki&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://awesome.naquadah.org/wiki/Screenshots"&gt;Pantallazos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://awesome.naquadah.org/wiki/User_Configuration_Files"&gt;Ficheros de configuración&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://awesome.naquadah.org/doc/api/"&gt;API Docs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wiki.archlinux.org/index.php/Awesome"&gt;Arch Linux Wiki&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.lua.org/pil/"&gt;Programming in Lua&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="awdtpy"&gt;awdt.py&lt;/h2&gt;
&lt;p&gt;Este es el contenido del script &lt;code&gt;awdt.py&lt;/code&gt; que empleo para depurar la
configuración de Awesome en un entorno de pruebas. Se encuentra dentro del mismo
repositorio que el resto de la configuración.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/usr/bin/env python&lt;/span&gt;
&lt;span class="c"&gt;# encoding: utf-8&lt;/span&gt;

&lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="sd"&gt;    awdt.py: a script to debug awesome wm configs in nested Xephyr sessions&lt;/span&gt;

&lt;span class="sd"&gt;    This script is a tool intended to help to debug Awesome wm configurations&lt;/span&gt;
&lt;span class="sd"&gt;    in a safe manner. To this purpose uses the Xephyr X server to nest a X&lt;/span&gt;
&lt;span class="sd"&gt;    session inside the current Awesome X session.&lt;/span&gt;

&lt;span class="sd"&gt;    The original idea come from the mikar&amp;#39;s bash awmtt script (Thanks mikar):&lt;/span&gt;

&lt;span class="sd"&gt;    https://github.com/mikar/awmtt&lt;/span&gt;

&lt;span class="sd"&gt;    Needs logger.py and check_execs.py from my Python Recipes repository at&lt;/span&gt;

&lt;span class="sd"&gt;    https://github.com/joedicastro/python-recipes&lt;/span&gt;
&lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;

&lt;span class="c"&gt;#==============================================================================&lt;/span&gt;
&lt;span class="c"&gt;#    Copyright 2012 joe di castro &amp;lt;joe@joedicastro.com&amp;gt;&lt;/span&gt;
&lt;span class="c"&gt;#&lt;/span&gt;
&lt;span class="c"&gt;#    This program is free software: you can redistribute it and/or modify&lt;/span&gt;
&lt;span class="c"&gt;#    it under the terms of the GNU General Public License as published by&lt;/span&gt;
&lt;span class="c"&gt;#    the Free Software Foundation, either version 3 of the License, or&lt;/span&gt;
&lt;span class="c"&gt;#    (at your option) any later version.&lt;/span&gt;
&lt;span class="c"&gt;#&lt;/span&gt;
&lt;span class="c"&gt;#    This program is distributed in the hope that it will be useful,&lt;/span&gt;
&lt;span class="c"&gt;#    but WITHOUT ANY WARRANTY; without even the implied warranty of&lt;/span&gt;
&lt;span class="c"&gt;#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&lt;/span&gt;
&lt;span class="c"&gt;#    GNU General Public License for more details.&lt;/span&gt;
&lt;span class="c"&gt;#&lt;/span&gt;
&lt;span class="c"&gt;#    You should have received a copy of the GNU General Public License&lt;/span&gt;
&lt;span class="c"&gt;#    along with this program.  If not, see &amp;lt;http://www.gnu.org/licenses/&amp;gt;.&lt;/span&gt;
&lt;span class="c"&gt;#==============================================================================&lt;/span&gt;

&lt;span class="n"&gt;__author__&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;joe di castro &amp;lt;joe@joedicastro.com&amp;gt;&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;__license__&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;GNU General Public License version 3&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;__date__&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;05/06/2012&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;__version__&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;0.5&amp;quot;&lt;/span&gt;

&lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
    &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;
    &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;argparse&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;ArgumentParser&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;RawDescriptionHelpFormatter&lt;/span&gt;
    &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;re&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;findall&lt;/span&gt;
    &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;shutil&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;copy&lt;/span&gt;
    &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;subprocess&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Popen&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;PIPE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;STDOUT&lt;/span&gt;
    &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;tempfile&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;gettempdir&lt;/span&gt;
    &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;time&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;sleep&lt;/span&gt;
    &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;logger&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Logger&lt;/span&gt;
    &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;check_execs&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;check_execs&lt;/span&gt;
&lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="ne"&gt;ImportError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="c"&gt;# Checks the installation of the necessary python modules&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;linesep&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;An error found importing one module:&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exc_info&lt;/span&gt;&lt;span class="p"&gt;()[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]),&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;You need to install it&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Stopping...&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;
    &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;arguments&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Defines the command line arguments for the script.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;main_desc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&amp;quot;&amp;quot;Debug awesome wm configurations in Xephyr sessions.&lt;/span&gt;

&lt;span class="s"&gt;    Use `new` to create a new test config file cloned from your rc.lua&lt;/span&gt;
&lt;span class="s"&gt;    Use `check` to test the Lua syntax on this file&lt;/span&gt;
&lt;span class="s"&gt;    Use `start` to start a new awesome debug session&lt;/span&gt;
&lt;span class="s"&gt;    Use `restart` to restart all awesome debug sessions&lt;/span&gt;
&lt;span class="s"&gt;    Use `stop` to stop all awesome debug sessions&lt;/span&gt;
&lt;span class="s"&gt;                   &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;

    &lt;span class="n"&gt;parser&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ArgumentParser&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;description&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;main_desc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                            &lt;span class="n"&gt;formatter_class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;RawDescriptionHelpFormatter&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;parser&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_argument&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;action&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;choices&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;new&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;check&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;start&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;restart&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                        &lt;span class="s"&gt;&amp;quot;stop&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;help&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;the action to perform&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;parser&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_argument&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;-t&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;dest&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;test&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;action&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;store_true&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;default&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                        &lt;span class="n"&gt;help&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;use created test configuration file&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;parser&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_argument&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;-s&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;dest&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;screen&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;help&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;the screen resolution&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;parser&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_argument&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;-d&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;dest&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;display&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;help&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;the DISPLAY to use&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;parser&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_argument&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;-v&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;--version&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;action&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;version&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                        &lt;span class="n"&gt;version&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;%(prog)s&lt;/span&gt;&lt;span class="s"&gt; {0}&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;__version__&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                        &lt;span class="n"&gt;help&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;show program&amp;#39;s version number and exit&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;parser&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;The script core.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="c"&gt;# the files needed&lt;/span&gt;
    &lt;span class="n"&gt;cfg_dir&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;expanduser&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;~/.config/awesome&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;rc_real&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cfg_dir&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;rc.lua&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;rc_test&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cfg_dir&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;rc_test.lua&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;rc_original&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cfg_dir&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;rc_original.lua&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;xpids_tmp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;gettempdir&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;xpids&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;apids_tmp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;gettempdir&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;apids&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;log_file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cfg_dir&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;awdt.log&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;args&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;arguments&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parse_args&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="c"&gt;# get the current screen resolution&lt;/span&gt;
    &lt;span class="n"&gt;xdpyinfo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Popen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;xdpyinfo&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;stdout&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;PIPE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stdout&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;currres&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;findall&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;dimensions:\s*(\d+x\d+)\spixels&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;xdpyinfo&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

    &lt;span class="c"&gt;# set defaults&lt;/span&gt;
    &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;screen&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;screen&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;screen&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="n"&gt;currres&lt;/span&gt;
    &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;test&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;rc_test&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;test&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="n"&gt;rc_original&lt;/span&gt;
    &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;display&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;display&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;display&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;action&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;new&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;copy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rc_real&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;rc_test&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;action&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;check&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;check&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Popen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;awesome -c {0} -k&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rc_test&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;stdout&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;PIPE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                      &lt;span class="n"&gt;stderr&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;STDOUT&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;check_out&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;check&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stdout&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;readlines&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;Popen&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;notify-send&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Lua sintax chek:&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;linesep&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;check_out&lt;/span&gt;&lt;span class="p"&gt;)])&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;action&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;start&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="c"&gt;# clean log in each debug session&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exists&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;apids_tmp&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exists&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;log_file&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
                &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;log_file&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="n"&gt;log&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Logger&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;log_file&lt;/span&gt;
        &lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;header&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;https://github.com/joedicastro/dotfiles&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                   &lt;span class="s"&gt;&amp;quot;This is a log from an Awesome wm&amp;#39;s debug session&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Start time&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="n"&gt;x_cmd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Xephyr -ac -br -noreset -screen {0} :{1}&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;screen&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                                                  &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;display&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;aw_cmd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;awesome -c {0}&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;test&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="n"&gt;xserver&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Popen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x_cmd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;stdout&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;PIPE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;stderr&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;STDOUT&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;putenv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;DISPLAY&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;:{0}.0&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;display&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="n"&gt;awesome&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Popen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;aw_cmd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;stdout&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;PIPE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;stderr&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;STDOUT&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="c"&gt;# save the process PIDs for kill them properly later. This way, no&lt;/span&gt;
        &lt;span class="c"&gt;# matter how many awesome sessions do you start, all of them will be&lt;/span&gt;
        &lt;span class="c"&gt;# reported to the log file. Also, awesome PIDs are used to restart each&lt;/span&gt;
        &lt;span class="c"&gt;# one when is required&lt;/span&gt;
        &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;xpids_tmp&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;a+&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;xpids&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;xpids&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;xserver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pid&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;linesep&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;apids_tmp&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;a+&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;apids&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;apids&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;awesome&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pid&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;linesep&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Parameters&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Screen resolution: {0}&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;screen&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                                &lt;span class="s"&gt;&amp;quot;Display: {0}&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;display&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                                &lt;span class="s"&gt;&amp;quot;Configuration file: {0}&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;test&lt;/span&gt;&lt;span class="p"&gt;)])&lt;/span&gt;
        &lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Xephyr output&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;xserver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stdout&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;readlines&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
        &lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Awesome output&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;awesome&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stdout&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;readlines&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
        &lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;End time&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;free&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;linesep&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;action&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;restart&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;apids_tmp&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;r&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;apids&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;pid&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;apids&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;readlines&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
                &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;kill&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pid&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;action&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;stop&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;xpids_tmp&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;r&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;xpids&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;pid&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;xpids&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;readlines&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
                &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;kill&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pid&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;xpids_tmp&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;apids_tmp&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;check_execs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Xephyr&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;awesome&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="c"&gt;#==============================================================================&lt;/span&gt;
&lt;span class="c"&gt;# Changelog:&lt;/span&gt;
&lt;span class="c"&gt;#==============================================================================&lt;/span&gt;
&lt;span class="c"&gt;#&lt;/span&gt;
&lt;span class="c"&gt;# 0.5:&lt;/span&gt;
&lt;span class="c"&gt;#&lt;/span&gt;
&lt;span class="c"&gt;# * New log file per debug session&lt;/span&gt;
&lt;span class="c"&gt;# * Improve argparse help&lt;/span&gt;
&lt;span class="c"&gt;# * Better comments&lt;/span&gt;
&lt;span class="c"&gt;#&lt;/span&gt;
&lt;span class="c"&gt;# 0.4:&lt;/span&gt;
&lt;span class="c"&gt;#&lt;/span&gt;
&lt;span class="c"&gt;# * remove debug prints&lt;/span&gt;
&lt;span class="c"&gt;# * clean code&lt;/span&gt;
&lt;span class="c"&gt;#&lt;/span&gt;
&lt;span class="c"&gt;# 0.3:&lt;/span&gt;
&lt;span class="c"&gt;#&lt;/span&gt;
&lt;span class="c"&gt;# * implement logging functions&lt;/span&gt;
&lt;span class="c"&gt;# * check for executables&lt;/span&gt;
&lt;span class="c"&gt;#&lt;/span&gt;
&lt;span class="c"&gt;# 0.2:&lt;/span&gt;
&lt;span class="c"&gt;#&lt;/span&gt;
&lt;span class="c"&gt;# * argparse instead of sys.argv&lt;/span&gt;
&lt;span class="c"&gt;# * create a new rc_test.lua file from original&lt;/span&gt;
&lt;span class="c"&gt;# * restart the awesome session&lt;/span&gt;
&lt;span class="c"&gt;#&lt;/span&gt;
&lt;span class="c"&gt;# 0.1:&lt;/span&gt;
&lt;span class="c"&gt;#&lt;/span&gt;
&lt;span class="c"&gt;# * First attempt&lt;/span&gt;
&lt;span class="c"&gt;#&lt;/span&gt;
&lt;span class="c"&gt;#==============================================================================&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">joe di castro</dc:creator><pubDate>Thu, 07 Jun 2012 00:00:00 +0200</pubDate><guid>http://joedicastro.com/productividad-en-el-escritorio-linux-awesome.html</guid><category>linux</category><category>arch</category><category>tiling</category><category>twm</category><category>productividad</category><category>awesome</category><category>gnome</category><category>lua</category><category>python</category></item><item><title>Productividad en el escritorio Linux: Xmonad</title><link>http://joedicastro.com/productividad-en-el-escritorio-linux-xmonad.html</link><description>&lt;p&gt;&lt;a href="http://xmonad.org"&gt;xmonad&lt;/a&gt; es un &lt;a href="http://joedicastro.com/productividad-en-el-escritorio-linux-tiling.html"&gt;Gestor de ventanas de mosaico&lt;/a&gt;, uno de los más
empleados y de los más potentes. Después de haber probado varios (dwm, bluetile,
wmii y el plugin Compiz Grid) llevo ya unos cuantos meses trabajando con él y
posiblemente siga conmigo mucho, mucho tiempo. Una vez que trabajas con un
&lt;strong&gt;tiling window manager&lt;/strong&gt; es muy difícil que echarse atrás, volver a un gestor de
ventanas flotantes tradicional es casi impensable. Probaré uno más,
&lt;a href="http://awesome.naquadah.org"&gt;awesome&lt;/a&gt;, que promete mucho y solo si este logra convencerme del cambio,
abandonaré Xmonad.&lt;/p&gt;
&lt;p&gt;¿Pero que tiene de especial un &lt;strong&gt;twm&lt;/strong&gt; como &lt;strong&gt;Xmonad&lt;/strong&gt; para haber decidido
abandonar la gestión de ventanas por defecto de Compiz, Gnome Shell, Unity, Kwin,
etc y apostar por él? Cuando uno está cansado de perder el tiempo con maniobras y
decisiones triviales -ajustar las ventanas en la pantalla, que si el navegador por
aquí, que si este terminal por allá, etc y cambiando continuamente la mano del
teclado al ratón y viceversa- pues entonces decides que hay que darle una
oportunidad a un twm, que sea el gestor de ventanas quien haga el trabajo sucio
por ti.&lt;/p&gt;
&lt;p&gt;¿Y hasta que punto resuelve bien este problema un twm como Xmonad? En este vídeo
de xmonad trabajando con mi configuración, uno se puede hacer una idea de lo que
es capaz.&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;iframe src="http://player.vimeo.com/video/33164152?title=0&amp;amp;byline=0&amp;amp;portrait=0" 
width="700" height="438"&gt;
&lt;/iframe&gt;
&lt;p&gt;Esbozo de las posibilidades de un Tiling Window Manager como Xmonad
trabajando conjuntamente con Gnome 3 y Unity 2D sobre un Ubuntu 11.10.
Recomiendo ver en alta resolución y a pantalla completa.&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Xmonad&lt;/strong&gt; no necesita de un entorno de escritorio para trabajar, se puede iniciar
una sesión directamente en él, al igual que la mayoría de gestores de ventanas
de mosaico y otros gestores de ventanas como &lt;a href="http://es.wikipedia.org/wiki/Openbox"&gt;OpenBox&lt;/a&gt;. En el vídeo se puede
apreciar que lo estoy empleando conjuntamente con Unity, en concreto &lt;strong&gt;Unity 2D&lt;/strong&gt;.
Esto es así porque emplear Xmonad (u otro twm) de forma autónoma te obliga a
montar una serie de servicios que vienen montados por defecto normalmente en un
escritorio, como salvapantallas, fondo de pantalla, bandeja de sistema, gestor
de red, notificaciones, control de volumen, soporte impresoras, etc. Como estoy
contento con el funcionamiento en general de Gnome, lo mejor es no reinventar la
rueda y aprovechar lo mejor de los dos mundos empleando ambos a la vez.
Anteriormente con Gnome 2, lo tenia funcionando sin Unity, pero con Gnome 3 me
encuentro con la desagradable situación de que Gnome classic (el fallback mode)
tiene un panel que es un autentico desastre y que además no es redimensionable
en altura (tiene 30px y yo lo quiero con 21px). Actualmente hay una
&lt;a href="http://askubuntu.com/questions/69576/how-to-customize-the-gnome-classic-panel/76884#76884"&gt;forma de arreglar esto&lt;/a&gt;, pero de momento lo tengo montado todo con Unity
2D y no hecho nada en falta. Eso si, de Unity solo empleo el panel, el Global Menu
y la base de Gnome 3, lo demás lo descarto. Resumiendo, que básicamente sustituyo
&lt;code&gt;metacity&lt;/code&gt; por &lt;code&gt;xmonad&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id="xmonad_con_unity_2d"&gt;Xmonad con Unity 2D&lt;/h2&gt;
&lt;p&gt;Aquí contaré como tengo configurado actualmente &lt;strong&gt;Xmonad&lt;/strong&gt; con &lt;strong&gt;Ubuntu 11.10&lt;/strong&gt;
(Oneiric Ocelot) y con &lt;strong&gt;Gnome 3&lt;/strong&gt; y el panel de &lt;strong&gt;Unity 2D&lt;/strong&gt; (&lt;code&gt;unity-2p-panel&lt;/code&gt;).
Si alguien continua con Gnome 2D o alguna versión anterior de Ubuntu puede revisar
&lt;a href="http://markhansen.co.nz/xmonad-ubuntu-lucid/"&gt;este enlace&lt;/a&gt;, la base es muy parecida, y luego solo habría que aplicar mi
configuración (u otra).&lt;/p&gt;
&lt;p&gt;Lo primero que se necesita es instalar xmonad, que en Ubuntu viene siendo así:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo apt-get install xmonad
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;A continuación crearíamos un fichero &lt;code&gt;~/.xmonad/xmonad.hs&lt;/code&gt; de configuración
básica&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;mkdir ~/.xmonad           &lt;span class="c"&gt;# El carácter ~ se obtiene pulsando Alt Gr + 4&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;vi ~/.xmonad/xmonad.hs    &lt;span class="c"&gt;# Puedes emplear gedit en vez de vi si lo prefieres&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;e incluiríamos lo siguiente dentro de él:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="kr"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;XMonad&lt;/span&gt;
&lt;span class="kr"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;XMonad.Config.Gnome&lt;/span&gt;

&lt;span class="nf"&gt;myManageHook&lt;/span&gt; &lt;span class="ow"&gt;=&lt;/span&gt; &lt;span class="n"&gt;composeAll&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="n"&gt;manageHook&lt;/span&gt; &lt;span class="n"&gt;gnomeConfig&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;className&lt;/span&gt; &lt;span class="o"&gt;=?&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Unity-2d-panel&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;--&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;doIgnore&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;className&lt;/span&gt; &lt;span class="o"&gt;=?&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Unity-2d-launcher&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;--&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;doFloat&lt;/span&gt;
    &lt;span class="p"&gt;])&lt;/span&gt;

&lt;span class="nf"&gt;main&lt;/span&gt; &lt;span class="ow"&gt;=&lt;/span&gt; &lt;span class="n"&gt;xmonad&lt;/span&gt; &lt;span class="n"&gt;gnomeConfig&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;manageHook&lt;/span&gt; &lt;span class="ow"&gt;=&lt;/span&gt; &lt;span class="n"&gt;myManageHook&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Ahora tendríamos que recompilar Xmonad, es algo necesario cada vez que realizamos
algún cambio en la configuración, pero es un proceso que no suele llevar más de
5 segundos (y Xmonad se puede reiniciar sin tener que cerrar la sesión):&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;xmonad --recompile
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Lo siguiente es crear los ficheros necesarios para crear una nueva sesión de
Gnome. Creamos primero el fichero que define nuestra nueva sesión:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo vi /usr/share/gnome-session/sessions/xmonad.session
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;y dentro añadimos esto:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="k"&gt;[GNOME Session]&lt;/span&gt;
&lt;span class="na"&gt;Name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;Xmonad Unity 2D&lt;/span&gt;
&lt;span class="na"&gt;RequiredComponents&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;gnome-settings-daemon;&lt;/span&gt;
&lt;span class="na"&gt;RequiredProviders&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;windowmanager;panel;&lt;/span&gt;
&lt;span class="na"&gt;DefaultProvider-windowmanager&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;xmonad&lt;/span&gt;
&lt;span class="na"&gt;DefaultProvider-panel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;unity-2d-panel&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;a continuación creamos el fichero que inicia esta sesión:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo vi /usr/share/xsessions/xmonad-unity-session.desktop
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;con este contenido:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="k"&gt;[Desktop Entry]&lt;/span&gt;
&lt;span class="na"&gt;Name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;XMonad Unity 2D&lt;/span&gt;
&lt;span class="na"&gt;Comment&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;Tiling window manager&lt;/span&gt;
&lt;span class="na"&gt;TryExec&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;/usr/bin/gnome-session&lt;/span&gt;
&lt;span class="na"&gt;Exec&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;gnome-session --session=xmonad&lt;/span&gt;
&lt;span class="na"&gt;Type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;XSession&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Con esto estaría ya montada una sesión con la configuración por defecto de
Xmonad funcionado sobre Gnome y empleando el panel de Unity 2D. Ahora solo
tendrías que cerrar la sesión e iniciar la sesión con &lt;em&gt;Xmonad Unity 2D&lt;/em&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Advertencia:&lt;/strong&gt; Por defecto verás que se ha creado automáticamente una sesión
 llamada Xmonad al instalar este. Bien, si vas iniciar esa sesión, será mejor
 que sepas que para salir tienes que pulsar &lt;strong&gt;Win + Mayús + Q&lt;/strong&gt;, porque será una
 sesión donde solo tendrás Xmonad, y es la única forma de cerrar la sesión.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Si queréis hacer alguna prueba con esta configuración básica por defecto, es
mejor tener a mano una referencia con las combinaciones de teclas disponibles,
aquí hay un &lt;a href="http://haskell.org/wikiupload/b/b8/Xmbindings.png"&gt;mapa del teclado&lt;/a&gt; de referencia que será muy útil.&lt;/p&gt;
&lt;h2 id="mi_configuraci+n"&gt;Mi configuración&lt;/h2&gt;
&lt;p&gt;Para poder emplear la configuración que se puede ver en el vídeo simplemente
habría que editar el fichero &lt;code&gt;~/.xmonad/xmonad.hs&lt;/code&gt; y sustituir su contenido por
el de mi fichero de configuración. El contenido del fichero lo incluyo al final
del articulo para no entorpecer la lectura del mismo.&lt;/p&gt;
&lt;h3 id="atajos_de_teclado"&gt;Atajos de teclado&lt;/h3&gt;
&lt;p&gt;Al comienzo del fichero enumero las combinaciones de teclas empleadas en mi
configuración, que difieren de las combinaciones por defecto y se asemejan de
algún modo a las que estaba habituado en Gnome y son más intuitivas para los que
estamos acostumbrados a él. Aunque las que se emplean por defecto también me son
muy familiares al estar basadas en parte en Vim. Voy a detallar algunas de estas
combinaciones.&lt;/p&gt;
&lt;h4 id="lanzar_aplicaciones"&gt;Lanzar aplicaciones&lt;/h4&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c1"&gt;-- Win  +  Enter                   Terminal&lt;/span&gt;
&lt;span class="c1"&gt;-- Win  +  F1                      Nautilus&lt;/span&gt;
&lt;span class="c1"&gt;-- Win  +  F2                      Firefox                  (single instance)&lt;/span&gt;
&lt;span class="c1"&gt;-- Win  +  F3                      Thunderbird              (single instance)&lt;/span&gt;
&lt;span class="c1"&gt;-- Win  +  F4                      RSSOwl                   (single instance)&lt;/span&gt;
&lt;span class="c1"&gt;-- Win  +  F5                      Hotot                    (single instance)&lt;/span&gt;
&lt;span class="c1"&gt;-- Win  +  F6                      ncmpcpp  - MPD player&lt;/span&gt;
&lt;span class="c1"&gt;-- Win  +  F7                      taskwarrior&lt;/span&gt;
&lt;span class="c1"&gt;-- Win  +  F8                      PAC                      (single instance)&lt;/span&gt;
&lt;span class="c1"&gt;-- Win  +  F9                      Aptana                   (single instance)&lt;/span&gt;
&lt;span class="c1"&gt;-- Win  +  F10                     Xmind                    (single instance)&lt;/span&gt;
&lt;span class="c1"&gt;-- Win  +  F11                     Dbeaver                  (single instance)&lt;/span&gt;
&lt;span class="c1"&gt;-- Win  +  F12                     VirtualBox               (single instance)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Lo primero que se puede ver es una serie de atajos para lanzar aplicaciones
empleando la tecla &lt;strong&gt;Win&lt;/strong&gt; más las teclas de función. La tecla &lt;strong&gt;Win&lt;/strong&gt; (también
llamada &lt;strong&gt;Super&lt;/strong&gt;) es la tecla maestra por defecto de Xmonad (&lt;code&gt;mod4Mask&lt;/code&gt;) y es la
que se emplea en combinación con otras para realizar todo tipo de acciones. Estas
combinaciones me permiten lanzar las aplicaciones que uso con más frecuencia con
un par de teclas.&lt;/p&gt;
&lt;p&gt;Algunas aparecen con la frase &lt;em&gt;single instance&lt;/em&gt; entre paréntesis, esto quiere
decir que de estas aplicaciones solamente se abrirá una ventana. De hecho, lo que
ocurre si volvemos a pulsar la combinación de teclas que abre la aplicación (una
vez que esta ya está abierta) es que en lugar de abrir una nueva, nos movemos a
la ventana ya abierta, esté en el escritorio que esté. Lo que es muy útil para
localizar la ventana de una de estas aplicaciones de forma inmediata.&lt;/p&gt;
&lt;p&gt;Adicionalmente la combinación &lt;strong&gt;Alt + Enter&lt;/strong&gt; nos permite abrir una ventana del
terminal. En este caso lo tengo predeterminado para que abra una venta de
&lt;code&gt;terminator&lt;/code&gt;&lt;/p&gt;
&lt;h4 id="consola_emergente"&gt;Consola emergente&lt;/h4&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c1"&gt;-- Win  +  Space                   Run or Raise Shell Prompt&lt;/span&gt;
&lt;span class="c1"&gt;-- Win  +  Shift   +  Space        Run Shell Prompt&lt;/span&gt;
&lt;span class="c1"&gt;-- Win  +  Control +  Space        Window Prompt&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;A continuación podemos ver las teclas dedicadas a la consola emergente inferior
(al estilo de Guake, Yakuake o Tilda) y que según la combinación pulsada
realizara una acción u otra. La consola cuenta con auto-completado de texto, con
lo cual escribiendo las primeras letras se nos muestran todas las coincidencias
disponibles, a través de las que podemos desplazarnos con el tabulador.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Win + Espacio&lt;/strong&gt; nos despliega una consola que nos permite lanzar una
aplicación de igual modo que los lanzadores gráficos. Si la aplicación ya se
encuentra abierta, nos dirige a la ventana de la misma.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Win + Mayús + Espacio&lt;/strong&gt; ejecuta el comando que escribamos. Similar a la
ventana de ejecutar comando de Gnome (&lt;em&gt;Alt + F2&lt;/em&gt; en Gnome)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Win + Control + Espacio&lt;/strong&gt; nos muestra las ventanas que están abiertas en ese
momento. Seleccionando una nos envía directamente a ella. Gracias a esto,
localizar una ventana abierta entre los múltiples escritorios es cuestión de
segundos. Si conocemos el nombre de la ventana podemos filtrarla escribiendo las
primeras letras con el teclado. Imagina una sesión en la que tenemos abiertas más
de 10 aplicaciones en varios escritorios distintos, esto nos permite localizar
una ventana en segundos, es muy útil.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="reiniciar_xmonad"&gt;Reiniciar Xmonad&lt;/h4&gt;
&lt;p&gt;Con la combinación &lt;strong&gt;Win + q&lt;/strong&gt; lo que hacemos es reiniciar Xmonad sin necesidad
de reiniciar la sesión. Esto es muy útil cuando introducimos cambios en la
configuración, después de guardar el fichero y ejecutar &lt;code&gt;xmonad --recompile&lt;/code&gt; en
un terminal, pulsamos esta combinación y los cambios se reflejaran de forma
inmediata.&lt;/p&gt;
&lt;h2 id="transparencias"&gt;Transparencias&lt;/h2&gt;
&lt;p&gt;Una de las carencias de Xmonad es que no incorpora un &lt;a href="http://es.wikipedia.org/wiki/Gestor_de_composici%C3%B3n_de_ventanas"&gt;gestor de composición&lt;/a&gt;
por lo que si queremos manejar transparencias en nuestros terminales,
notificaciones, ventanas, etc, debemos emplear uno externo. Para esto empleo
&lt;code&gt;xcompmgr&lt;/code&gt; que funciona perfectamente y es muy ligero. Como aún conservo las
otras sesiones de Ubuntu (Unity, Unity 2 D, Gnome Shell, etc) lo que hago para
que solo se ejecute en la sesión de &lt;em&gt;Xmonad Unity 2D&lt;/em&gt; es emplear este script bash:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/bin/bash&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="nv"&gt;$DESKTOP_SESSION&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;xmonad-unity-session&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;; &lt;span class="k"&gt;then&lt;/span&gt;
&lt;span class="k"&gt;    &lt;/span&gt;xcompmgr -I1 -O1 -Ff;
&lt;span class="k"&gt;fi&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Luego añado el script a las aplicaciones que se ejecutan al inicio de la sesión
y listo.&lt;/p&gt;
&lt;h2 id="bandeja_del_sistema"&gt;Bandeja del sistema&lt;/h2&gt;
&lt;p&gt;Una de las carencias de Unity en la versión 11.10 es que no han incorporado una
bandeja del sistema donde alojar los iconos de aplicaciones que aún no tienen
soporte para los &lt;em&gt;indicadores&lt;/em&gt;. Se supone que debería añadirlos de forma
automática al panel, incluso hay una configuración a través de &lt;code&gt;dconf&lt;/code&gt; para
habilitar esto, pero no funciona para todas las aplicaciones. Para añadir un
&lt;em&gt;systray&lt;/em&gt; empleo un script parecido al anterior para lanzar la aplicación
&lt;code&gt;trayer&lt;/code&gt; en esta sesión.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/bin/bash&lt;/span&gt;

&lt;span class="nv"&gt;MYARGS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;--edge top --widthtype request --transparent true --alpha 0 --distancefrom right --distance 1100 --height 24 --tint 0x4c4a44 --align right&amp;quot;&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="nv"&gt;$DESKTOP_SESSION&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;xmonad-unity-session&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;; &lt;span class="k"&gt;then&lt;/span&gt;
&lt;span class="k"&gt;    &lt;/span&gt;sleep 24 &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; trayer &lt;span class="nv"&gt;$MYARGS&lt;/span&gt;;
&lt;span class="k"&gt;fi&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;br /&gt;

&lt;h2 id="como_personalizar_xmonad_haskell"&gt;Como personalizar Xmonad: Haskell&lt;/h2&gt;
&lt;p&gt;El mayor inconveniente de Xmonad (y a la vez una de sus ventajas) es que la
configuración es necesario hacerla a través del mismo lenguaje de programación
en el que está creado: &lt;a href="http://haskell.org/haskellwiki/Haskell"&gt;Haskell&lt;/a&gt;. Esto es una importante barrera de
entrada para los que no conocen el lenguaje, yo incluido, pero a base de ir
probando algunas de las configuraciones aportadas y el prueba y error, puedes
salir del paso muy satisfactoriamente. Con un poco de práctica y estudiando un
poco el lenguaje (que de entrada no es de los más fáciles de leer) y gracias a
la documentación disponible, puedes conseguir exactamente lo que quieres. Y esa es
precisamente también su mayor ventaja, que puedes llegar a un gran nivel de
personalización si conoces Haskell. Además Haskell le proporciona una gran
estabilidad y extensibilidad.&lt;/p&gt;
&lt;p&gt;Afortunadamente hay varios recursos disponibles que nos hacen el trabajo más
fácil, porque Xmonad está aceptablemente bien documentado (en Inglés).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://haskell.org/haskellwiki/Xmonad/Screenshots"&gt;Pantallazos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://haskell.org/haskellwiki/Xmonad/Config_archive"&gt;Ficheros de configuración&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://haskell.org/haskellwiki/Xmonad"&gt;Wiki&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://xmonad.org/xmonad-docs/xmonad/index.html"&gt;API Docs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://xmonad.org/xmonad-docs/xmonad-contrib/index.html"&gt;API Extensiones Docs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="xmonadhs"&gt;Xmonad.hs&lt;/h2&gt;
&lt;p&gt;Este es mi mi fichero de configuración de Xmonad:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c1"&gt;-- joe di castro&amp;#39;s xmonad.hs&lt;/span&gt;
&lt;span class="c1"&gt;-- Based on rupa&amp;#39;s xmonad.hs, https://github.com/rupa/xmonad&lt;/span&gt;

&lt;span class="c1"&gt;-- ===============================================================  KEY BINDINGS&lt;/span&gt;

&lt;span class="c1"&gt;------------------------------------------------- Launch (or Raise) Applications&lt;/span&gt;
&lt;span class="c1"&gt;-- Win  +  Enter                   Terminal&lt;/span&gt;
&lt;span class="c1"&gt;-- Win  +  F1                      Nautilus&lt;/span&gt;
&lt;span class="c1"&gt;-- Win  +  F2                      Firefox                  (single instance)&lt;/span&gt;
&lt;span class="c1"&gt;-- Win  +  F3                      Thunderbird              (single instance)&lt;/span&gt;
&lt;span class="c1"&gt;-- Win  +  F4                      RSSOwl                   (single instance)&lt;/span&gt;
&lt;span class="c1"&gt;-- Win  +  F5                      Hotot                    (single instance)&lt;/span&gt;
&lt;span class="c1"&gt;-- Win  +  F6                      ncmpcpp  - MPD player&lt;/span&gt;
&lt;span class="c1"&gt;-- Win  +  F7                      taskwarrior&lt;/span&gt;
&lt;span class="c1"&gt;-- Win  +  F8                      PAC                      (single instance)&lt;/span&gt;
&lt;span class="c1"&gt;-- Win  +  F9                      Aptana                   (single instance)&lt;/span&gt;
&lt;span class="c1"&gt;-- Win  +  F10                     Xmind                    (single instance)&lt;/span&gt;
&lt;span class="c1"&gt;-- Win  +  F11                     Dbeaver                  (single instance)&lt;/span&gt;
&lt;span class="c1"&gt;-- Win  +  F12                     VirtualBox               (single instance)&lt;/span&gt;
&lt;span class="c1"&gt;----------------------------------------------------------- Shell/Window prompts&lt;/span&gt;
&lt;span class="c1"&gt;-- Win  +  Space                   Run or Raise Shell Prompt&lt;/span&gt;
&lt;span class="c1"&gt;-- Win  +  Shift   +  Space        Run Shell Prompt&lt;/span&gt;
&lt;span class="c1"&gt;-- Win  +  Control +  Space        Window Prompt&lt;/span&gt;
&lt;span class="c1"&gt;--------------------------------------------------------------------- Navigation&lt;/span&gt;
&lt;span class="c1"&gt;-- Win  +  [1..9]                  Switch to workspace N&lt;/span&gt;
&lt;span class="c1"&gt;-- Win  +  Shift   +  [1..9]       Move client to workspace N&lt;/span&gt;
&lt;span class="c1"&gt;-- Ctrl +  Alt     +  Left/Right   Previous/Next workspace&lt;/span&gt;
&lt;span class="c1"&gt;-- Alt  +  Tab                     Focus next window&lt;/span&gt;
&lt;span class="c1"&gt;-- Alt  +  Shift   +  Tab          Focus previous window&lt;/span&gt;
&lt;span class="c1"&gt;-------------------------------------------------------------- Window management&lt;/span&gt;
&lt;span class="c1"&gt;-- Win  +  Shift   +  Left         Move window to previous workspace&lt;/span&gt;
&lt;span class="c1"&gt;-- Win  +  Shift   +  Right        Move window to next workspace&lt;/span&gt;
&lt;span class="c1"&gt;-- Win  +  Control +  Left         Move window to previous empty workspace&lt;/span&gt;
&lt;span class="c1"&gt;-- Win  +  Control +  Right        Move window to next empty workspace&lt;/span&gt;
&lt;span class="c1"&gt;-- Ctrl +  Up/Down                 Move focused window up/down&lt;/span&gt;
&lt;span class="c1"&gt;-- Win  +  m                       Toggle focused window Full Screen&lt;/span&gt;
&lt;span class="c1"&gt;-- Win  +  n                       Refresh&lt;/span&gt;
&lt;span class="c1"&gt;-- Win  +  -                       Move focused windows to master area&lt;/span&gt;
&lt;span class="c1"&gt;-- Win  +  w  (or Alt + F4)        Close focused window&lt;/span&gt;
&lt;span class="c1"&gt;-- Win  +  t                       Back to tiling (unfloat floating window)&lt;/span&gt;
&lt;span class="c1"&gt;-- Win  +  Shift   +  t            Back All to tiling (unfloat ALL windows)&lt;/span&gt;
&lt;span class="c1"&gt;-------------------------------------------------------------  Layout management&lt;/span&gt;
&lt;span class="c1"&gt;-- Win  +  Tab                     Rotate layouts&lt;/span&gt;
&lt;span class="c1"&gt;-- Win  +  Left/Right              Shrink/Expand the master area&lt;/span&gt;
&lt;span class="c1"&gt;-- Win  +  Up/Down                 Mirror Shrink/expand&lt;/span&gt;
&lt;span class="c1"&gt;-- Win  +  ,/.                     Increment/Deincrement 1 window in master area&lt;/span&gt;
&lt;span class="c1"&gt;-- Win  +  f                       Hide/Unhide the gnome-panel/status bar&lt;/span&gt;
&lt;span class="c1"&gt;-- Win  +  Shift   +  n            Reset current workspace to main layout&lt;/span&gt;
&lt;span class="c1"&gt;------------------------------------------------------------------ Mosaic Layout&lt;/span&gt;
&lt;span class="c1"&gt;-- Win  +  a/z                     Taller/Wider&lt;/span&gt;
&lt;span class="c1"&gt;-- Win  +  Control +  n            Reset&lt;/span&gt;
&lt;span class="c1"&gt;------------------------------------------------------------------------- Others&lt;/span&gt;
&lt;span class="c1"&gt;-- Print Screen                    Capture screen&lt;/span&gt;
&lt;span class="c1"&gt;-- Win  +  q                       Restart XMonad&lt;/span&gt;
&lt;span class="c1"&gt;-- Win  +  Shift   +  q            Close gnome session dialog&lt;/span&gt;

&lt;span class="c1"&gt;-- ============================================================== MOUSE BINDINGS&lt;/span&gt;

&lt;span class="c1"&gt;-- Win  +  Button 1                Float Window and Move by dragging&lt;/span&gt;
&lt;span class="c1"&gt;-- Win  +  Button 2                Raise Window to the top&lt;/span&gt;
&lt;span class="c1"&gt;-- Win  +  Button 3                Float Window and Resize by dragging&lt;/span&gt;

&lt;span class="kr"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;XMonad&lt;/span&gt;
&lt;span class="kr"&gt;import&lt;/span&gt; &lt;span class="k"&gt;qualified&lt;/span&gt; &lt;span class="nn"&gt;XMonad.StackSet&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;W&lt;/span&gt;
&lt;span class="kr"&gt;import&lt;/span&gt; &lt;span class="k"&gt;qualified&lt;/span&gt; &lt;span class="nn"&gt;Data.Map&lt;/span&gt;        &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;M&lt;/span&gt;
&lt;span class="kr"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;Data.Monoid&lt;/span&gt;

&lt;span class="kr"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;XMonad.Actions.CycleWS&lt;/span&gt;
&lt;span class="kr"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;XMonad.Actions.FlexibleResize&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;Flex&lt;/span&gt;
&lt;span class="kr"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;XMonad.Actions.SinkAll&lt;/span&gt;
&lt;span class="kr"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;XMonad.Actions.UpdatePointer&lt;/span&gt;
&lt;span class="kr"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;XMonad.Actions.WindowGo&lt;/span&gt;

&lt;span class="kr"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;XMonad.Hooks.DynamicLog&lt;/span&gt;
&lt;span class="kr"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;XMonad.Hooks.EwmhDesktops&lt;/span&gt;
&lt;span class="kr"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;XMonad.Hooks.ManageDocks&lt;/span&gt;
&lt;span class="kr"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;XMonad.Hooks.ManageHelpers&lt;/span&gt;

&lt;span class="kr"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;XMonad.Layout.LayoutHints&lt;/span&gt;
&lt;span class="kr"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;XMonad.Layout.NoBorders&lt;/span&gt;
&lt;span class="kr"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;XMonad.Layout.ResizableTile&lt;/span&gt;
&lt;span class="kr"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;XMonad.Layout.Tabbed&lt;/span&gt;
&lt;span class="kr"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;XMonad.Layout.ToggleLayouts&lt;/span&gt;
&lt;span class="kr"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;XMonad.Layout.WindowArranger&lt;/span&gt;
&lt;span class="kr"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;XMonad.Layout.Mosaic&lt;/span&gt;

&lt;span class="kr"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;XMonad.Prompt&lt;/span&gt;
&lt;span class="kr"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;XMonad.Prompt.Input&lt;/span&gt;
&lt;span class="kr"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;XMonad.Prompt.RunOrRaise&lt;/span&gt;
&lt;span class="kr"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;XMonad.Prompt.Shell&lt;/span&gt;
&lt;span class="kr"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;XMonad.Prompt.Window&lt;/span&gt;

&lt;span class="kr"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;XMonad.Util.Run&lt;/span&gt;
&lt;span class="kr"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;XMonad.Util.Scratchpad&lt;/span&gt;
&lt;span class="kr"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;XMonad.Util.WorkspaceCompare&lt;/span&gt;
&lt;span class="kr"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;XMonad.Util.XSelection&lt;/span&gt;

&lt;span class="kr"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;XMonad.Config.Gnome&lt;/span&gt;

&lt;span class="c1"&gt;-- Mod4 is the Super / Windows key&lt;/span&gt;
&lt;span class="nf"&gt;winMask&lt;/span&gt; &lt;span class="ow"&gt;=&lt;/span&gt; &lt;span class="n"&gt;mod4Mask&lt;/span&gt;
&lt;span class="nf"&gt;altMask&lt;/span&gt; &lt;span class="ow"&gt;=&lt;/span&gt; &lt;span class="n"&gt;mod1Mask&lt;/span&gt;

&lt;span class="c1"&gt;-- key bindings&lt;/span&gt;
&lt;span class="nf"&gt;myKeys&lt;/span&gt; &lt;span class="n"&gt;conf&lt;/span&gt;&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;XConfig&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="kt"&gt;XMonad&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;modMask&lt;/span&gt; &lt;span class="ow"&gt;=&lt;/span&gt; &lt;span class="n"&gt;modMask&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="ow"&gt;=&lt;/span&gt; &lt;span class="kt"&gt;M&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fromList&lt;/span&gt; &lt;span class="o"&gt;$&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;winMask&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                    &lt;span class="n"&gt;xK_Return&lt;/span&gt;   &lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;spawn&lt;/span&gt; &lt;span class="o"&gt;$&lt;/span&gt; &lt;span class="kt"&gt;XMonad&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;terminal&lt;/span&gt; &lt;span class="n"&gt;conf&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;winMask&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                    &lt;span class="n"&gt;xK_F1&lt;/span&gt;       &lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;spawn&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;nautilus ~&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;winMask&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                    &lt;span class="n"&gt;xK_F2&lt;/span&gt;       &lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;runOrRaise&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;firefox&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;className&lt;/span&gt; &lt;span class="o"&gt;=?&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Firefox&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;winMask&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                    &lt;span class="n"&gt;xK_F3&lt;/span&gt;       &lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;runOrRaise&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;thunderbird&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;className&lt;/span&gt; &lt;span class="o"&gt;=?&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Thunderbird&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;winMask&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                    &lt;span class="n"&gt;xK_F4&lt;/span&gt;       &lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;runOrRaise&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;./rssowl/RSSOwl&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;className&lt;/span&gt; &lt;span class="o"&gt;=?&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;RSSOwl&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;winMask&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                    &lt;span class="n"&gt;xK_F5&lt;/span&gt;       &lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;runOrRaise&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;hotot&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;className&lt;/span&gt; &lt;span class="o"&gt;=?&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Hotot&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;winMask&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                    &lt;span class="n"&gt;xK_F6&lt;/span&gt;       &lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;spawn&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;terminator -e ncmpcpp&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;winMask&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                    &lt;span class="n"&gt;xK_F7&lt;/span&gt;       &lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;spawn&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;terminator -e &amp;#39;task shell&amp;#39; -p task&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;winMask&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                    &lt;span class="n"&gt;xK_F8&lt;/span&gt;       &lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;runOrRaise&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;pac&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;className&lt;/span&gt; &lt;span class="o"&gt;=?&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Pac&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;winMask&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                    &lt;span class="n"&gt;xK_F9&lt;/span&gt;       &lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;runOrRaise&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;./Aptana Studio 3/AptanaStudio3&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;className&lt;/span&gt; &lt;span class="o"&gt;=?&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Aptana Studio 3&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;winMask&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                    &lt;span class="n"&gt;xK_F10&lt;/span&gt;      &lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;runOrRaise&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;/usr/local/xmind/xmind&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;className&lt;/span&gt; &lt;span class="o"&gt;=?&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;XMind&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;winMask&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                    &lt;span class="n"&gt;xK_F11&lt;/span&gt;      &lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;runOrRaise&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;./dbeaver/dbeaver&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;className&lt;/span&gt; &lt;span class="o"&gt;=?&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;DBeaver&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;winMask&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                    &lt;span class="n"&gt;xK_F12&lt;/span&gt;      &lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;runOrRaise&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;VirtualBox&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;className&lt;/span&gt; &lt;span class="o"&gt;=?&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;VirtualBox&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;winMask&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                    &lt;span class="n"&gt;xK_space&lt;/span&gt;    &lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;runOrRaisePrompt&lt;/span&gt; &lt;span class="n"&gt;mySP&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;winMask&lt;/span&gt; &lt;span class="o"&gt;.|.&lt;/span&gt; &lt;span class="n"&gt;shiftMask&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;      &lt;span class="n"&gt;xK_space&lt;/span&gt;    &lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;shellPrompt&lt;/span&gt; &lt;span class="n"&gt;mySP&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;winMask&lt;/span&gt; &lt;span class="o"&gt;.|.&lt;/span&gt; &lt;span class="n"&gt;controlMask&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;    &lt;span class="n"&gt;xK_space&lt;/span&gt;    &lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;windowPromptGoto&lt;/span&gt; &lt;span class="n"&gt;mySP&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                          &lt;span class="n"&gt;xK_Print&lt;/span&gt;    &lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;unsafeSpawn&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;gnome-screenshot&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;altMask&lt;/span&gt; &lt;span class="o"&gt;.|.&lt;/span&gt; &lt;span class="n"&gt;controlMask&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;    &lt;span class="n"&gt;xK_Right&lt;/span&gt;    &lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;moveTo&lt;/span&gt; &lt;span class="kt"&gt;Next&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;WSIs&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;return&lt;/span&gt; &lt;span class="o"&gt;$&lt;/span&gt; &lt;span class="n"&gt;not&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;NSP&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="kt"&gt;W&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tag&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;altMask&lt;/span&gt; &lt;span class="o"&gt;.|.&lt;/span&gt; &lt;span class="n"&gt;controlMask&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;    &lt;span class="n"&gt;xK_Left&lt;/span&gt;     &lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;moveTo&lt;/span&gt; &lt;span class="kt"&gt;Prev&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;WSIs&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;return&lt;/span&gt; &lt;span class="o"&gt;$&lt;/span&gt; &lt;span class="n"&gt;not&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;NSP&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="kt"&gt;W&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tag&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;winMask&lt;/span&gt; &lt;span class="o"&gt;.|.&lt;/span&gt; &lt;span class="n"&gt;shiftMask&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;      &lt;span class="n"&gt;xK_Right&lt;/span&gt;    &lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;shiftTo&lt;/span&gt; &lt;span class="kt"&gt;Next&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;WSIs&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;return&lt;/span&gt; &lt;span class="o"&gt;$&lt;/span&gt; &lt;span class="n"&gt;not&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;NSP&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="kt"&gt;W&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tag&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;winMask&lt;/span&gt; &lt;span class="o"&gt;.|.&lt;/span&gt; &lt;span class="n"&gt;shiftMask&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;      &lt;span class="n"&gt;xK_Left&lt;/span&gt;     &lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;shiftTo&lt;/span&gt; &lt;span class="kt"&gt;Prev&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;WSIs&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;return&lt;/span&gt; &lt;span class="o"&gt;$&lt;/span&gt; &lt;span class="n"&gt;not&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;NSP&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="kt"&gt;W&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tag&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;winMask&lt;/span&gt; &lt;span class="o"&gt;.|.&lt;/span&gt; &lt;span class="n"&gt;controlMask&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;    &lt;span class="n"&gt;xK_Right&lt;/span&gt;    &lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;shiftTo&lt;/span&gt; &lt;span class="kt"&gt;Next&lt;/span&gt; &lt;span class="kt"&gt;EmptyWS&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;winMask&lt;/span&gt; &lt;span class="o"&gt;.|.&lt;/span&gt; &lt;span class="n"&gt;controlMask&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;    &lt;span class="n"&gt;xK_Left&lt;/span&gt;     &lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;shiftTo&lt;/span&gt; &lt;span class="kt"&gt;Prev&lt;/span&gt; &lt;span class="kt"&gt;EmptyWS&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;winMask&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                    &lt;span class="n"&gt;xK_Tab&lt;/span&gt;      &lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;sendMessage&lt;/span&gt; &lt;span class="kt"&gt;NextLayout&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dynamicLogString&lt;/span&gt; &lt;span class="n"&gt;myPP&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;=&lt;/span&gt; &lt;span class="nf"&gt;\&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="ow"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;safeSpawn&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;gnome-osd-client&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;altMask&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                    &lt;span class="n"&gt;xK_Tab&lt;/span&gt;      &lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;windows&lt;/span&gt; &lt;span class="kt"&gt;W&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;focusDown&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;altMask&lt;/span&gt; &lt;span class="o"&gt;.|.&lt;/span&gt; &lt;span class="n"&gt;shiftMask&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;      &lt;span class="n"&gt;xK_Tab&lt;/span&gt;      &lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;windows&lt;/span&gt; &lt;span class="kt"&gt;W&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;focusUp&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;controlMask&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                &lt;span class="n"&gt;xK_Down&lt;/span&gt;     &lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;windows&lt;/span&gt; &lt;span class="kt"&gt;W&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;swapDown&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;controlMask&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                &lt;span class="n"&gt;xK_Up&lt;/span&gt;       &lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;windows&lt;/span&gt; &lt;span class="kt"&gt;W&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;swapUp&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;winMask&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                    &lt;span class="n"&gt;xK_Left&lt;/span&gt;     &lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;sendMessage&lt;/span&gt; &lt;span class="kt"&gt;Shrink&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;winMask&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                    &lt;span class="n"&gt;xK_Right&lt;/span&gt;    &lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;sendMessage&lt;/span&gt; &lt;span class="kt"&gt;Expand&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;winMask&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                    &lt;span class="n"&gt;xK_Down&lt;/span&gt;     &lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;sendMessage&lt;/span&gt; &lt;span class="kt"&gt;MirrorShrink&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;winMask&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                    &lt;span class="n"&gt;xK_Up&lt;/span&gt;       &lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;sendMessage&lt;/span&gt; &lt;span class="kt"&gt;MirrorExpand&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;winMask&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                    &lt;span class="n"&gt;xK_minus&lt;/span&gt;    &lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;windows&lt;/span&gt; &lt;span class="kt"&gt;W&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shiftMaster&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;winMask&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                    &lt;span class="n"&gt;xK_comma&lt;/span&gt;    &lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;sendMessage&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;IncMasterN&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;winMask&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                    &lt;span class="n"&gt;xK_period&lt;/span&gt;   &lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;sendMessage&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;IncMasterN&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;winMask&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                    &lt;span class="n"&gt;xK_n&lt;/span&gt;        &lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;refresh&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;winMask&lt;/span&gt; &lt;span class="o"&gt;.|.&lt;/span&gt; &lt;span class="n"&gt;shiftMask&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;      &lt;span class="n"&gt;xK_n&lt;/span&gt;        &lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;setLayout&lt;/span&gt; &lt;span class="o"&gt;$&lt;/span&gt; &lt;span class="kt"&gt;XMonad&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;layoutHook&lt;/span&gt; &lt;span class="n"&gt;conf&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;winMask&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt;                   &lt;span class="n"&gt;xK_a&lt;/span&gt;        &lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;sendMessage&lt;/span&gt; &lt;span class="kt"&gt;Taller&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;winMask&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt;                   &lt;span class="n"&gt;xK_z&lt;/span&gt;        &lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;sendMessage&lt;/span&gt; &lt;span class="kt"&gt;Wider&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;winMask&lt;/span&gt; &lt;span class="o"&gt;.|.&lt;/span&gt; &lt;span class="n"&gt;controlMask&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;    &lt;span class="n"&gt;xK_n&lt;/span&gt;        &lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;sendMessage&lt;/span&gt; &lt;span class="kt"&gt;Reset&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;winMask&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                    &lt;span class="n"&gt;xK_m&lt;/span&gt;        &lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;sendMessage&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;Toggle&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Full&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dynamicLogString&lt;/span&gt; &lt;span class="n"&gt;myPP&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;=&lt;/span&gt; &lt;span class="nf"&gt;\&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="ow"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;safeSpawn&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;gnome-osd-client&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;winMask&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                    &lt;span class="n"&gt;xK_t&lt;/span&gt;        &lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;withFocused&lt;/span&gt; &lt;span class="o"&gt;$&lt;/span&gt; &lt;span class="n"&gt;windows&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="kt"&gt;W&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sink&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;winMask&lt;/span&gt; &lt;span class="o"&gt;.|.&lt;/span&gt; &lt;span class="n"&gt;shiftMask&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;      &lt;span class="n"&gt;xK_t&lt;/span&gt;        &lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;sinkAll&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;winMask&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                    &lt;span class="n"&gt;xK_f&lt;/span&gt;        &lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;sendMessage&lt;/span&gt; &lt;span class="kt"&gt;ToggleStruts&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;winMask&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                    &lt;span class="n"&gt;xK_w&lt;/span&gt;        &lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;kill&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;altMask&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                    &lt;span class="n"&gt;xK_F4&lt;/span&gt;       &lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;kill&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;winMask&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                    &lt;span class="n"&gt;xK_q&lt;/span&gt;        &lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;broadcastMessage&lt;/span&gt; &lt;span class="kt"&gt;ReleaseResources&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;restart&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;xmonad&amp;quot;&lt;/span&gt; &lt;span class="kt"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;winMask&lt;/span&gt; &lt;span class="o"&gt;.|.&lt;/span&gt; &lt;span class="n"&gt;shiftMask&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;      &lt;span class="n"&gt;xK_q&lt;/span&gt;        &lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;spawn&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;gnome-session-quit&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;]&lt;/span&gt;

    &lt;span class="o"&gt;++&lt;/span&gt;
    &lt;span class="c1"&gt;-- mod-[1..9], Switch to workspace N&lt;/span&gt;
    &lt;span class="c1"&gt;-- mod-shift-[1..9], Move client to workspace N&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="o"&gt;.|.&lt;/span&gt; &lt;span class="n"&gt;winMask&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;windows&lt;/span&gt; &lt;span class="o"&gt;$&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="ow"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="n"&gt;zip&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;XMonad&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;workspaces&lt;/span&gt; &lt;span class="n"&gt;conf&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;xK_1&lt;/span&gt; &lt;span class="o"&gt;..&lt;/span&gt; &lt;span class="n"&gt;xK_9&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="ow"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="kt"&gt;W&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;greedyView&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;W&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shift&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;shiftMask&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="c1"&gt;-- mouse bindings&lt;/span&gt;
&lt;span class="nf"&gt;myMouseBindings&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;XConfig&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="kt"&gt;XMonad&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;modMask&lt;/span&gt; &lt;span class="ow"&gt;=&lt;/span&gt; &lt;span class="n"&gt;modMask&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="ow"&gt;=&lt;/span&gt; &lt;span class="kt"&gt;M&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fromList&lt;/span&gt; &lt;span class="o"&gt;$&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;winMask&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;button1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;\&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt; &lt;span class="ow"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;focus&lt;/span&gt; &lt;span class="n"&gt;w&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;mouseMoveWindow&lt;/span&gt; &lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;winMask&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;button2&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;\&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt; &lt;span class="ow"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;focus&lt;/span&gt; &lt;span class="n"&gt;w&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;windows&lt;/span&gt; &lt;span class="kt"&gt;W&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shiftMaster&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;winMask&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;button3&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;\&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt; &lt;span class="ow"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;focus&lt;/span&gt; &lt;span class="n"&gt;w&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kt"&gt;Flex&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mouseResizeWindow&lt;/span&gt; &lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="c1"&gt;-- decoration theme&lt;/span&gt;
&lt;span class="nf"&gt;myDeco&lt;/span&gt; &lt;span class="ow"&gt;=&lt;/span&gt; &lt;span class="n"&gt;defaultTheme&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;activeColor&lt;/span&gt;           &lt;span class="ow"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;orange&amp;quot;&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;inactiveColor&lt;/span&gt;         &lt;span class="ow"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;#222222&amp;quot;&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;urgentColor&lt;/span&gt;           &lt;span class="ow"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;yellow&amp;quot;&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;activeBorderColor&lt;/span&gt;     &lt;span class="ow"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;orange&amp;quot;&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;inactiveBorderColor&lt;/span&gt;   &lt;span class="ow"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;#222222&amp;quot;&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;urgentBorderColor&lt;/span&gt;     &lt;span class="ow"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;yellow&amp;quot;&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;activeTextColor&lt;/span&gt;       &lt;span class="ow"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;orange&amp;quot;&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;inactiveTextColor&lt;/span&gt;     &lt;span class="ow"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;#222222&amp;quot;&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;urgentTextColor&lt;/span&gt;       &lt;span class="ow"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;yellow&amp;quot;&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;decoHeight&lt;/span&gt;            &lt;span class="ow"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;-- tab theme&lt;/span&gt;
&lt;span class="nf"&gt;myTab&lt;/span&gt; &lt;span class="ow"&gt;=&lt;/span&gt; &lt;span class="n"&gt;defaultTheme&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;activeColor&lt;/span&gt;           &lt;span class="ow"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;black&amp;quot;&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;inactiveColor&lt;/span&gt;         &lt;span class="ow"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;black&amp;quot;&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;urgentColor&lt;/span&gt;           &lt;span class="ow"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;yellow&amp;quot;&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;activeBorderColor&lt;/span&gt;     &lt;span class="ow"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;orange&amp;quot;&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;inactiveBorderColor&lt;/span&gt;   &lt;span class="ow"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;#222222&amp;quot;&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;urgentBorderColor&lt;/span&gt;     &lt;span class="ow"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;black&amp;quot;&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;activeTextColor&lt;/span&gt;       &lt;span class="ow"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;orange&amp;quot;&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;inactiveTextColor&lt;/span&gt;     &lt;span class="ow"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;#222222&amp;quot;&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;urgentTextColor&lt;/span&gt;       &lt;span class="ow"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;yellow&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;-- shell prompt theme&lt;/span&gt;
&lt;span class="nf"&gt;mySP&lt;/span&gt; &lt;span class="ow"&gt;=&lt;/span&gt; &lt;span class="n"&gt;defaultXPConfig&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;bgColor&lt;/span&gt;               &lt;span class="ow"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;black&amp;quot;&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fgColor&lt;/span&gt;               &lt;span class="ow"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;white&amp;quot;&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;bgHLight&lt;/span&gt;              &lt;span class="ow"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;gray&amp;quot;&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fgHLight&lt;/span&gt;              &lt;span class="ow"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;black&amp;quot;&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;borderColor&lt;/span&gt;           &lt;span class="ow"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;orange&amp;quot;&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;promptBorderWidth&lt;/span&gt;     &lt;span class="ow"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;position&lt;/span&gt;              &lt;span class="ow"&gt;=&lt;/span&gt; &lt;span class="kt"&gt;Bottom&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;height&lt;/span&gt;                &lt;span class="ow"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;40&lt;/span&gt;
    &lt;span class="c1"&gt;--, autoComplete        = Just 1000&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;historySize&lt;/span&gt;           &lt;span class="ow"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;-- dynamicLog theme (suppress everything but layout)&lt;/span&gt;
&lt;span class="nf"&gt;myPP&lt;/span&gt; &lt;span class="ow"&gt;=&lt;/span&gt; &lt;span class="n"&gt;defaultPP&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;ppLayout&lt;/span&gt;  &lt;span class="ow"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;\&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="ow"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="kr"&gt;case&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="kr"&gt;of&lt;/span&gt;
      &lt;span class="s"&gt;&amp;quot;Hinted ResizableTall&amp;quot;&lt;/span&gt;        &lt;span class="ow"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;[|]&amp;quot;&lt;/span&gt;
      &lt;span class="s"&gt;&amp;quot;Mirror Hinted ResizableTall&amp;quot;&lt;/span&gt; &lt;span class="ow"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;[-]&amp;quot;&lt;/span&gt;
      &lt;span class="s"&gt;&amp;quot;Hinted Tabbed Simplest&amp;quot;&lt;/span&gt;      &lt;span class="ow"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;[T]&amp;quot;&lt;/span&gt;
      &lt;span class="s"&gt;&amp;quot;Mosaic&amp;quot;&lt;/span&gt;                      &lt;span class="ow"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;[M]&amp;quot;&lt;/span&gt;
      &lt;span class="s"&gt;&amp;quot;Full&amp;quot;&lt;/span&gt;                 &lt;span class="ow"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;[ ]&amp;quot;&lt;/span&gt;
      &lt;span class="kr"&gt;_&lt;/span&gt;                      &lt;span class="ow"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ppCurrent&lt;/span&gt;             &lt;span class="ow"&gt;=&lt;/span&gt; &lt;span class="n"&gt;const&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ppVisible&lt;/span&gt;             &lt;span class="ow"&gt;=&lt;/span&gt; &lt;span class="n"&gt;const&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ppHidden&lt;/span&gt;              &lt;span class="ow"&gt;=&lt;/span&gt; &lt;span class="n"&gt;const&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ppHiddenNoWindows&lt;/span&gt;     &lt;span class="ow"&gt;=&lt;/span&gt; &lt;span class="n"&gt;const&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ppUrgent&lt;/span&gt;              &lt;span class="ow"&gt;=&lt;/span&gt; &lt;span class="n"&gt;const&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ppTitle&lt;/span&gt;               &lt;span class="ow"&gt;=&lt;/span&gt; &lt;span class="n"&gt;const&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ppWsSep&lt;/span&gt;               &lt;span class="ow"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ppSep&lt;/span&gt;                 &lt;span class="ow"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;-- layouts&lt;/span&gt;
&lt;span class="nf"&gt;myLayout&lt;/span&gt; &lt;span class="ow"&gt;=&lt;/span&gt; &lt;span class="n"&gt;avoidStruts&lt;/span&gt; &lt;span class="o"&gt;$&lt;/span&gt; &lt;span class="n"&gt;toggleLayouts&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;noBorders&lt;/span&gt; &lt;span class="kt"&gt;Full&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;smartBorders&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tiled&lt;/span&gt; &lt;span class="o"&gt;|||&lt;/span&gt; &lt;span class="n"&gt;mosaic&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;|||&lt;/span&gt; &lt;span class="kt"&gt;Mirror&lt;/span&gt; &lt;span class="n"&gt;tiled&lt;/span&gt; &lt;span class="o"&gt;|||&lt;/span&gt; &lt;span class="n"&gt;layoutHints&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tabbed&lt;/span&gt; &lt;span class="n"&gt;shrinkText&lt;/span&gt; &lt;span class="n"&gt;myTab&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
    &lt;span class="kr"&gt;where&lt;/span&gt;
        &lt;span class="n"&gt;tiled&lt;/span&gt;   &lt;span class="ow"&gt;=&lt;/span&gt; &lt;span class="n"&gt;layoutHints&lt;/span&gt; &lt;span class="o"&gt;$&lt;/span&gt; &lt;span class="kt"&gt;ResizableTall&lt;/span&gt; &lt;span class="n"&gt;nmaster&lt;/span&gt; &lt;span class="n"&gt;delta&lt;/span&gt; &lt;span class="n"&gt;ratio&lt;/span&gt; &lt;span class="kt"&gt;[]&lt;/span&gt;
        &lt;span class="n"&gt;nmaster&lt;/span&gt; &lt;span class="ow"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
        &lt;span class="n"&gt;delta&lt;/span&gt;   &lt;span class="ow"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;
        &lt;span class="n"&gt;ratio&lt;/span&gt;   &lt;span class="ow"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;

&lt;span class="c1"&gt;-- special windows&lt;/span&gt;
&lt;span class="nf"&gt;myManageHook&lt;/span&gt; &lt;span class="ow"&gt;=&lt;/span&gt; &lt;span class="n"&gt;composeAll&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="n"&gt;className&lt;/span&gt; &lt;span class="o"&gt;=?&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;MPlayer&amp;quot;&lt;/span&gt;                &lt;span class="o"&gt;--&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;doFloat&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;className&lt;/span&gt; &lt;span class="o"&gt;=?&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Gimp-2.6&amp;quot;&lt;/span&gt;               &lt;span class="o"&gt;--&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;doFloat&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;className&lt;/span&gt; &lt;span class="o"&gt;=?&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Gnome-panel&amp;quot;&lt;/span&gt;            &lt;span class="o"&gt;--&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;doIgnore&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;className&lt;/span&gt; &lt;span class="o"&gt;=?&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;XVkbd&amp;quot;&lt;/span&gt;                  &lt;span class="o"&gt;--&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;doIgnore&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;className&lt;/span&gt; &lt;span class="o"&gt;=?&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Cellwriter&amp;quot;&lt;/span&gt;             &lt;span class="o"&gt;--&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;doIgnore&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;className&lt;/span&gt; &lt;span class="o"&gt;=?&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Gtkdialog&amp;quot;&lt;/span&gt;              &lt;span class="o"&gt;--&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;doFloat&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;resource&lt;/span&gt;  &lt;span class="o"&gt;=?&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;desktop_window&amp;quot;&lt;/span&gt;         &lt;span class="o"&gt;--&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;doIgnore&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;className&lt;/span&gt;  &lt;span class="o"&gt;=?&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Xmessage&amp;quot;&lt;/span&gt;              &lt;span class="o"&gt;--&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;doCenterFloat&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;className&lt;/span&gt; &lt;span class="o"&gt;=?&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Unity-2d-panel&amp;quot;&lt;/span&gt;         &lt;span class="o"&gt;--&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;doIgnore&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;isFullscreen&lt;/span&gt;                          &lt;span class="o"&gt;--&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;doFullFloat&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;isDialog&lt;/span&gt;                              &lt;span class="o"&gt;--&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;doCenterFloat&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=?&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;RSSOwl&amp;quot;&lt;/span&gt;                     &lt;span class="o"&gt;--&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;doIgnore&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=?&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Dbeaver&amp;quot;&lt;/span&gt;                    &lt;span class="o"&gt;--&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;doIgnore&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=?&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Xmind-bin&amp;quot;&lt;/span&gt;                  &lt;span class="o"&gt;--&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;doIgnore&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=?&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;AptanaStudio3&amp;quot;&lt;/span&gt;              &lt;span class="o"&gt;--&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;doIgnore&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;resource&lt;/span&gt; &lt;span class="o"&gt;=?&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;sun-awt-X11-XDialogPeer&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;--&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;doCenterFloat&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=?&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;screenkey&amp;quot;&lt;/span&gt;                  &lt;span class="o"&gt;--&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;doIgnore&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;className&lt;/span&gt; &lt;span class="o"&gt;=?&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Gloobus-preview&amp;quot;&lt;/span&gt;        &lt;span class="o"&gt;--&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;doCenterFloat&lt;/span&gt;
    &lt;span class="c1"&gt;--                                      x y w h&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;scratchpadManageHook&lt;/span&gt; &lt;span class="o"&gt;$&lt;/span&gt; &lt;span class="kt"&gt;W&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="kt"&gt;RationalRect&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="mf"&gt;0.42&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;manageDocks&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;+&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;manageHook&lt;/span&gt; &lt;span class="n"&gt;defaultConfig&lt;/span&gt;

&lt;span class="c1"&gt;-- let Gnome know about Xmonad actions&lt;/span&gt;
&lt;span class="nf"&gt;myLogHook&lt;/span&gt; &lt;span class="ow"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ewmhDesktopsLogHookCustom&lt;/span&gt; &lt;span class="n"&gt;scratchpadFilterOutWorkspace&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;updatePointer&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;Relative&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nf"&gt;myConfig&lt;/span&gt; &lt;span class="ow"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ewmh&lt;/span&gt; &lt;span class="n"&gt;defaultConfig&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;terminal&lt;/span&gt;           &lt;span class="ow"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;terminator&amp;quot;&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;borderWidth&lt;/span&gt;        &lt;span class="ow"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;normalBorderColor&lt;/span&gt;  &lt;span class="ow"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;black&amp;quot;&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;focusedBorderColor&lt;/span&gt; &lt;span class="ow"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;orange&amp;quot;&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;focusFollowsMouse&lt;/span&gt;  &lt;span class="ow"&gt;=&lt;/span&gt; &lt;span class="kt"&gt;True&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;modMask&lt;/span&gt;            &lt;span class="ow"&gt;=&lt;/span&gt; &lt;span class="n"&gt;mod4Mask&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;keys&lt;/span&gt;               &lt;span class="ow"&gt;=&lt;/span&gt; &lt;span class="n"&gt;myKeys&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;mouseBindings&lt;/span&gt;      &lt;span class="ow"&gt;=&lt;/span&gt; &lt;span class="n"&gt;myMouseBindings&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;layoutHook&lt;/span&gt;         &lt;span class="ow"&gt;=&lt;/span&gt; &lt;span class="n"&gt;myLayout&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;manageHook&lt;/span&gt;         &lt;span class="ow"&gt;=&lt;/span&gt; &lt;span class="n"&gt;myManageHook&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;startupHook&lt;/span&gt;        &lt;span class="ow"&gt;=&lt;/span&gt; &lt;span class="n"&gt;gnomeRegister&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;-- need to override ewmh&amp;#39;s logHook cause I&amp;#39;m using Scratchpad&lt;/span&gt;
&lt;span class="nf"&gt;main&lt;/span&gt; &lt;span class="ow"&gt;=&lt;/span&gt; &lt;span class="n"&gt;xmonad&lt;/span&gt; &lt;span class="o"&gt;$&lt;/span&gt; &lt;span class="n"&gt;myConfig&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;logHook&lt;/span&gt;            &lt;span class="ow"&gt;=&lt;/span&gt; &lt;span class="n"&gt;myLogHook&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">joe di castro</dc:creator><pubDate>Sat, 26 Nov 2011 00:00:00 +0100</pubDate><guid>http://joedicastro.com/productividad-en-el-escritorio-linux-xmonad.html</guid><category>linux</category><category>ubuntu</category><category>unity</category><category>tiling</category><category>twm</category><category>productividad</category><category>xmonad</category><category>gnome</category><category>haskell</category></item><item><title>Productividad en el escritorio Linux: Tiling</title><link>http://joedicastro.com/productividad-en-el-escritorio-linux-tiling.html</link><description>&lt;p&gt;Los &lt;strong&gt;Gestores de Ventanas de Mosaico&lt;/strong&gt; (&lt;a href="http://en.wikipedia.org/wiki/Tiling_window_manager"&gt;Tiling Windows Manager&lt;/a&gt;) son el 
gran desconocido entre la mayoría de usuarios de Linux. Y sin embargo, a mi 
juicio, suponen el salto más importante en productividad en el escritorio linux 
que se haya producido en mucho tiempo. Permiten manejar todo el escritorio sin 
apenas despegar las manos del teclado y sin verse relegado a emplear únicamente 
la consola. Las ventanas se distribuyen ellas solas de forma automática por la 
pantalla y no es necesario emplear el ratón para moverlas y redimensionarlas 
(aunque puede seguir empleándose, naturalmente).&lt;/p&gt;
&lt;p&gt;A diferencia de un gestor de ventanas tradicional, a los que estamos normalmente 
acostumbrados, las ventanas no se apilan y flotan unas encima de otras, si no 
que se redistribuyen por toda la pantalla de acorde a un esquema previo (variable) 
sin solaparse entre ellas, quedando todas a la vista de forma simultanea. De ahí 
el símil del mosaico, donde el mismo seria el escritorio y donde las ventanas 
serian las teselas que lo componen. Puede no ser fácil visualizar de entrada en 
que consiste exactamente esto y como funciona, luego los vídeos nos ayudarán a 
entender mejor de lo que estoy hablando. Aunque uno no aprecia realmente las 
ventajas que aportan hasta que prueba uno. &lt;/p&gt;
&lt;h2 id="+que_ventajas_tienen"&gt;¿Que ventajas tienen?&lt;/h2&gt;
&lt;p&gt;Primero mencionar que esto no es una idea nueva, ni mucho menos, esto ya lo 
inventó en 1981 &lt;strong&gt;Xerox&lt;/strong&gt; (el inventor a su vez de los entornos de ventanas) e 
incluso MS Windows 1.0 lo empleaba. La razón de que algo desarrollado desde hace
dos décadas aún no haya llamado demasiado la atención hasta ahora, es bien 
sencilla, el triunfo de un dispositivo de entrada más amigable e intuitivo que 
el teclado: el ratón. La metáfora de el entorno de ventanas con el escritorio 
junto con la del ratón como la extensión de nuestro brazo, propiciaba que fuera 
lo más natural emplearlo para mover las ventanas y redimensionarlas. Pero que 
sea más fácil o intuitivo no quiere decir que sea más eficiente, nadie en su sano 
juicio escribiría un documento empleando el ratón sobre un teclado virtual ni 
realizaría retoque fotográfico empleando únicamente el teclado. ¿Pero cuantos 
dirían que el teclado es el medio más eficiente para manejar las ventanas?&lt;/p&gt;
&lt;p&gt;En una pantalla de grandes dimensiones y elevada resolución (e.g. un 
monitor de 24" y 1920x1200) es muy frecuente andar redimensionando continuamente 
las ventanas para acomodarlas y redistribuirlas dentro del escritorio. Nos sobra 
espacio por todos los lados y la mayoría de las aplicaciones que en monitores y 
resoluciones menores empleábamos maximizadas, ahora son incomodas de usar a 
pantalla completa (e.g. navegador web). ¿No sería útil que las ventanas se 
recolocaran y redimensionaran automáticamente por si solas? Más o menos esto es 
lo que viene a hacer un gestor de ventanas de mosaico. &lt;/p&gt;
&lt;p&gt;Pero cuales son las ventajas reales de este sistema:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Las ventanas se organizan solas&lt;/strong&gt;, muchas veces no necesitas mover o 
redimensionar una ventana, simplemente aparece en un lugar adecuado y con las 
dimensiones adecuadas. Una vez le que coges el truco te organizas de manera que 
esto ocurre con cierta naturalidad.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Se aprovecha todo el espacio de la pantalla&lt;/strong&gt;. Las ventanas se ajustan a todo 
el espacio libre disponible del escritorio. Aún así pueden emplearse paneles, 
docks, ...&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Las ventanas normalmente apenas tienen marco y carecen de barra de titulo y 
decoraciones, por lo tanto se ahorra espacio. Combinado con un menú integrado 
como el &lt;em&gt;Global Menu&lt;/em&gt; de Unity, &lt;strong&gt;se ahorra mucho espacio&lt;/strong&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;No es un método excluyente&lt;/strong&gt;, aún se pueden emplear con toda normalidad las 
ventanas flotantes como habitualmente. Incluso pueden convivir entre ellas sin 
problema alguno.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;En un sistema de múltiples monitores se facilita mucho el manejo de las 
múltiples ventanas&lt;/strong&gt; y el tener simultáneamente abiertas un número elevado de 
ellas es algo realmente sencillo. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Es posible automatizar el tamaño, posición y escritorio virtual en donde se 
situara la ventana(s) de una aplicación al iniciarse&lt;/strong&gt;, lo que abre un mundo de 
posibilidades. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Es posible tener múltiples escritorios virtuales (usualmente 9 por monitor) 
con características distintas en cada uno&lt;/strong&gt;. Puede ser un esquema distinto 
(desde una simple rejilla a un escritorio normal) o un escritorio para cada tarea 
(e.g. 1 - navegar, 2 - correo y redes sociales, 3 - trabajo, 4 - terminales, ...)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Mover las ventanas, redimensionarlas, lanzar aplicaciones, cerrarlas, ... y 
manejar los escritorios virtuales desde el teclado&lt;/strong&gt; es mucho más eficiente que 
emplear el ratón para lo mismo.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Te olvidas de buscar una ventana entre la pila de ventanas flotantes&lt;/strong&gt; sobre 
el escritorio, es sencillo incluso encontrar una ventana dentro de otro 
escritorio virtual (con unos gestores más que otros). Los escritorios modernos 
permiten mostrar un mosaico con todas las aplicaciones abiertas (Exposé, Scale, 
...), ¿pero que ocurre cuando tienes abiertas cerca de 30? con un twm la localizas enseguida si lo configuras adecuadamente, en mi caso menos de 2 segundos.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Te permite organizar las ventanas en función de múltiples patrones distintos:&lt;/strong&gt; 
rejillas, columnas, filas, espirales, por pestañas, etc... de forma automática, 
acomodándose a múltiples situaciones distintas.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Se pueden emplear de forma autónoma, sin un escritorio detrás&lt;/strong&gt; (gnome, kde, 
...) lo que permite tener un sistema muy ligero ideal para equipos poco potentes. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Puede ser una manera de mejorar la accesibilidad del escritorio&lt;/strong&gt; para 
aquellos que encuentren dificultades para manejar un ratón pero puedan defenderse 
con un teclado.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="inconvenientes"&gt;Inconvenientes&lt;/h2&gt;
&lt;p&gt;No son para todo el mundo. Soy plenamente consciente de ello, una buena mayoría 
de los usuarios son reticentes a aprenderse los atajos de teclado de una 
aplicación (hay quien no sabe cortar y pegar desde él), así que entiendo 
perfectamente que siquiera lleguen a plantearse el emplearlos. De hecho los 
tímidos avances que están realizando los escritorios en este sentido implican el 
uso del ratón para implantar un sucedáneo de este sistema. También es una 
cuestión de gustos, habrá a quien simplemente la desagradará el como funciona 
este sistema.&lt;/p&gt;
&lt;p&gt;Por otro lado los profesionales multimedia que requieren un uso elevado del ratón 
probablemente prefieran seguir empleando un gestor de ventanas tradicional, 
aunque los gestores de mosaico pueden moverse con soltura en este entorno. &lt;/p&gt;
&lt;p&gt;También es cierto que la mayoría de ellos requieren un esfuerzo por nuestra 
parte para configurarlos a nuestro gusto. Aunque es precisamente esto lo que nos 
permite configurarlos exactamente a nuestro gusto, con muchas posibilidades de 
configuración. Pero es una barrera de entrada importante para los gestores más 
potentes y completos. Alguno hasta requiere conocimientos en algún lenguaje de 
programación (C, Lua, Haskell)&lt;/p&gt;
&lt;p&gt;Aunque por un lado pueden suponer una ventaja en la accesibilidad a determinados 
discapacitados, pueden suponer un escollo para otros, pues no están tan adaptados 
como puedan estarlo los escritorios tradicionales para determinadas 
discapacidades.&lt;/p&gt;
&lt;h2 id="tipos_de_gestores"&gt;Tipos de gestores&lt;/h2&gt;
&lt;p&gt;Básicamente existen dos tipos de gestores de ventanas de mosaico, en función de 
el modo de organización de las ventanas. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Manuales&lt;/em&gt;&lt;/strong&gt;, requieren que el usuario sea quien decida la posición (a veces 
el tamaño) de las ventanas, con el inconveniente de la perdida de tiempo a costa 
de lograr un control más preciso.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Automáticos&lt;/em&gt;&lt;/strong&gt;, ajustan automáticamente la posición y el tamaño de las 
ventanas en función del esquema por defecto. Posteriormente podemos variar tanto 
el esquema como la posición y tamaño de las ventanas individuales.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="adaptaci+n_de_la_idea_en_los_escritorios_m+s_comunes"&gt;Adaptación de la idea en los escritorios más comunes&lt;/h2&gt;
&lt;p&gt;Tal y como ocurre con los lanzadores de aplicaciones, los escritorios más 
tradiciones de linux comienzan a incorporar esta idea a sus desarrollos, en 
mayor o menor medida. Unity, Compiz, Gnome y KDE se han atrevido a dar un paso 
en esta dirección en sus últimas versiones:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Compiz Grid&lt;/strong&gt;, es un plugin de Compiz que permite realizar un tiling 
primitivo, empleando el ratón o el teclado. Divide la pantalla en una rejilla de 
3 x 3 y permite que las ventanas se ajusten al tamaño de una cuadricula o varias. 
Manejarlo desde el teclado es muy sencillo, simplemente pulsamos Ctrl + Alt + una 
tecla del teclado numérico del 1 al 9 según la cuadricula a la que la queramos 
ajustar la ventana. Para cambiar el tamaño de la ventana mantenemos pulsadas las 
teclas Ctrl + Alt y volvemos a pulsar la tecla numérica las veces que sea 
necesario hasta tener el tamaño que deseemos. Es decir, si pulsamos Ctrl+Alt+7 
nos sitúa la ventana en la parte superior izquierda de la pantalla ocupando 1/9 
de la misma. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Unity&lt;/strong&gt;, emplea el plugin Grid de compiz anterior, pero modificado desde la 
versión 11.10 para que se comporte como ellos desean. En este vídeo se puede ver 
como se comporta este plugin manejándolo desde el teclado. Personalmente opino 
que mejor lo hubieran dejado como estaba.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div style="text-align:center"&gt;
&lt;iframe src="http://player.vimeo.com/video/32746967?title=0&amp;amp;byline=0&amp;amp;portrait=0" 
width="700" height="438"&gt;
&lt;/iframe&gt;
&lt;p&gt;Demostración del tiling básico del plugin
de Compiz, Grid, en Ubuntu 11.10 con Unity&lt;/p&gt;
&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Gnome Shell&lt;/strong&gt;, tiene un tiling muy básico parecido al que emplea Unity. Te 
permite maximizar una ventana o ajustarla a la mitad derecha/izquierda de la 
pantalla simplemente arrastrándola al borde correspondiente.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;KDE&lt;/strong&gt; a partir de la versión 4.4 tiene un tiling bastante conseguido, aunque 
no tan avanzado como los gestores dedicados. Desde luego es el escritorio que ha 
apostado más fuerte por este sistema y el que mejores resultados obtiene. Aunque 
no viene activarlo por defecto, es necesario activarlo a mano. De momento solo 
permite elegir entre dos esquemas predeterminados: columnas y espiral (fibonacci).&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="aplicaciones_que_funcionan_como_un_gestor"&gt;Aplicaciones que funcionan como un gestor&lt;/h3&gt;
&lt;p&gt;Para aquellos que no quieran instalar un gestor o no empleen uno de los entornos 
de escritorio anteriores, siempre existe la posibilidad de emplear alguna de 
estas aplicaciones que emulan el comportamiento básico de un gestor de ventanas
de mosaico. Ambos son del tipo manual.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://ssokolow.github.com/quicktile/"&gt;QuickTile&lt;/a&gt;, es un script en python que ofrece las mismas funcionalidades 
que el plugin Grid de Compiz. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.giuspen.com/x-tile/"&gt;x tile&lt;/a&gt;, es una aplicación instalable (viene en los repositorios de 
algunas distros) que ofrece más opciones que la anterior. &lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="gestores_m+s_populares"&gt;Gestores más populares&lt;/h2&gt;
&lt;p&gt;Hay muchos y para todos los gustos. Incluso los hay disponibles para otros SOs 
como Mac OS X o Windows (es muy famoso el WinSplit-Revolution para Windows, en 
el que se basa el plugin Grid, aunque los primeros gestores para linux son del 
2000 y WinSplit aparece en el 2007). Me centrare aquí solo en los más populares.&lt;/p&gt;
&lt;h3 id="awesomeaw"&gt;&lt;a href="http://awesome.naquadah.org/"&gt;awesome&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Automático. Escrito en &lt;em&gt;C&lt;/em&gt; y &lt;em&gt;Lua&lt;/em&gt;, es configurable y extensible en &lt;em&gt;Lua&lt;/em&gt;. Basado 
en &lt;strong&gt;dwm&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Uno de los dos grandes, junto con &lt;strong&gt;Xmonad&lt;/strong&gt;. Es quizá el que más opciones 
presenta hoy en día. Está basado en XCB en vez de Xlib, lo que le proporciona 
mayor agilidad. Aporta su propia barra de información, bandeja del sistema 
(systray) y lanzador de aplicaciones integrado. Tiene un soporte de ratón 
superior a la competencia. Pero su desarrollo no es aún solido, varía demasiado a 
lo largo de las distintas versiones y te obliga a reconfigurarlo cada vez que 
sale una nueva. Le he dedicado un &lt;a href="http://joedicastro.com/productividad-en-el-escritorio-linux-awesome.html"&gt;articulo completo&lt;/a&gt; &lt;/p&gt;
&lt;br /&gt;

&lt;h3 id="bluetilebt"&gt;&lt;a href="http://bluetile.org/"&gt;bluetile&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Automático. Escrito en &lt;em&gt;Haskell&lt;/em&gt;. Basado en &lt;strong&gt;Xmonad&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Es uno de los más sencillos de utilizar y de los más sencillos de probar. Es el 
más adecuado para probar por primera vez para los que se inician en esto. Está 
pensado para emplear conjuntamente con Gnome y pensando para que los están 
acostumbrados al ratón lo usen indistintamente con el teclado. En el siguiente 
vídeo realizado por su autor, Jan Vornberger, se puede ver como funciona:&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;iframe src="http://player.vimeo.com/video/6661713?title=0&amp;amp;byline=0&amp;amp;portrait=0" width="667" height="500"&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;br /&gt;

&lt;h3 id="dwmdwm"&gt;&lt;a href="http://dwm.suckless.org/"&gt;dwm&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Automático. Escrito, configurable y extensible en &lt;em&gt;C&lt;/em&gt;. &lt;/p&gt;
&lt;p&gt;Uno de los más ligeros, rápidos y simples. Su configuración se hace modificando 
su código fuente en &lt;em&gt;C&lt;/em&gt; y luego hay que recompilarlo y reiniciarlo. Esto lo 
limita a usuarios avanzados con conocimientos de programación. Su diseño 
minimalista ha sido la inspiración para los dos más grandes: Awesome y Xmonad. &lt;/p&gt;
&lt;p&gt;Para lanzar las aplicaciones se desarrolló &lt;strong&gt;dmenu&lt;/strong&gt; un lanzador basado en texto, 
que es muy empleado en otros gestores. Funciona al igual que los lanzadores 
gráficos como Gnome Do. &lt;/p&gt;
&lt;br /&gt;

&lt;h3 id="i3i3"&gt;&lt;a href="http://i3wm.org/"&gt;i3&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Manual. Escrito en &lt;em&gt;C&lt;/em&gt; y configurable con ficheros de texto. Basado en &lt;strong&gt;wmii&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Muy sencillo y que presume de estar bien documentado. Fácil de usar y configurar. 
Es manual, lo que le permite crear esquemas muy flexibles y personalizados, pero 
que por otro lado le resta comodidad. &lt;/p&gt;
&lt;br /&gt;

&lt;h3 id="wmiiwmii"&gt;&lt;a href="http://wmii.suckless.org/"&gt;wmii&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Manual. Escrito en &lt;em&gt;C&lt;/em&gt; y configurable en &lt;em&gt;bash&lt;/em&gt;, &lt;em&gt;rc&lt;/em&gt;, &lt;em&gt;ruby&lt;/em&gt; o &lt;em&gt;python&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Escrito por el mismo desarrollador que &lt;strong&gt;dwm&lt;/strong&gt;. Digamos que es el gestor 
equivalente a &lt;strong&gt;dwm&lt;/strong&gt; pero manual. &lt;/p&gt;
&lt;br /&gt;

&lt;h3 id="xmonadxmnd"&gt;&lt;a href="http://xmonad.org/"&gt;xmonad&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Automático. Escrito, extensible y configurable en &lt;em&gt;Haskell&lt;/em&gt;. Inspirado en &lt;strong&gt;dwm&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Muy potente, estable y con muchas opciones. Es altamente personalizable, con 
muchas extensiones disponibles. Se integra muy bien con Gnome y KDE. Tiene un 
desarrollo muy activo y una gran comunidad de usuarios detrás. Es el que empleo 
desde hace meses y le he dedicado un &lt;a href="http://joedicastro.com/productividad-en-el-escritorio-linux-xmonad.html"&gt;articulo completo&lt;/a&gt;.&lt;/p&gt;
&lt;br /&gt;

&lt;p&gt;Todos estos gestores están incluidos en los repositorios de Ubuntu, Debian, 
Gentoo y Arch Linux, y la mayoría están disponibles también en otras 
distribuciones. &lt;/p&gt;
&lt;p&gt;Como curiosidad, mencionar otros dos, que aunque no son muy populares, están desarrollados en Python: &lt;a href="http://sourceforge.net/projects/tritium/"&gt;tritium&lt;/a&gt; y &lt;a href="http://qtile.org/"&gt;qtile&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">joe di castro</dc:creator><pubDate>Fri, 25 Nov 2011 00:00:00 +0100</pubDate><guid>http://joedicastro.com/productividad-en-el-escritorio-linux-tiling.html</guid><category>linux</category><category>ubuntu</category><category>unity</category><category>tiling</category><category>twm</category><category>productividad</category><category>xmonad</category></item><item><title>Productividad en el escritorio Linux: Introducción</title><link>http://joedicastro.com/productividad-en-el-escritorio-linux-introduccion.html</link><description>&lt;p&gt;En el último lustro se ha producido una renovación en el &lt;a href="http://es.wikipedia.org/wiki/Escritorio_Linux"&gt;escritorio Linux&lt;/a&gt; buscando innovar, mejorar su funcionamiento, equiparlo a las evoluciones de 
otros SOs (Mac OS X) y porque no, intentar acercar a más usuarios al mundo linux. &lt;/p&gt;
&lt;p&gt;Quizá la primera innovación importante fue el gestor de ventanas &lt;a href="http://es.wikipedia.org/wiki/Compiz"&gt;Compiz&lt;/a&gt; 
en el 2006 que tuvo una elevada repercusión en su momento por lo novedoso y lo 
espectacular de sus efectos 3D empleando OpenGL. También ese mismo año hacia su 
aparición &lt;a href="http://es.wikipedia.org/wiki/LXDE"&gt;LXDE&lt;/a&gt;, un entorno de escritorio ligero y rápido que supone un 
paso adelante dentro de las opciones poco ávidas de recursos. Luego dos años más 
tarde, &lt;a href="http://es.wikipedia.org/wiki/KDE"&gt;KDE&lt;/a&gt; decide renovarse por completo con un nuevo diseño y nueva 
tecnología, convirtiéndose en el escritorio más avanzado del momento. Y este año 
&lt;a href="http://es.wikipedia.org/wiki/GNOME"&gt;Gnome&lt;/a&gt; ha presentado también un gran cambio, no tan radical a nivel 
tecnologico como el de KDE, pero si presentando un cambio de paradigma con su 
&lt;a href="http://es.wikipedia.org/wiki/GNOME_Shell"&gt;Gnome Shell&lt;/a&gt;, aún algo inmaduro. &lt;a href="http://es.wikipedia.org/wiki/Ubuntu"&gt;Ubuntu&lt;/a&gt; se ha desmarcado de 
gnome creando su propia alternativa empleando su propio Shell, &lt;a href="http://es.wikipedia.org/wiki/Unity_%28entorno_de_escritorio%29"&gt;Unity&lt;/a&gt;, 
con un enfoque parecido.&lt;/p&gt;
&lt;p&gt;Todos estos cambios han traído avances tanto en el diseño como en la 
espectacularidad del escritorio linux, no teniendo nada que envidiarle en diseño 
ni usabilidad a la referencia tradicional en este campo, Mac OS X. Bien, ahora 
tenemos unos entornos de escritorio elegantes, completos y amigables, y cada vez 
más orientados al usuario final. De hecho, se ha evolucionado tanto en este 
sentido, que hemos pasado del tópico de que Linux era solo para expertos frente 
a una linea de comandos, a la situación actual en la que probablemente sea el 
escritorio más amigable y con menor curva de aprendizaje (para aquel que se 
inicia y nunca haya tenido contacto previo con un ordenador). &lt;/p&gt;
&lt;h2 id="+se_ha_mejorado_la_productividad"&gt;¿Se ha mejorado la productividad?&lt;/h2&gt;
&lt;p&gt;¿Pero que ocurre con los profesionales? ¿En que ha mejorado para ellos? Y cuando 
hablo de profesionales me refiero a todos aquellos que pasan la mayor parte de 
su jornada delante de la pantalla de un ordenador. ¿Que han aportado todos estos 
cambios a la productividad de estos usuarios, a su trabajo diario? Personalmente 
opino que estos cambios no han aportado absolutamente nada, puede que incluso 
hayan supuesto un paso atrás en algunos casos. Personalmente, &lt;strong&gt;Unity&lt;/strong&gt; me 
parece una broma de mal gusto, está bien que se piense en los usuarios domésticos 
(aquellos que principalmente hacen uso de internet y multimedia), pero por favor, 
el resto no merecemos ser tratados como idiotas. Y Gnome Shell, bueno, dentro de 
lo malo, tiene la excusa de ser aún un desarrollo muy temprano, y aparenta ser 
más prometedor.&lt;/p&gt;
&lt;p&gt;Desde mi punto de vista, los dos grandes avances en productividad en el 
escritorio linux que se han producido en los últimos años, provienen de dos 
ideas que han tenido un éxito muy dispar, pero que tienen en común estar 
basados en proyectos muy pequeños lejos de la repercusión de los grandes 
entornos de escritorio. Estas dos ideas son los &lt;strong&gt;Lanzadores de aplicaciones&lt;/strong&gt; y
 los &lt;strong&gt;Gestores de ventanas de mosaico&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id="lanzadores_de_aplicaciones"&gt;Lanzadores de aplicaciones.&lt;/h2&gt;
&lt;p&gt;Es una idea genial, &lt;em&gt;lanzar aplicaciones a partir de su nombre&lt;/em&gt;, simple y 
rápido. Antes de nada, dejar claro que el ratón es enemigo de la productividad, 
cualquiera con la suficiente experiencia sabe que realizar acciones a través del 
teclado es más efectivo que realizar las mismas a través del ratón. Alguien que 
conozca los atajos de teclado de una aplicación realizara el mismo trabajo en 
menos tiempo que otro que deba emplear el ratón para todo. Y el uso del ratón es 
además el principal causante del &lt;a href="http://es.wikipedia.org/wiki/S%C3%ADndrome_del_t%C3%BAnel_carpiano"&gt;Sindrome del túnel carpiano&lt;/a&gt; entre los 
informáticos, y los que lo hemos sufrido -en mayor o menor medida- sabemos que 
no es ninguna broma. De hecho aunque los &lt;a href="http://es.wikipedia.org/wiki/Dock"&gt;docks&lt;/a&gt; son visualmente más 
atractivos y repletos de llamativos iconos, no son tan eficientes como los 
lanzadores cuando manejamos un buen número de distintas aplicaciones.&lt;/p&gt;
&lt;p&gt;La idea del lanzador de aplicaciones proviene de la aplicación &lt;a href="http://es.wikipedia.org/wiki/Quicksilver_%28software%29"&gt;Quicksilver&lt;/a&gt; 
desarrollada en 2006 para el SO de Apple. Dos años después aparecería la primera 
aplicación similar para linux, &lt;strong&gt;Gnome Do&lt;/strong&gt;. Estas aplicaciones han tenido un 
gran éxito y son de sobra conocidas, por lo que no voy a profundizar más en
ellas, simplemente apuntar que gracias a los plugins realizan bastantes más 
tareas que lanzar aplicaciones. Actualmente para linux hay disponibles los 
siguientes lanzadores de aplicaciones:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://do.davebsd.com/"&gt;Gnome Do&lt;/a&gt;, programado en Mono, es probablemente el mejor lanzador 
disponible hoy día. Es muy rápido y con gran cantidad de plugins. &lt;/li&gt;
&lt;li&gt;&lt;a href="https://launchpad.net/synapse-project"&gt;Synapse&lt;/a&gt;, programado en Vala. Es una buena alternativa a Do, 
rapidísimo y muy ligero.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.launchy.net/"&gt;Launchy&lt;/a&gt;, es multiplataforma y está escrito en C++. Más popular en 
sistemas Windows que en Linux.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://katapult.kde.org/"&gt;Katapult&lt;/a&gt;, es un lanzador pensado para KDE. Escrito en C++&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.simonschneegans.de/?page_id=12"&gt;Gnome Pie&lt;/a&gt;, a medio camino entre un lanzador y un dock. Más espectacular 
que eficaz, escrito en Vala.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://kaizer.se/wiki/kupfer/"&gt;Kupfer&lt;/a&gt;, la última incorporación notable. Escrito en Python. Es el 
que empleo actualmente. Completo, rápido, ligero y no requiere de un 
&lt;a href="http://es.wikipedia.org/wiki/Gestor_de_composici%C3%B3n_de_ventanas"&gt;composition manager&lt;/a&gt; para funcionar correctamente.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Tal es el éxito que han tenido estas aplicaciones que tanto Gnome 3 como Unity 
lo incluyen como pilar básico en sus Shells (combinado con un dock) y KDE 4 
integra una aplicación similar denominada &lt;strong&gt;KRunner&lt;/strong&gt;.&lt;/p&gt;
&lt;h2 id="gestores_de_ventanas_de_mosaico"&gt;Gestores de ventanas de mosaico.&lt;/h2&gt;
&lt;p&gt;Merecen un &lt;a href="http://joedicastro.com/productividad-en-el-escritorio-linux-tiling.html"&gt;articulo aparte&lt;/a&gt; para hablar de ellos.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">joe di castro</dc:creator><pubDate>Thu, 24 Nov 2011 00:00:00 +0100</pubDate><guid>http://joedicastro.com/productividad-en-el-escritorio-linux-introduccion.html</guid><category>linux</category><category>unity</category><category>gnome</category><category>kde</category><category>productividad</category><category>desktop</category></item></channel></rss>